{"version":3,"sources":["actions/APIActions.js","reducers/API.js","reducers/index.js","components/Header.js","actions/index.js","lib/xhr.js","components/APIList.js","components/EndpointList.js","components/QueryParameters.js","components/ResultItem.js","components/ResultCard.js","components/QueryResults.js","components/App.js","reportWebVitals.js","index.js"],"names":["APIActions","getAPISwagger","setActiveAPI","getAPIEndpoints","setActiveEndpoint","getEndpointParameters","setParams","setQuery","setQueryResults","initialState","API","activeAPI","APISwagger","APIEndpoints","activeEndpoints","EndpointParameters","URLParameters","queries","queryResults","state","action","type","actionTypes","payload","api","parameters","apiName","endpoint","path","data","queryPath","query","queryResult","status","rootReducer","combineReducers","Header","className","src","process","alt","allActions","xhr","axios","create","baseURL","APIList","props","dispatch","useDispatch","apiSwagger","useSelector","history","useHistory","useEffect","get","then","r","paths","apiMatch","Object","keys","filter","split","length","push","Array","from","Set","map","apiItem","index","to","Name","EndpointList","endpointMatch","slice","join","replace","hasOwnProperty","undefined","pathParts","endpointPath","QueryParameters","pathString","favoriteParameters","pathData","favoritesInParameters","parameter","includes","name","parametersMinusFavorites","match","forEach","fav","sortedParameters","onSubmit","e","preventDefault","queryParameters","entries","entry","sort","queryPathForAPI","value","id","onChange","oldFieldName","target","substring","newFieldName","newQueryData","changeFieldName","param","disabled","changeValue","onClick","fieldName","removeField","firstUnusedField","addField","ResultItem","property","title","subProp","idx","subProperty","subValue","stringifiedValue","JSON","stringify","validator","isURL","href","ResultCard","imageData","url","result","QueryResults","results","App","useRouteMatch","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","enhancer","compose","persistState","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99c1804b.chunk.js","sourcesContent":["const APIActions = {\r\n  getAPISwagger: \"GET_API_SWAGGER\",\r\n  setActiveAPI: \"SET_ACTIVE_API\",\r\n  getAPIEndpoints: \"GET_API_ENDPOINTS\",\r\n  setActiveEndpoint: \"SET_ACTIVE_ENDPOINT\",\r\n  getEndpointParameters: \"GET_API_PARAMETERS\",\r\n  setParams: \"SET_URL_PARAMETERS\",\r\n  setQuery: \"SET_QUERY\",\r\n  setQueryResults: \"SET_QUERY_RESULTS\",\r\n};\r\nexport default APIActions;\r\n","import actionTypes from \"../actions/APIActions.js\";\r\nconst initialState = {\r\n  API: {\r\n    activeAPI: null,\r\n    APISwagger: null,\r\n    APIEndpoints: null,\r\n    activeEndpoints: {},\r\n    EndpointParameters: null,\r\n    URLParameters: null,\r\n    queries: {},\r\n    queryResults: {},\r\n  },\r\n};\r\nconst API = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.getAPISwagger:\r\n      return { ...state, APISwagger: action.payload };\r\n    case actionTypes.setActiveAPI:\r\n      return { ...state, activeAPI: action.payload };\r\n    case actionTypes.getAPIEndpoints:\r\n      return {\r\n        ...state,\r\n        APIEndpoints: {\r\n          ...state.APIEndpoints,\r\n          [action.payload.api]: action.payload.parameters,\r\n        },\r\n      };\r\n    case actionTypes.setActiveEndpoint:\r\n      return {\r\n        ...state,\r\n        activeEndpoints: {\r\n          ...state.activeEndpoints,\r\n          [action.payload.apiName]: action.payload.endpoint,\r\n        },\r\n      };\r\n    case actionTypes.getEndpointParameters:\r\n      return {\r\n        ...state,\r\n        EndpointParameters: {\r\n          [action.payload.endpoint]: action.payload.parameters,\r\n        },\r\n      };\r\n    case actionTypes.setParams:\r\n      return { ...state, URLParameters: action.payload };\r\n    case actionTypes.setQuery:\r\n      return {\r\n        ...state,\r\n        queries: {\r\n          ...state.queries,\r\n          [action.payload.path]: action.payload.data,\r\n        },\r\n      };\r\n    case actionTypes.setQueryResults:\r\n      return {\r\n        ...state,\r\n        queryResults: {\r\n          ...state.queryResults,\r\n          [action.payload.queryPath]: {\r\n            queryPath: action.payload.queryPath,\r\n            query: action.payload.query,\r\n            queryResult: action.payload.queryResult,\r\n            status: action.payload.status || \"\",\r\n          },\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default API;\r\n","import API from \"./API.js\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  API,\r\n});\r\n\r\nexport default rootReducer;\r\n","import \"../styles/Header.scss\";\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <div className=\"left\">\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/logo70.png`}\r\n          alt=\"cute purple rocket ship\"\r\n        />\r\n        <h1>spaceage</h1>\r\n      </div>\r\n      <div className=\"right\">\r\n        <p>right</p>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import APIActions from \"./APIActions\";\r\nconst allActions = { APIActions };\r\nexport default allActions;\r\n","import axios from \"axios\";\r\n\r\nconst xhr = axios.create({\r\n  baseURL: (process.env.NODE_ENV !== 'production') ? process.env.REACT_APP_DEV_API_URL : process.env.REACT_APP_API_URL\r\n});\r\n\r\nexport default xhr;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport allActions from \"../actions\";\r\nimport xhr from \"../lib/xhr.js\";\r\nexport default function APIList(props) {\r\n  const dispatch = useDispatch();\r\n  const apiSwagger = useSelector((state) => state.API.APISwagger);\r\n  const activeAPI = useSelector((state) => state.API.activeAPI);\r\n  const URLParameters = useSelector((state) => state.API.URLParameters);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    xhr.get(\"/data/apis\").then((r) => {\r\n      dispatch({\r\n        type: allActions.APIActions.getAPISwagger,\r\n        payload: r.data,\r\n      });\r\n    });\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    if (apiSwagger && apiSwagger.paths) {\r\n      if (URLParameters.api) {\r\n        const apiMatch = Object.keys(apiSwagger.paths).filter(\r\n          (api) => api.split(\"/\")[1] === URLParameters.api\r\n        );\r\n        if (apiMatch.length > 0) {\r\n          dispatch({\r\n            type: allActions.APIActions.setActiveAPI,\r\n            payload: apiMatch[0].split(\"/\")[1],\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: allActions.APIActions.setActiveAPI,\r\n            payload: null,\r\n          });\r\n          history.push(\"/\");\r\n        }\r\n      } else {\r\n        dispatch({\r\n          type: allActions.APIActions.setActiveAPI,\r\n          payload: null,\r\n        });\r\n      }\r\n    }\r\n  }, [URLParameters, apiSwagger, history, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {apiSwagger?.paths && (\r\n        <nav>\r\n          {Array.from(\r\n            new Set(\r\n              Object.keys(apiSwagger.paths).map((path) => {\r\n                return path.split(\"/\")[1];\r\n              })\r\n            )\r\n          ).map((apiItem, index) => {\r\n            return (\r\n              <NavLink\r\n                to={`/${apiItem}`}\r\n                key={`apiItem-${index}`}\r\n                className={`nav ${\r\n                  activeAPI && activeAPI.Name === apiItem\r\n                    ? `active`\r\n                    : `inactive`\r\n                }`}\r\n              >\r\n                {apiItem}\r\n              </NavLink>\r\n            );\r\n          })}\r\n        </nav>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport allActions from \"../actions\";\r\nexport default function EndpointList() {\r\n  const activeAPI = useSelector((state) => state.API.activeAPI);\r\n  const apiSwagger = useSelector((state) => state.API.APISwagger);\r\n  const activeEndpoints = useSelector((state) => state.API.activeEndpoints);\r\n  const URLParameters = useSelector((state) => state.API.URLParameters);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (URLParameters && apiSwagger && activeAPI) {\r\n      const endpointMatch = Object.keys(apiSwagger.paths).filter((path) => {\r\n        const pathArray = path.split(\"/\");\r\n        if (pathArray[1] !== URLParameters.api) {\r\n          return false;\r\n        }\r\n        const pathString = path\r\n          .split(\"/\")\r\n          .slice(2, -1)\r\n          .join(\":\")\r\n          .replace(\"{id}\", \"id\");\r\n        if (\r\n          pathString === URLParameters.endpoint ||\r\n          URLParameters.endpoint === URLParameters.api\r\n        ) {\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n      if (\r\n        endpointMatch.length > 0 &&\r\n        (!activeEndpoints || !activeEndpoints.hasOwnProperty(URLParameters.api))\r\n      ) {\r\n        dispatch({\r\n          type: allActions.APIActions.setActiveEndpoint,\r\n          payload: { apiName: activeAPI, endpoint: URLParameters.endpoint },\r\n        });\r\n      }\r\n      if (\r\n        endpointMatch.length > 0 &&\r\n        activeEndpoints &&\r\n        activeEndpoints.hasOwnProperty(URLParameters.api) &&\r\n        activeEndpoints[URLParameters.api] !== URLParameters.endpoint\r\n      ) {\r\n        dispatch({\r\n          type: allActions.APIActions.setActiveEndpoint,\r\n          payload: { apiName: activeAPI, endpoint: URLParameters.endpoint },\r\n        });\r\n      }\r\n      if (\r\n        URLParameters &&\r\n        activeEndpoints &&\r\n        (!URLParameters.hasOwnProperty(\"endpoint\") ||\r\n          URLParameters.endpoint === undefined) &&\r\n        activeEndpoints.hasOwnProperty(URLParameters.api)\r\n      ) {\r\n        history.push(\r\n          `/${URLParameters.api}/${activeEndpoints[URLParameters.api]}`\r\n        );\r\n      }\r\n    }\r\n  }, [\r\n    URLParameters,\r\n    dispatch,\r\n    apiSwagger,\r\n    activeAPI,\r\n    activeEndpoints,\r\n    history,\r\n  ]);\r\n  return (\r\n    <nav>\r\n      {URLParameters?.api &&\r\n        apiSwagger &&\r\n        Object.keys(apiSwagger.paths).map((path, index) => {\r\n          const pathParts = path.split(\"/\");\r\n          const endpointPath =\r\n            pathParts[2] === \"\"\r\n              ? activeAPI\r\n              : pathParts.slice(2, -1).join(\":\").replace(/[{}]/g, \"\");\r\n          if (pathParts[1] === activeAPI) {\r\n            return (\r\n              <NavLink\r\n                to={`/${activeAPI}/${endpointPath}`}\r\n                key={`endpoint-${endpointPath}-${index}`}\r\n                className={`nav ${\r\n                  URLParameters.endpoint === endpointPath\r\n                    ? `active`\r\n                    : `inactive`\r\n                }`}\r\n              >\r\n                {endpointPath}\r\n              </NavLink>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n    </nav>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport allActions from \"../actions\";\r\nimport xhr from \"../lib/xhr\";\r\n\r\nexport default function QueryParameters() {\r\n  const dispatch = useDispatch();\r\n  const apiSwagger = useSelector((state) => state.API.APISwagger);\r\n  const EndpointParameters = useSelector(\r\n    (state) => state.API.EndpointParameters\r\n  );\r\n  const URLParameters = useSelector((state) => state.API.URLParameters);\r\n  const queries = useSelector((state) => state.API.queries);\r\n  const queryPath = URLParameters\r\n    ? `${URLParameters.api}/${URLParameters.endpoint}`\r\n    : \"\";\r\n  const pathString =\r\n    URLParameters?.api && URLParameters?.endpoint\r\n      ? URLParameters.api === URLParameters.endpoint\r\n        ? URLParameters.api\r\n        : `${URLParameters.api}/${URLParameters.endpoint\r\n            .replace(\":\", \"/\")\r\n            .replace(\"id\", \"{id}\")}`\r\n      : undefined;\r\n  useEffect(() => {\r\n    if (URLParameters?.endpoint && URLParameters?.api && apiSwagger) {\r\n      const favoriteParameters = [\"search\"];\r\n      const pathData = apiSwagger.paths[`/${pathString}/`];\r\n      const parameters = [];\r\n      if (pathData?.get?.parameters && pathData.get.parameters.length > 0) {\r\n        parameters.push(...pathData.get.parameters);\r\n      }\r\n      if (pathData?.parameters && pathData.parameters.length > 0) {\r\n        parameters.push(...pathData.parameters);\r\n      }\r\n      const favoritesInParameters = parameters.filter((parameter) =>\r\n        favoriteParameters.includes(parameter.name)\r\n      );\r\n      const parametersMinusFavorites = parameters.filter((parameter) => {\r\n        let match = 0;\r\n        favoritesInParameters.forEach((fav) => {\r\n          if (fav.name === parameter.name) {\r\n            match++;\r\n          }\r\n        });\r\n        if (match > 0) {\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n      const sortedParameters = [\r\n        ...favoritesInParameters,\r\n        ...parametersMinusFavorites,\r\n      ];\r\n      dispatch({\r\n        type: allActions.APIActions.getEndpointParameters,\r\n        payload: {\r\n          endpoint: pathString,\r\n          parameters: sortedParameters,\r\n        },\r\n      });\r\n      if (sortedParameters.length === 0 && pathData.get) {\r\n        dispatch({\r\n          type: allActions.APIActions.setQueryResults,\r\n          payload: {\r\n            queryPath: pathString,\r\n            query: pathString,\r\n            queryResult: [],\r\n            status: \"searching\",\r\n          },\r\n        });\r\n        xhr.get(`/data/${pathString}/`).then((r) => {\r\n          if (r.data) {\r\n            dispatch({\r\n              type: allActions.APIActions.setQueryResults,\r\n              payload: {\r\n                queryPath: pathString,\r\n                query: pathString,\r\n                queryResult: r.data,\r\n                status: \"success\",\r\n              },\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [URLParameters, pathString, apiSwagger, dispatch]);\r\n  //check if query data has been stored for current path, if not create empty object for this path:\r\n  useEffect(() => {\r\n    if (queryPath !== \"\" && !queryPath.includes(\"undefined\")) {\r\n      const pathExists = queries ? queryPath in queries : false;\r\n      if (!pathExists) {\r\n        dispatch({\r\n          type: allActions.APIActions.setQuery,\r\n          payload: { path: queryPath, data: null },\r\n        });\r\n      }\r\n    }\r\n  }, [queries, queryPath, dispatch]);\r\n\r\n  //if query data is null, add the first APIParameter to state to use by default:\r\n  useEffect(() => {\r\n    if (\r\n      queries &&\r\n      queries[queryPath] === null &&\r\n      EndpointParameters &&\r\n      EndpointParameters[pathString] &&\r\n      EndpointParameters[pathString].length > 0\r\n    ) {\r\n      dispatch({\r\n        type: allActions.APIActions.setQuery,\r\n        payload: {\r\n          path: queryPath,\r\n          data: { [EndpointParameters[pathString][0].name]: \"\" },\r\n        },\r\n      });\r\n    }\r\n  }, [queries, queryPath, EndpointParameters, pathString, dispatch]);\r\n  const addField = () => {\r\n    const firstUnusedField = EndpointParameters[pathString].filter(\r\n      (parameter) => !Object.keys(queries[queryPath]).includes(parameter.name)\r\n    )[0].name;\r\n    dispatch({\r\n      type: allActions.APIActions.setQuery,\r\n      payload: {\r\n        path: queryPath,\r\n        data: {\r\n          ...queries[queryPath],\r\n          [firstUnusedField]: \"\",\r\n        },\r\n      },\r\n    });\r\n  };\r\n  const removeField = (e) => {\r\n    const fieldName = e.target.id.substring(0, e.target.id.length - 7);\r\n    const newQueryData = queries[queryPath];\r\n    delete newQueryData[fieldName];\r\n    dispatch({\r\n      type: allActions.APIActions.setQuery,\r\n      payload: { path: queryPath, data: newQueryData },\r\n    });\r\n  };\r\n  const changeFieldName = (e) => {\r\n    const oldFieldName = e.target.id.substring(0, e.target.id.length - 7);\r\n    const newFieldName = e.target.value;\r\n    const newQueryData = queries[queryPath];\r\n    delete newQueryData[oldFieldName];\r\n    newQueryData[newFieldName] = \"\";\r\n    dispatch({\r\n      type: allActions.APIActions.setQuery,\r\n      payload: { path: queryPath, data: newQueryData },\r\n    });\r\n  };\r\n  const changeValue = (e) => {\r\n    const newQueryData = queries[queryPath];\r\n    newQueryData[e.target.id.substring(0, e.target.id.length - 6)] =\r\n      e.target.value;\r\n    dispatch({\r\n      type: allActions.APIActions.setQuery,\r\n      payload: { path: queryPath, data: newQueryData },\r\n    });\r\n  };\r\n  const onSubmit = () => {\r\n    const queryParameters = Object.entries(queries[queryPath])\r\n      .filter((entry) => entry[1] !== \"\")\r\n      .map((entry) => `${entry[0]}=${entry[1]}`)\r\n      .sort()\r\n      .join(\"&\");\r\n    const queryPathForAPI =\r\n      URLParameters.api === URLParameters.endpoint\r\n        ? URLParameters.api\r\n        : `${URLParameters.api}/${URLParameters.endpoint}`;\r\n    dispatch({\r\n      type: allActions.APIActions.setQueryResults,\r\n      payload: {\r\n        queryPath,\r\n        query: queryParameters,\r\n        queryResult: [],\r\n        status: \"searching\",\r\n      },\r\n    });\r\n    xhr.get(`/data/${queryPathForAPI}/?${queryParameters}`).then((r) => {\r\n      if (r.data) {\r\n        dispatch({\r\n          type: allActions.APIActions.setQueryResults,\r\n          payload: {\r\n            queryPath,\r\n            query: queryParameters,\r\n            queryResult: r.data,\r\n            status: \"success\",\r\n          },\r\n        });\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      {queries &&\r\n        queries[queryPath] &&\r\n        EndpointParameters &&\r\n        EndpointParameters[pathString] && (\r\n          <form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              onSubmit();\r\n            }}\r\n          >\r\n            {Object.entries(queries[queryPath]).map((entries, index) => {\r\n              const [parameter, value] = entries;\r\n              return (\r\n                <div key={`queryItem-${index}`}>\r\n                  <select\r\n                    value={parameter}\r\n                    id={`${parameter}-select`}\r\n                    onChange={(e) => changeFieldName(e)}\r\n                  >\r\n                    {EndpointParameters[pathString] &&\r\n                      EndpointParameters[pathString].length > 0 &&\r\n                      EndpointParameters[pathString].map((param, index) => {\r\n                        const disabled =\r\n                          Object.keys(queries[queryPath]).includes(\r\n                            param.name\r\n                          ) && parameter !== param.name;\r\n                        return (\r\n                          <option\r\n                            key={`param-${index}`}\r\n                            disabled={disabled}\r\n                            id={`${param.name}-option`}\r\n                          >\r\n                            {param.name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                  </select>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={(e) => changeValue(e)}\r\n                    id={`${parameter}-input`}\r\n                  ></input>\r\n                  {index > 0 && (\r\n                    <button\r\n                      id={`${parameter}-remove`}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        removeField(e);\r\n                      }}\r\n                    >\r\n                      -\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n            {Object.keys(queries[queryPath]).length <\r\n              EndpointParameters[pathString].length && (\r\n              <p>\r\n                <button\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    addField();\r\n                  }}\r\n                >\r\n                  +\r\n                </button>\r\n              </p>\r\n            )}\r\n            <p>\r\n              <button type=\"submit\">Search</button>\r\n            </p>\r\n          </form>\r\n        )}\r\n    </>\r\n  );\r\n}\r\n","import validator from 'validator';\r\nexport default function ResultItem(props) {\r\n  const {property, value} = props;\r\n  if (value === null || value.length === 0) { return null }\r\n  if (typeof value === \"object\") {\r\n    return (\r\n      <div className=\"resultItem\">\r\n        <details>\r\n          <summary>\r\n            <p>\r\n              <span className=\"label\">\r\n                {property}\r\n                {value.name && ` (${value.name})`}\r\n                {!value.name && value.title && ` (${value.title})`}\r\n              </span>\r\n            </p>\r\n          </summary>\r\n          {Object.entries(value).map((subProp,idx)=>{\r\n            const [subProperty,subValue]=subProp;\r\n            if (subValue === null) { return null }\r\n            return(\r\n              <ResultItem key={`${subProperty}-${idx}`} property={subProperty} value={subValue} />\r\n            )\r\n        })}\r\n        </details>\r\n      </div>\r\n    )\r\n  } else {\r\n    const stringifiedValue = JSON.stringify(value).replace(/^\"(.+)\"$/,'$1');\r\n   return (\r\n    <div className=\"resultItem\">\r\n      <p><span className=\"label\">{property}</span>: {validator.isURL(stringifiedValue) ? <a href={stringifiedValue}>{stringifiedValue}</a> : stringifiedValue}</p>\r\n    </div>\r\n   )\r\n  } \r\n}","import ResultItem from \"./ResultItem\";\r\nimport validator from \"validator\";\r\nimport \"../styles/QueryResults.scss\";\r\nexport default function ResultCard(props) {\r\n  const imageData = {\r\n    url: null,\r\n  };\r\n  return (\r\n    <div className=\"resultCard\">\r\n      <div className=\"left\">\r\n        {Object.entries(props.data).map((result, idx) => {\r\n          const [property, value] = result;\r\n          if (property === \"image\" && value?.length > 0) {\r\n            imageData.url = value;\r\n            return null;\r\n          }\r\n          if (value === null || value.length === 0) {\r\n            return null;\r\n          }\r\n          return (\r\n            <ResultItem\r\n              key={`${property}-${idx}`}\r\n              property={property}\r\n              value={value}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      {imageData.url !== null && validator.isURL(imageData.url) && (\r\n        <div className=\"right\">\r\n          <a href={imageData.url} target=\"new\">\r\n            <img src={imageData.url} alt={\"\"} />\r\n          </a>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport ResultCard from \"./ResultCard\";\r\nimport \"../styles/QueryResults.scss\";\r\nexport default function QueryResults() {\r\n  const URLParameters = useSelector((state) => \r\n    state.API.URLParameters\r\n  );\r\n  const queryPath = URLParameters\r\n    ? `${URLParameters.api}/${URLParameters.endpoint}`\r\n    : \"\";\r\n  const queryResults = useSelector((state) =>  state.API.queryResults);\r\n  return (\r\n    <>\r\n    {queryResults && queryResults[queryPath] && queryResults[queryPath].queryResult?.results &&\r\n      <div className=\"queryResults\">\r\n        {queryResults[queryPath].queryResult.results.map(result=>{\r\n          return(\r\n            <ResultCard key={result.id} data={result} />\r\n          )\r\n        })}\r\n      </div>\r\n    }\r\n    {(!queryResults || !queryResults[queryPath]) &&\r\n      <p>no data</p>    \r\n    }\r\n    </>\r\n  );\r\n}","import \"../styles/App.scss\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport Header from \"./Header.js\";\r\nimport APIList from \"./APIList.js\";\r\nimport EndpointList from \"./EndpointList.js\";\r\nimport QueryParameters from \"./QueryParameters.js\";\r\nimport allActions from \"../actions\";\r\nimport QueryResults from \"./QueryResults\";\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const match = useRouteMatch(\"/:api?/:endpoint?/:query?\");\r\n  useEffect(() => {\r\n    dispatch({ type: allActions.APIActions.setParams, payload: match.params });\r\n  }, [match, dispatch]);\r\n  return (\r\n    <>\r\n      <Header />\r\n      <APIList />\r\n      <EndpointList />\r\n      <QueryParameters />\r\n      <QueryResults />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { compose, createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./components/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport persistState from \"redux-localstorage\";\r\n\r\nconst enhancer = compose(persistState());\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n  enhancer\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}