{"version":3,"sources":["actions/APIActions.js","reducers/API.js","reducers/index.js","components/Header.js","actions/index.js","lib/xhr.js","components/APIList.js","components/EndpointList.js","lib/callAPI.js","lib/getAndSortParameters.js","components/QueryParameters.js","components/ResultItem.js","components/ResultCard.js","components/Loading.js","components/QueryResults.js","components/App.js","reportWebVitals.js","index.js"],"names":["APIActions","getAPISwagger","setActiveAPI","setActiveEndpoint","getEndpointParameters","setParams","setQuery","setQueryResults","cleanUpQueryResults","initialState","APISwagger","activeEndpoints","EndpointParameters","URLParameters","queries","queryResults","API","state","action","type","actionTypes","payload","apiName","endpoint","parameters","pathname","search","queryPath","replace","split","api","undefined","pathStringForSwagger","pathStringForReact","fullQueryForAPI","fullQueryForReact","query","path","data","queryResult","timestamp","Date","now","status","maxSavedResults","newResults","Object","entries","sort","a","b","slice","forEach","result","rootReducer","combineReducers","Header","className","src","process","alt","href","allActions","xhr","axios","create","baseURL","APIList","props","dispatch","useDispatch","apiSwagger","useSelector","history","useHistory","useEffect","get","then","r","paths","keys","filter","length","push","Array","from","Set","map","apiItem","index","to","EndpointList","endpointMatch","join","hasOwnProperty","pathParts","endpointPath","callAPI","store","catch","e","getAndSortParameters","pathData","favoriteParameters","favoritesInParameters","parameter","includes","name","parametersMinusFavorites","match","fav","QueryParameters","queryObject","JSON","parse","decodeURI","sortedParameters","queryParameters","entry","location","onSubmit","preventDefault","value","id","onChange","oldFieldName","target","substring","newFieldName","newQueryData","changeFieldName","param","disabled","changeValue","onClick","fieldName","removeField","firstUnusedField","addField","ResultItem","property","title","subProp","idx","subProperty","subValue","stringifiedValue","stringify","isLink","validator","isURL","isAPILink","basePath","stripFromURL","RegExp","host","linkTarget","string","arr","swaggerToReact","linkText","ResultCard","imageData","url","Loading","QueryResults","queryResultKeys","results","App","useLocation","useState","justLanded","setJustLanded","pathForHistory","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","enhancer","compose","persistState","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af40ba3a.chunk.js","sourcesContent":["const APIActions = {\r\n  getAPISwagger: \"GET_API_SWAGGER\",\r\n  setActiveAPI: \"SET_ACTIVE_API\",\r\n  setActiveEndpoint: \"SET_ACTIVE_ENDPOINT\",\r\n  getEndpointParameters: \"GET_API_PARAMETERS\",\r\n  setParams: \"SET_URL_PARAMETERS\",\r\n  setQuery: \"SET_QUERY\",\r\n  setQueryResults: \"SET_QUERY_RESULTS\",\r\n  cleanUpQueryResults: \"CLEAN_UP_QUERY_RESULTS\",\r\n};\r\nexport default APIActions;\r\n","import actionTypes from \"../actions/APIActions.js\";\r\nconst initialState = {\r\n    APISwagger: null,\r\n    activeEndpoints: {},\r\n    EndpointParameters: null,\r\n    URLParameters: null,\r\n    queries: {},\r\n    queryResults: {},\r\n};\r\nconst API = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.getAPISwagger:\r\n      return { ...state, APISwagger: action.payload };\r\n    case actionTypes.setActiveEndpoint:\r\n      return {\r\n        ...state,\r\n        activeEndpoints: {\r\n          ...state.activeEndpoints,\r\n          [action.payload.apiName]: action.payload.endpoint,\r\n        },\r\n      };\r\n    case actionTypes.getEndpointParameters:\r\n      return {\r\n        ...state,\r\n        EndpointParameters: {\r\n          [action.payload.endpoint]: action.payload.parameters,\r\n        },\r\n      };\r\n    case actionTypes.setParams:\r\n      const {pathname, search} = action.payload;\r\n      //paths in apiSwagger are in this format: \"/config/launcher/{id}/\"\r\n      //and this: \"/launch\" for /launch/launch on frontend\r\n      const queryPath = pathname.replace(/\\/$/,\"\").replace(/^\\//,\"\").split(\"/\");\r\n      const api = queryPath[0] || undefined;\r\n      const endpoint = queryPath[1] || undefined;\r\n      const pathStringForSwagger = api && endpoint\r\n        ? api === endpoint\r\n        ? `/${api}/` : `/${api}/${endpoint.replace(/^(id)$/,`{id}`).replace(/(:id)$/,'/{id}')}/` : undefined;\r\n      const pathStringForReact = api && endpoint\r\n        ? `${api}/${endpoint}` : undefined;\r\n      const fullQueryForAPI = pathStringForSwagger\r\n        ? search\r\n          ? `${pathStringForSwagger.replace(`/{id}`,\"\")}${search.replace(`?id=`,\"\")}`\r\n          : `${pathStringForSwagger.replace(`/{id}`,\"\")}${search.replace(`?id=`,\"\")}`\r\n          : \"\";\r\n      const fullQueryForReact = pathStringForReact\r\n        ? search \r\n          ? `${pathStringForReact}/${search}`\r\n          : pathStringForReact\r\n          : undefined;\r\n      return { ...state, URLParameters: {\r\n        api,\r\n        endpoint,\r\n        query: search,\r\n        pathStringForSwagger,\r\n        pathStringForReact,\r\n        fullQueryForAPI,\r\n        fullQueryForReact,\r\n      } };\r\n    case actionTypes.setQuery:\r\n      return {\r\n        ...state,\r\n        queries: {\r\n          ...state.queries,\r\n          [action.payload.path]: action.payload.data,\r\n        },\r\n      };\r\n    case actionTypes.setQueryResults:\r\n      return {\r\n        ...state,\r\n        queryResults: {\r\n          ...state.queryResults,\r\n          [action.payload.query]: {\r\n            queryPath: action.payload.queryPath,\r\n            query: action.payload.query,\r\n            queryResult: action.payload.queryResult,\r\n            timestamp: Date.now(),\r\n            status: action.payload.status || \"\",\r\n          },\r\n        },\r\n      };\r\n    case actionTypes.cleanUpQueryResults:\r\n      const maxSavedResults = 10;\r\n      const newResults = {};\r\n      Object.entries(state.queryResults)\r\n        .sort((a,b)=>b[1].timestamp - a[1].timestamp)\r\n        .slice(0,maxSavedResults)\r\n        .forEach(result=>{newResults[result[0]] = result[1]});\r\n      return {\r\n        ...state,\r\n        queryResults: newResults,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default API;\r\n","import API from \"./API.js\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  API,\r\n});\r\n\r\nexport default rootReducer;\r\n","import \"../styles/Header.scss\";\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <div className=\"left\">\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/logo70.png`}\r\n          alt=\"cute purple rocket ship\"\r\n        />\r\n        <h1>spaceage</h1>\r\n      </div>\r\n      <div className=\"right\">\r\n        <a href=\"/launch/upcoming/?search=spacex\">spacex:upcoming</a>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import APIActions from \"./APIActions\";\r\nconst allActions = { APIActions };\r\nexport default allActions;\r\n","import axios from \"axios\";\r\n\r\nconst xhr = axios.create({\r\n  baseURL: (process.env.NODE_ENV !== 'production') ? process.env.REACT_APP_DEV_API_URL : process.env.REACT_APP_API_URL\r\n});\r\n\r\nexport default xhr;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport allActions from \"../actions\";\r\nimport xhr from \"../lib/xhr.js\";\r\nexport default function APIList(props) {\r\n  const dispatch = useDispatch();\r\n  const apiSwagger = useSelector((state) => state.API.APISwagger);\r\n  const api = useSelector((state) => state.API.URLParameters.api);\r\n  const history = useHistory();\r\n\r\n  //get swagger data from server:\r\n  useEffect(() => {\r\n    xhr.get(\"/data/apis\").then((r) => {\r\n      dispatch({\r\n        type: allActions.APIActions.getAPISwagger,\r\n        payload: r.data,\r\n      });\r\n    });\r\n  }, [dispatch]);\r\n\r\n  //if the api in the URL doesn't exist, redirect to \"/\":\r\n  useEffect(() => {\r\n    if (apiSwagger && apiSwagger.paths) {\r\n      if (api) {\r\n        const apiMatch = Object.keys(apiSwagger.paths).filter(\r\n          (path) => path.split(\"/\")[1] === api\r\n        );\r\n        if (apiMatch.length === 0) {\r\n          history.push(\"/\");\r\n        }\r\n      }\r\n    }\r\n  }, [api, apiSwagger, history]);\r\n  return (\r\n    <>\r\n      {apiSwagger?.paths && (\r\n        <nav>\r\n          {Array.from(\r\n            new Set(\r\n              Object.keys(apiSwagger.paths).map((path) => {\r\n                return path.split(\"/\")[1];\r\n              })\r\n            )\r\n          ).map((apiItem, index) => {\r\n            return (\r\n              <NavLink\r\n                to={`/${apiItem}`}\r\n                key={`apiItem-${index}`}\r\n                className={`nav ${\r\n                  api === apiItem\r\n                    ? `active`\r\n                    : `inactive`\r\n                }`}\r\n              >\r\n                {apiItem}\r\n              </NavLink>\r\n            );\r\n          })}\r\n        </nav>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport allActions from \"../actions\";\r\nexport default function EndpointList() {\r\n  const apiSwagger = useSelector((state) => state.API.APISwagger);\r\n  const activeEndpoints = useSelector((state) => state.API.activeEndpoints);\r\n  const URLParameters = useSelector((state) => state.API.URLParameters);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { api, endpoint } = URLParameters;\r\n  useEffect(() => {\r\n    if (!endpoint && activeEndpoints[api]) {\r\n      history.push(`/${api}/${activeEndpoints[api]}`);\r\n    } else if (activeEndpoints[api] !== endpoint) {\r\n      const endpointMatch = Object.keys(apiSwagger.paths).filter((path) => {\r\n        const pathArray = path.split(\"/\");\r\n        if (pathArray[1] !== api) {\r\n          return false;\r\n        }\r\n        const pathString = path\r\n          .split(\"/\")\r\n          .slice(2, -1)\r\n          .join(\":\")\r\n          .replace(\"{id}\", \"id\");\r\n        if (pathString === endpoint || endpoint === api) {\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n      if (\r\n        endpointMatch.length > 0 &&\r\n        (!activeEndpoints || !activeEndpoints.hasOwnProperty(api))\r\n      ) {\r\n        dispatch({\r\n          type: allActions.APIActions.setActiveEndpoint,\r\n          payload: { apiName: api, endpoint },\r\n        });\r\n      }\r\n      if (endpointMatch.length === 0) {\r\n        history.push(`/${api}`)\r\n      }\r\n    }\r\n  }, [api, endpoint, activeEndpoints, apiSwagger, dispatch, history]);\r\n  return (\r\n    <nav>\r\n      {api && apiSwagger &&\r\n        Object.keys(apiSwagger.paths).map((path, index) => {\r\n          const pathParts = path.split(\"/\");\r\n          const endpointPath =\r\n            pathParts[2] === \"\"\r\n              ? api\r\n              : pathParts.slice(2, -1).join(\":\").replace(/[{}]/g, \"\");\r\n          if (pathParts[1] === api) {\r\n            return (\r\n              <NavLink\r\n                to={`/${api}/${endpointPath}`}\r\n                key={`endpoint-${endpointPath}-${index}`}\r\n                className={`nav ${\r\n                  URLParameters.endpoint === endpointPath\r\n                    ? `active`\r\n                    : `inactive`\r\n                }`}\r\n              >\r\n                {endpointPath}\r\n              </NavLink>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n    </nav>\r\n  );\r\n}\r\n","import allActions from \"../actions\";\r\nimport xhr from \"./xhr\";\r\nimport { store } from \"../index.js\";\r\nconst callAPI = ({ pathStringForReact, fullQueryForReact, fullQueryForAPI }) => {\r\n  store.dispatch({\r\n    type: allActions.APIActions.setQueryResults,\r\n    payload: {\r\n      queryPath: pathStringForReact,\r\n      query: fullQueryForReact,\r\n      queryResult: [],\r\n      status: \"searching\",\r\n    },\r\n  });\r\n  xhr\r\n    .get(`/data${fullQueryForAPI}`)\r\n    .then((r) => {\r\n      if (r.data) {\r\n        store.dispatch({\r\n          type: allActions.APIActions.setQueryResults,\r\n          payload: {\r\n            queryPath: pathStringForReact,\r\n            query: fullQueryForReact,\r\n            queryResult: r.data,\r\n            status: \"success\",\r\n          },\r\n        });\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      store.dispatch({\r\n        type: allActions.APIActions.setQueryResults,\r\n        payload: {\r\n          queryPath: pathStringForReact,\r\n          query: fullQueryForReact,\r\n          queryResult: [],\r\n          status: \"unable to retrieve data from the server, try again later\",\r\n        },\r\n      });\r\n    });\r\n};\r\n\r\nexport default callAPI;\r\n","const getAndSortParameters = (pathData) => {\r\n    const favoriteParameters = [\"search\"];\r\n    const parameters = [];\r\n    \r\n    if (pathData?.get?.parameters && pathData.get.parameters.length > 0) {\r\n        parameters.push(...pathData.get.parameters);\r\n      }\r\n      if (pathData?.parameters && pathData.parameters.length > 0) {\r\n        parameters.push(...pathData.parameters);\r\n      }\r\n      const favoritesInParameters = parameters.filter((parameter) =>\r\n        favoriteParameters.includes(parameter.name)\r\n      );\r\n      const parametersMinusFavorites = parameters.filter((parameter) => {\r\n        let match = 0;\r\n        favoritesInParameters.forEach((fav) => {\r\n          if (fav.name === parameter.name) {\r\n            match++;\r\n          }\r\n        });\r\n        if (match > 0) {\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n      return ([\r\n        ...favoritesInParameters,\r\n        ...parametersMinusFavorites,\r\n      ]);\r\n}\r\nexport default getAndSortParameters;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport {  useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport allActions from \"../actions\";\r\nimport callAPI from \"../lib/callAPI\";\r\nimport getAndSortParameters from \"../lib/getAndSortParameters\";\r\nexport default function QueryParameters() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const apiSwagger = useSelector((state) => state.API.APISwagger);\r\n  const EndpointParameters = useSelector(\r\n    (state) => state.API.EndpointParameters\r\n  );\r\n  const URLParameters = useSelector((state) => state.API.URLParameters);\r\n  const queries = useSelector((state) => state.API.queries);\r\n  const queryResults = useSelector((state)=> state.API.queryResults);\r\n  const {api, endpoint, query, pathStringForSwagger, fullQueryForAPI, pathStringForReact, fullQueryForReact} = URLParameters;\r\n\r\n  // if query parameters are in URLParameters.query, execute the search immediately\r\n  useEffect(()=>{\r\n    if (query && apiSwagger.paths[`${pathStringForSwagger}`]) {\r\n      const queryObject = JSON.parse(\r\n        '{\"' + decodeURI(query)\r\n          .replace(/^\\?/,'')\r\n          .replace(/\"/g, '\\\\\"')\r\n          .replace(/&/g, '\",\"')\r\n          .replace(/=/g,'\":\"') + '\"}'\r\n      );\r\n      dispatch({\r\n        type: allActions.APIActions.setQuery,\r\n        payload: { path: fullQueryForReact, data: queryObject }\r\n      });\r\n      if (\r\n        !queryResults[fullQueryForReact]\r\n        || queryResults[fullQueryForReact].timestamp < Date.now() - 10000\r\n        ) {\r\n        callAPI(URLParameters);\r\n      }\r\n    }\r\n  },[query, queryResults, apiSwagger, URLParameters, fullQueryForReact, pathStringForSwagger, dispatch]);\r\n  useEffect(() => {\r\n    //generate list of parameters for the endpoint\r\n    if (endpoint && api && apiSwagger) {\r\n      const pathData = apiSwagger.paths[`${pathStringForSwagger}`];\r\n      const sortedParameters = getAndSortParameters(pathData);\r\n      dispatch({\r\n        type: allActions.APIActions.getEndpointParameters,\r\n        payload: {\r\n          endpoint: pathStringForReact,\r\n          parameters: sortedParameters,\r\n        },\r\n      });\r\n      // if the endpoint has no parameters, execute the search immediately\r\n      if (sortedParameters.length === 0 && pathData?.get) {\r\n        if (\r\n          !queryResults[fullQueryForReact]\r\n          || queryResults[fullQueryForReact].timestamp < Date.now() - 10000\r\n          ) {\r\n          callAPI(URLParameters);\r\n        }\r\n      }\r\n    }\r\n  }, [URLParameters, pathStringForSwagger, pathStringForReact, fullQueryForReact, api, endpoint, apiSwagger, queryResults, dispatch]);\r\n  //if query data has not been stored for current path, create empty object for this path:\r\n  useEffect(() => {\r\n    if (fullQueryForReact && fullQueryForReact !== \"\" && !fullQueryForReact.includes(\"undefined\")) {\r\n      const pathExists = queries ? fullQueryForReact in queries : false;\r\n      if (!pathExists) {\r\n        dispatch({\r\n          type: allActions.APIActions.setQuery,\r\n          payload: { path: fullQueryForReact, data: null },\r\n        });\r\n      }\r\n    }\r\n  }, [queries, fullQueryForReact, dispatch]);\r\n\r\n  //if query data has been stored for current path, push to address bar:\r\n  useEffect(()=>{\r\n    if (queries && queries[fullQueryForReact]) {\r\n      const queryParameters = Object.entries(queries[fullQueryForReact])\r\n        .filter((entry) => entry[1] !== \"\")\r\n        .map((entry) => `${entry[0]}=${entry[1]}`)\r\n        .sort()\r\n        .join(\"&\");\r\n      const currentLocation = `${history.location.pathname}${history.location.search}`;\r\n      const newLocation = `/${pathStringForReact}/?${queryParameters}`;\r\n      if (currentLocation !== newLocation && query.length === 0) {\r\n        history.push(`/${pathStringForReact}/?${queryParameters}`);\r\n      }\r\n    }\r\n  }, [query, queries, fullQueryForReact, history, pathStringForReact])\r\n\r\n  //if query data is null, add the first APIParameter to state to use by default:\r\n  useEffect(() => {\r\n    if (\r\n      queries &&\r\n      queries[fullQueryForReact] === null &&\r\n      EndpointParameters &&\r\n      EndpointParameters[pathStringForReact] &&\r\n      EndpointParameters[pathStringForReact].length > 0\r\n    ) {\r\n      dispatch({\r\n        type: allActions.APIActions.setQuery,\r\n        payload: {\r\n          path: fullQueryForReact,\r\n          data: { [EndpointParameters[pathStringForReact][0].name]: \"\" },\r\n        },\r\n      });\r\n    }\r\n  }, [queries, pathStringForReact, EndpointParameters, fullQueryForAPI, fullQueryForReact, dispatch]);\r\n  const addField = () => {\r\n    const firstUnusedField = EndpointParameters[pathStringForReact].filter(\r\n      (parameter) => !Object.keys(queries[fullQueryForReact]).includes(parameter.name)\r\n    )[0].name;\r\n    dispatch({\r\n      type: allActions.APIActions.setQuery,\r\n      payload: {\r\n        path: fullQueryForReact,\r\n        data: {\r\n          ...queries[fullQueryForReact],\r\n          [firstUnusedField]: \"\",\r\n        },\r\n      },\r\n    });\r\n  };\r\n  const removeField = (e) => {\r\n    const fieldName = e.target.id.substring(0, e.target.id.length - 7);\r\n    const newQueryData = queries[fullQueryForReact];\r\n    delete newQueryData[fieldName];\r\n    dispatch({\r\n      type: allActions.APIActions.setQuery,\r\n      payload: { path: fullQueryForReact, data: newQueryData },\r\n    });\r\n  };\r\n  const changeFieldName = (e) => {\r\n    const oldFieldName = e.target.id.substring(0, e.target.id.length - 7);\r\n    const newFieldName = e.target.value;\r\n    const newQueryData = queries[fullQueryForReact];\r\n    delete newQueryData[oldFieldName];\r\n    newQueryData[newFieldName] = \"\";\r\n    dispatch({\r\n      type: allActions.APIActions.setQuery,\r\n      payload: { path: fullQueryForReact, data: newQueryData },\r\n    });\r\n  };\r\n  const changeValue = (e) => {\r\n    const newQueryData = queries[fullQueryForReact];\r\n    newQueryData[e.target.id.substring(0, e.target.id.length - 6)] =\r\n      e.target.value;\r\n    dispatch({\r\n      type: allActions.APIActions.setQuery,\r\n      payload: { path: fullQueryForReact, data: newQueryData },\r\n    });\r\n  };\r\n  const onSubmit = () => {\r\n    const queryParameters = Object.entries(queries[fullQueryForReact])\r\n      .filter((entry) => entry[1] !== \"\")\r\n      .map((entry) => `${entry[0]}=${entry[1]}`)\r\n      .sort()\r\n      .join(\"&\");\r\n    history.push(`/${pathStringForReact}/?${queryParameters}`);\r\n  };\r\n  return (\r\n    <>\r\n      {queries &&\r\n        queries[fullQueryForReact] &&\r\n        EndpointParameters &&\r\n        EndpointParameters[pathStringForReact] && (\r\n          <form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              onSubmit();\r\n            }}\r\n          >\r\n            {Object.entries(queries[fullQueryForReact]).map((entries, index) => {\r\n              const [parameter, value] = entries;\r\n              return (\r\n                <div key={`queryItem-${index}`}>\r\n                  <select\r\n                    value={parameter}\r\n                    id={`${parameter}-select`}\r\n                    onChange={(e) => changeFieldName(e)}\r\n                  >\r\n                    {EndpointParameters[pathStringForReact] &&\r\n                      EndpointParameters[pathStringForReact].length > 0 &&\r\n                      EndpointParameters[pathStringForReact].map((param, index) => {\r\n                        const disabled =\r\n                          Object.keys(queries[fullQueryForReact]).includes(\r\n                            param.name\r\n                          ) && parameter !== param.name;\r\n                        return (\r\n                          <option\r\n                            key={`param-${index}`}\r\n                            disabled={disabled}\r\n                            id={`${param.name}-option`}\r\n                          >\r\n                            {param.name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                  </select>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={(e) => changeValue(e)}\r\n                    id={`${parameter}-input`}\r\n                  ></input>\r\n                  {index > 0 && (\r\n                    <button\r\n                      type=\"button\"\r\n                      id={`${parameter}-remove`}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        removeField(e);\r\n                      }}\r\n                    >\r\n                      -\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n            {Object.keys(queries[fullQueryForReact]).length <\r\n              EndpointParameters[pathStringForReact].length && (\r\n              <p>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    addField();\r\n                  }}\r\n                >\r\n                  +\r\n                </button>\r\n              </p>\r\n            )}\r\n            <p>\r\n              <input type=\"submit\" value=\"search\" />\r\n            </p>\r\n          </form>\r\n        )}\r\n    </>\r\n  );\r\n}\r\n","import validator from 'validator';\r\nimport { useSelector } from 'react-redux';\r\nexport default function ResultItem(props) {\r\n  const apiSwagger = useSelector((state)=>state.API.APISwagger);\r\n  const {property, value} = props;\r\n  if (value === null || value.length === 0) { return null }\r\n  if (typeof value === \"object\") {\r\n    return (\r\n      <div className=\"resultItem\">\r\n        <details>\r\n          <summary>\r\n            <p>\r\n              <span className=\"label\">\r\n                {property}\r\n                {value.name && ` (${value.name})`}\r\n                {!value.name && value.title && ` (${value.title})`}\r\n              </span>\r\n            </p>\r\n          </summary>\r\n          {Object.entries(value).map((subProp,idx)=>{\r\n            const [subProperty,subValue]=subProp;\r\n            if (subValue === null) { return null }\r\n            return(\r\n              <ResultItem key={`${property}-${subProperty}-${idx}`} property={subProperty} value={subValue} />\r\n            )\r\n        })}\r\n        </details>\r\n      </div>\r\n    )\r\n  } else {\r\n    const stringifiedValue = JSON.stringify(value).replace(/^\"(.+)\"$/,'$1');\r\n    const isLink = validator.isURL(stringifiedValue);\r\n    const isAPILink = stringifiedValue.includes(apiSwagger.basePath);\r\n    const stripFromURL = new RegExp(`https://${process.env.NODE_ENV === \"development\" ? apiSwagger.host.replace(/^(ll\\.)/,\"lldev.\") : apiSwagger.host}${apiSwagger.basePath}`.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'));\r\n    const swaggerToReact = (string) => {\r\n      const arr = string.split(\"/\");\r\n      if (arr.length === 4) {\r\n        return(`/${arr[1]}/id/?id=${arr[2]}/`);\r\n      }\r\n      if (arr.length === 5) {\r\n        return(`/${arr[1]}/${arr[2]}:id/?id=${arr[3]}/`);\r\n      }\r\n      return \"\";\r\n    }\r\n    const linkTarget = isLink && property === \"url\" && isAPILink\r\n        ? swaggerToReact(stringifiedValue.replace(stripFromURL,\"\"))\r\n        : stringifiedValue\r\n    if (property === \"url\") {\r\n    }\r\n    const linkText = isAPILink\r\n      ? stringifiedValue.replace(stripFromURL,\"\")\r\n      : stringifiedValue.replace(/^(http){1}(s)*:\\/\\/(www.)*/i,\"\");\r\n   return (\r\n    <div className=\"resultItem\">\r\n      <p>\r\n        <span className=\"label\">{property}</span>: {isLink ? <a href={linkTarget} target={isAPILink ? \"_self\" : \"new\"}>{linkText}</a> : stringifiedValue}</p>\r\n    </div>\r\n   )\r\n  } \r\n}","import ResultItem from \"./ResultItem\";\r\nimport validator from \"validator\";\r\nimport \"../styles/QueryResults.scss\";\r\nexport default function ResultCard(props) {\r\n  const imageData = {\r\n    url: null,\r\n  };\r\n  return (\r\n    <div className=\"resultCard\">\r\n      <div className=\"left\">\r\n        {Object.entries(props.data).map((result, idx) => {\r\n          const [property, value] = result;\r\n          if (property === \"image\" && value?.length > 0) {\r\n            imageData.url = value;\r\n            return null;\r\n          }\r\n          if (value === null || value.length === 0) {\r\n            return null;\r\n          }\r\n          return (\r\n            <ResultItem\r\n              key={`${property}-${idx}`}\r\n              property={property}\r\n              value={value}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      {imageData.url !== null && validator.isURL(imageData.url) && (\r\n        <div className=\"right\">\r\n          <a href={imageData.url} target=\"new\">\r\n            <img src={imageData.url} alt={\"\"} />\r\n          </a>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import \"../styles/Loading.scss\";\r\nconst Loading = () => {\r\n  return (\r\n  <div className=\"loadingContainer\">\r\n    <p className=\"loadingText\">...searching...</p>\r\n    <img className=\"loadingImage\" alt=\"rocket flying around\" src={`${process.env.PUBLIC_URL}/logo150.png`} />\r\n  </div>\r\n  )\r\n}\r\nexport default Loading;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport allActions from \"../actions\";\r\nimport ResultCard from \"./ResultCard\";\r\nimport Loading from \"./Loading\";\r\nimport \"../styles/QueryResults.scss\";\r\nexport default function QueryResults() {\r\n  const URLParameters = useSelector((state) => \r\n    state.API.URLParameters\r\n  );\r\n  const {fullQueryForReact} = URLParameters\r\n  const dispatch = useDispatch();\r\n  const queryResults = useSelector((state) =>  state.API.queryResults);\r\n  useEffect(()=>{\r\n    const queryResultKeys = Object.keys(queryResults);\r\n    if (Object.keys(queryResultKeys).length > 10) {\r\n      dispatch({type: allActions.APIActions.cleanUpQueryResults});\r\n    }\r\n  }, [queryResults, dispatch])\r\n  return (\r\n    <>\r\n    {queryResults && queryResults[fullQueryForReact] && queryResults[fullQueryForReact].queryResult?.results &&\r\n      <div className=\"queryResults\">\r\n        {queryResults[fullQueryForReact].queryResult.results.map((result,index)=>{\r\n          return(\r\n            <ResultCard key={`resultCard-${index}`} data={result} />\r\n          )\r\n        })}\r\n      </div>\r\n    }\r\n    {(!queryResults || !queryResults[fullQueryForReact]) &&\r\n      <p>no data</p>\r\n    }\r\n    {queryResults && queryResults[fullQueryForReact] && queryResults[fullQueryForReact].status === \"searching\" && <Loading />}\r\n    </>\r\n  );\r\n}","import \"../styles/App.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Header from \"./Header.js\";\r\nimport APIList from \"./APIList.js\";\r\nimport EndpointList from \"./EndpointList.js\";\r\nimport QueryParameters from \"./QueryParameters.js\";\r\nimport allActions from \"../actions\";\r\nimport QueryResults from \"./QueryResults\";\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [justLanded, setJustLanded] = useState(true);\r\n  const URLParameters = useSelector((state)=>state.API.URLParameters);\r\n  useEffect(() => {\r\n    if (justLanded) {\r\n      setJustLanded(false);\r\n      dispatch({ type: allActions.APIActions.setParams, payload: location });\r\n      const pathForHistory = `${location.pathname}${location.search}`;\r\n      if (pathForHistory.length > 2) {\r\n        history.push(pathForHistory);\r\n      }\r\n      else {\r\n        history.push('/');\r\n      }\r\n    } else {\r\n      dispatch({ type: allActions.APIActions.setParams, payload: location });\r\n    }\r\n  }, [location, justLanded, setJustLanded, history, dispatch]);\r\n  return (\r\n    <>\r\n      <Header />\r\n      <APIList />\r\n      {URLParameters?.api && \r\n        <>\r\n          <EndpointList />\r\n          {URLParameters?.endpoint &&\r\n            <>\r\n              <QueryParameters />\r\n              <QueryResults />\r\n            </>\r\n          }\r\n        </>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { compose, createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./components/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport persistState from \"redux-localstorage\";\r\n\r\nconst enhancer = compose(persistState());\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n  enhancer\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\nexport { store };\r\n"],"sourceRoot":""}