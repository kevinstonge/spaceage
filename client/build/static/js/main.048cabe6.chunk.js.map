{"version":3,"sources":["actions/APIActions.js","reducers/API.js","reducers/index.js","components/LogIn.js","components/SignUp.js","components/Header.js","actions/index.js","lib/xhr.js","components/APIList.js","components/EndpointList.js","lib/callAPI.js","lib/getAndSortParameters.js","components/QueryParameters.js","components/Modal.js","components/ResultItem.js","components/ResultCard.js","components/Loading.js","components/QueryResults.js","components/App.js","reportWebVitals.js","index.js"],"names":["APIActions","getAPISwagger","setActiveAPI","setActiveEndpoint","getEndpointParameters","setParams","setQuery","setQueryResults","cleanUpQueryResults","initialState","APISwagger","activeEndpoints","EndpointParameters","URLParameters","api","endpoint","query","pathStringForSwagger","pathStringForReact","fullQueryForAPI","fullQueryForReact","queries","queryResults","API","state","action","type","actionTypes","payload","apiName","parameters","pathname","search","queryPath","replace","split","undefined","path","data","queryResult","timestamp","Date","now","status","maxSavedResults","newResults","Object","entries","sort","a","b","slice","forEach","result","rootReducer","combineReducers","LogIn","htmlFor","id","name","autoComplete","onClick","e","preventDefault","onSubmit","SignUp","Header","props","className","src","process","alt","setModal","modal","component","title","allActions","xhr","axios","create","baseURL","APIList","dispatch","useDispatch","apiSwagger","useSelector","history","useHistory","useEffect","get","then","r","paths","keys","filter","length","push","Array","from","Set","map","apiItem","index","to","EndpointList","join","console","log","queriesRef","useRef","current","hasOwnProperty","queryParameters","entry","location","pathParts","endpointPath","callAPI","store","catch","getAndSortParameters","pathData","favoriteParameters","favoritesInParameters","parameter","includes","parametersMinusFavorites","match","fav","QueryParameters","queryObject","JSON","parse","decodeURI","sortedParameters","value","onChange","oldFieldName","target","substring","newFieldName","newQueryData","changeFieldName","param","disabled","changeValue","fieldName","removeField","firstUnusedField","addField","Modal","stopPropagation","Component","ResultItem","property","subProp","idx","subProperty","subValue","stringifiedValue","stringify","isLink","validator","isURL","isAPILink","basePath","stripFromURL","RegExp","host","linkTarget","string","arr","swaggerToReact","linkText","href","ResultCard","imageData","url","Loading","QueryResults","queryResultKeys","App","useLocation","useState","justLanded","setJustLanded","pathForHistory","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","enhancer","compose","persistState","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.048cabe6.chunk.js","sourcesContent":["const APIActions = {\r\n  getAPISwagger: \"GET_API_SWAGGER\",\r\n  setActiveAPI: \"SET_ACTIVE_API\",\r\n  setActiveEndpoint: \"SET_ACTIVE_ENDPOINT\",\r\n  getEndpointParameters: \"GET_API_PARAMETERS\",\r\n  setParams: \"SET_URL_PARAMETERS\",\r\n  setQuery: \"SET_QUERY\",\r\n  setQueryResults: \"SET_QUERY_RESULTS\",\r\n  cleanUpQueryResults: \"CLEAN_UP_QUERY_RESULTS\",\r\n};\r\nexport default APIActions;\r\n","import actionTypes from \"../actions/APIActions.js\";\r\nconst initialState = {\r\n    APISwagger: {},\r\n    activeEndpoints: {},\r\n    EndpointParameters: null,\r\n    URLParameters: {\r\n      api: null,\r\n      endpoint: null,\r\n      query: null,\r\n      pathStringForSwagger: null,\r\n      pathStringForReact: null,\r\n      fullQueryForAPI: null,\r\n      fullQueryForReact: null,\r\n    },\r\n    queries: {},\r\n    queryResults: {},\r\n};\r\nconst API = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.getAPISwagger:\r\n      return { ...state, APISwagger: action.payload };\r\n    case actionTypes.setActiveEndpoint:\r\n      return {\r\n        ...state,\r\n        activeEndpoints: {\r\n          ...state.activeEndpoints,\r\n          [action.payload.apiName]: action.payload.endpoint,\r\n        },\r\n      };\r\n    case actionTypes.getEndpointParameters:\r\n      return {\r\n        ...state,\r\n        EndpointParameters: {\r\n          [action.payload.endpoint]: action.payload.parameters,\r\n        },\r\n      };\r\n    case actionTypes.setParams:\r\n      const {pathname, search} = action.payload;\r\n      //paths in apiSwagger are in this format: \"/config/launcher/{id}/\"\r\n      //and this: \"/launch\" for /launch/launch on frontend\r\n      const queryPath = pathname.replace(/\\/$/,\"\").replace(/^\\//,\"\").split(\"/\");\r\n      const api = queryPath[0] || undefined;\r\n      const endpoint = queryPath[1] || undefined;\r\n      const pathStringForSwagger = api && endpoint\r\n        ? api === endpoint\r\n        ? `/${api}/` : `/${api}/${endpoint.replace(/^(id)$/,`{id}`).replace(/(:id)$/,'/{id}')}/` : undefined;\r\n      const pathStringForReact = api && endpoint\r\n        ? `${api}/${endpoint}` : undefined;\r\n      const fullQueryForAPI = pathStringForSwagger\r\n        ? search\r\n          ? `${pathStringForSwagger.replace(`/{id}`,\"\")}${search.replace(`?id=`,\"\")}`\r\n          : `${pathStringForSwagger.replace(`/{id}`,\"\")}${search.replace(`?id=`,\"\")}`\r\n          : \"\";\r\n      const fullQueryForReact = pathStringForReact\r\n        ? search \r\n          ? `${pathStringForReact}/${search}`\r\n          : pathStringForReact\r\n          : undefined;\r\n      return { ...state, URLParameters: {\r\n        api,\r\n        endpoint,\r\n        query: search,\r\n        pathStringForSwagger,\r\n        pathStringForReact,\r\n        fullQueryForAPI,\r\n        fullQueryForReact,\r\n      } };\r\n    case actionTypes.setQuery:\r\n      return {\r\n        ...state,\r\n        queries: {\r\n          ...state.queries,\r\n          [action.payload.path]: action.payload.data,\r\n        },\r\n      };\r\n    case actionTypes.setQueryResults:\r\n      return {\r\n        ...state,\r\n        queryResults: {\r\n          ...state.queryResults,\r\n          [action.payload.query]: {\r\n            queryPath: action.payload.queryPath,\r\n            query: action.payload.query,\r\n            queryResult: action.payload.queryResult,\r\n            timestamp: Date.now(),\r\n            status: action.payload.status || \"\",\r\n          },\r\n        },\r\n      };\r\n    case actionTypes.cleanUpQueryResults:\r\n      const maxSavedResults = 10;\r\n      const newResults = {};\r\n      Object.entries(state.queryResults)\r\n        .sort((a,b)=>b[1].timestamp - a[1].timestamp)\r\n        .slice(0,maxSavedResults)\r\n        .forEach(result=>{newResults[result[0]] = result[1]});\r\n      return {\r\n        ...state,\r\n        queryResults: newResults,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default API;\r\n","import API from \"./API.js\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  API,\r\n});\r\n\r\nexport default rootReducer;\r\n","const LogIn = () => {\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"email\">\r\n        <p>email:</p>\r\n        <input id=\"email\" name=\"email\" type=\"email\" autoComplete=\"email\" />\r\n      </label>\r\n      <label htmlFor=\"password\">\r\n        <p>password:</p>\r\n        <input\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          autoComplete=\"password\"\r\n        />\r\n      </label>\r\n      <button type=\"submit\" onClick={(e) => onSubmit(e)}>\r\n        log in\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default LogIn;\r\n","const SignUp = () => {\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"email\">\r\n        <p>email:</p>\r\n        <input id=\"email\" name=\"email\" type=\"email\" autoComplete=\"email\" />\r\n      </label>\r\n      <label htmlFor=\"new-password\">\r\n        <p>password:</p>\r\n        <input\r\n          id=\"new-password\"\r\n          name=\"new-password\"\r\n          type=\"password\"\r\n          autoComplete=\"new-password\"\r\n        />\r\n      </label>\r\n      <label htmlFor=\"confirm-password\">\r\n        <p>confirm password:</p>\r\n        <input\r\n          id=\"confirm-password\"\r\n          name=\"confirm-password\"\r\n          type=\"password\"\r\n          autoComplete=\"confirm-password\"\r\n        />\r\n      </label>\r\n      <button type=\"submit\" onClick={(e) => onSubmit(e)}>\r\n        sign up\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default SignUp;\r\n","import \"../styles/Header.scss\";\r\nimport LogIn from \"./LogIn\";\r\nimport SignUp from \"./SignUp\";\r\nconst Header = (props) => {\r\n  return (\r\n    <header>\r\n      <div className=\"left\">\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/logo70.png`}\r\n          alt=\"cute purple rocket ship\"\r\n        />\r\n        <h1>spaceage</h1>\r\n      </div>\r\n      <div className=\"right\">\r\n        <button\r\n          onClick={() => {\r\n            props.setModal({ modal: true, component: LogIn, title: \"log_in\" });\r\n          }}\r\n        >\r\n          log_in\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            props.setModal({\r\n              modal: true,\r\n              component: SignUp,\r\n              title: \"sign_up\",\r\n            });\r\n          }}\r\n        >\r\n          sign_up\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import APIActions from \"./APIActions\";\r\nconst allActions = { APIActions };\r\nexport default allActions;\r\n","import axios from \"axios\";\r\n\r\nconst xhr = axios.create({\r\n  baseURL: (process.env.NODE_ENV !== 'production') ? process.env.REACT_APP_DEV_API_URL : process.env.REACT_APP_API_URL\r\n});\r\n\r\nexport default xhr;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport allActions from \"../actions\";\r\nimport xhr from \"../lib/xhr.js\";\r\nexport default function APIList(props) {\r\n  const dispatch = useDispatch();\r\n  const apiSwagger = useSelector((state) => state.API.APISwagger);\r\n  const api = useSelector((state) => state.API.URLParameters.api);\r\n  const history = useHistory();\r\n\r\n  //get swagger data from server:\r\n  useEffect(() => {\r\n    xhr.get(\"/data/apis\").then((r) => {\r\n      dispatch({\r\n        type: allActions.APIActions.getAPISwagger,\r\n        payload: r.data,\r\n      });\r\n    });\r\n  }, [dispatch]);\r\n\r\n  //if the api in the URL doesn't exist, redirect to \"/\":\r\n  useEffect(() => {\r\n    if (api && apiSwagger?.paths) {\r\n      const apiMatch = Object.keys(apiSwagger.paths).filter(\r\n        (path) => path.split(\"/\")[1] === api\r\n      );\r\n      if (apiMatch.length === 0 && Object.keys(apiSwagger.paths).length > 0) {\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  }, [api, apiSwagger, history]);\r\n  return (\r\n    <>\r\n      {apiSwagger?.paths && (\r\n        <nav>\r\n          {Array.from(\r\n            new Set(\r\n              Object.keys(apiSwagger.paths).map((path) => {\r\n                return path.split(\"/\")[1];\r\n              })\r\n            )\r\n          ).map((apiItem, index) => {\r\n            return (\r\n              <NavLink\r\n                to={`/${apiItem}`}\r\n                key={`apiItem-${index}`}\r\n                className={`nav ${\r\n                  api === apiItem\r\n                    ? `active`\r\n                    : `inactive`\r\n                }`}\r\n              >\r\n                {apiItem}\r\n              </NavLink>\r\n            );\r\n          })}\r\n        </nav>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport allActions from \"../actions\";\r\nexport default function EndpointList() {\r\n  const { paths } = useSelector((state) => state.API.APISwagger);\r\n  const activeEndpoints = useSelector((state) => state.API.activeEndpoints);\r\n  const {api, endpoint, pathStringForReact} = useSelector((state) => state.API.URLParameters);\r\n  const queries = useSelector((state)=>state.API.queries);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (!endpoint && activeEndpoints[api]) {\r\n      history.push(`/${api}/${activeEndpoints[api]}`);\r\n    } else if (paths && activeEndpoints[api] !== endpoint) {\r\n      const endpointMatch = Object.keys(paths).filter((path) => {\r\n        const pathArray = path.split(\"/\");\r\n        if (pathArray[1] !== api) {\r\n          return false;\r\n        }\r\n        const pathString = path\r\n          .split(\"/\")\r\n          .slice(2, -1)\r\n          .join(\":\")\r\n          .replace(\"{id}\", \"id\");\r\n        if (pathString === endpoint || endpoint === api) {\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n      if (endpointMatch.length > 0) {\r\n        dispatch({\r\n          type: allActions.APIActions.setActiveEndpoint,\r\n          payload: { apiName: api, endpoint },\r\n        });\r\n      } else {\r\n        console.log('culprit');\r\n        history.push(`/${api}`)\r\n      }\r\n    }\r\n  }, [api, endpoint, activeEndpoints, paths, dispatch, history]);\r\n  const queriesRef = useRef(queries);\r\n  useEffect(()=>{\r\n    if (queriesRef.current?.hasOwnProperty(pathStringForReact) && queriesRef.current[pathStringForReact] !== null) {\r\n      const queryParameters = Object.entries(queriesRef.current[pathStringForReact])\r\n        .filter((entry) => entry[1] !== \"\")\r\n        .map((entry) => `${entry[0]}=${entry[1]}`)\r\n        .sort()\r\n        .join(\"&\");\r\n      const currentLocation = `${history.location.pathname}${history.location.search}`;\r\n      const newLocation = `/${pathStringForReact}/?${queryParameters}`;\r\n      if (currentLocation !== newLocation) {\r\n        history.push(`/${pathStringForReact}/?${queryParameters}`);\r\n      }\r\n    }\r\n  }, [pathStringForReact, queriesRef, history])\r\n  return (\r\n    <nav>\r\n      {api && paths &&\r\n        Object.keys(paths).map((path, index) => {\r\n          const pathParts = path.split(\"/\");\r\n          const endpointPath =\r\n            pathParts[2] === \"\"\r\n              ? api\r\n              : pathParts.slice(2, -1).join(\":\").replace(/[{}]/g, \"\");\r\n          if (pathParts[1] === api) {\r\n            return (\r\n              <NavLink\r\n                to={`/${api}/${endpointPath}`}\r\n                key={`endpoint-${endpointPath}-${index}`}\r\n                className={`nav ${\r\n                  endpoint === endpointPath\r\n                    ? `active`\r\n                    : `inactive`\r\n                }`}\r\n              >\r\n                {endpointPath}\r\n              </NavLink>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n    </nav>\r\n  );\r\n}\r\n","import allActions from \"../actions\";\r\nimport xhr from \"./xhr\";\r\nimport { store } from \"../index.js\";\r\nconst callAPI = ({ pathStringForReact, fullQueryForReact, fullQueryForAPI }) => {\r\n  store.dispatch({\r\n    type: allActions.APIActions.setQueryResults,\r\n    payload: {\r\n      queryPath: pathStringForReact,\r\n      query: fullQueryForReact,\r\n      queryResult: [],\r\n      status: \"searching\",\r\n    },\r\n  });\r\n  xhr\r\n    .get(`/data${fullQueryForAPI}`)\r\n    .then((r) => {\r\n      if (r.data) {\r\n        store.dispatch({\r\n          type: allActions.APIActions.setQueryResults,\r\n          payload: {\r\n            queryPath: pathStringForReact,\r\n            query: fullQueryForReact,\r\n            queryResult: r.data,\r\n            status: \"success\",\r\n          },\r\n        });\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      store.dispatch({\r\n        type: allActions.APIActions.setQueryResults,\r\n        payload: {\r\n          queryPath: pathStringForReact,\r\n          query: fullQueryForReact,\r\n          queryResult: [],\r\n          status: \"unable to retrieve data from the server, try again later\",\r\n        },\r\n      });\r\n    });\r\n};\r\n\r\nexport default callAPI;\r\n","const getAndSortParameters = (pathData) => {\r\n    const favoriteParameters = [\"search\"];\r\n    const parameters = [];\r\n    \r\n    if (pathData?.get?.parameters && pathData.get.parameters.length > 0) {\r\n        parameters.push(...pathData.get.parameters);\r\n      }\r\n      if (pathData?.parameters && pathData.parameters.length > 0) {\r\n        parameters.push(...pathData.parameters);\r\n      }\r\n      const favoritesInParameters = parameters.filter((parameter) =>\r\n        favoriteParameters.includes(parameter.name)\r\n      );\r\n      const parametersMinusFavorites = parameters.filter((parameter) => {\r\n        let match = 0;\r\n        favoritesInParameters.forEach((fav) => {\r\n          if (fav.name === parameter.name) {\r\n            match++;\r\n          }\r\n        });\r\n        if (match > 0) {\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n      return ([\r\n        ...favoritesInParameters,\r\n        ...parametersMinusFavorites,\r\n      ]);\r\n}\r\nexport default getAndSortParameters;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport allActions from \"../actions\";\r\nimport callAPI from \"../lib/callAPI\";\r\nimport getAndSortParameters from \"../lib/getAndSortParameters\";\r\nimport \"../styles/QueryParameters.scss\";\r\nexport default function QueryParameters() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const apiSwagger = useSelector((state) => state.API.APISwagger);\r\n  const EndpointParameters = useSelector(\r\n    (state) => state.API.EndpointParameters\r\n  );\r\n  const URLParameters = useSelector((state) => state.API.URLParameters);\r\n  const queries = useSelector((state) => state.API.queries);\r\n  const queryResults = useSelector((state) => state.API.queryResults);\r\n  const {\r\n    api,\r\n    endpoint,\r\n    query,\r\n    pathStringForSwagger,\r\n    fullQueryForAPI,\r\n    pathStringForReact,\r\n    fullQueryForReact,\r\n  } = URLParameters;\r\n\r\n  // if query parameters are in URLParameters.query, execute the search immediately\r\n  useEffect(() => {\r\n    if (\r\n      query &&\r\n      apiSwagger.paths &&\r\n      apiSwagger.paths[`${pathStringForSwagger}`]\r\n    ) {\r\n      const queryObject = JSON.parse(\r\n        '{\"' +\r\n          decodeURI(query)\r\n            .replace(/^\\?/, \"\")\r\n            .replace(/\"/g, '\\\\\"')\r\n            .replace(/&/g, '\",\"')\r\n            .replace(/=/g, '\":\"') +\r\n          '\"}'\r\n      );\r\n      dispatch({\r\n        type: allActions.APIActions.setQuery,\r\n        payload: { path: pathStringForReact, data: queryObject },\r\n      });\r\n      if (!queryResults[fullQueryForReact]) {\r\n        callAPI(URLParameters);\r\n      }\r\n    }\r\n  }, [\r\n    query,\r\n    queryResults,\r\n    apiSwagger,\r\n    URLParameters,\r\n    pathStringForReact,\r\n    fullQueryForReact,\r\n    pathStringForSwagger,\r\n    dispatch,\r\n  ]);\r\n  useEffect(() => {\r\n    //generate list of parameters for the endpoint\r\n    if (endpoint && api && apiSwagger.paths) {\r\n      const pathData = apiSwagger.paths[`${pathStringForSwagger}`];\r\n      const sortedParameters = getAndSortParameters(pathData);\r\n      dispatch({\r\n        type: allActions.APIActions.getEndpointParameters,\r\n        payload: {\r\n          endpoint: pathStringForReact,\r\n          parameters: sortedParameters,\r\n        },\r\n      });\r\n      // if the endpoint has no parameters, execute the search immediately\r\n      if (sortedParameters.length === 0 && pathData?.get) {\r\n        if (!queryResults[fullQueryForReact]) {\r\n          callAPI(URLParameters);\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    URLParameters,\r\n    pathStringForSwagger,\r\n    pathStringForReact,\r\n    fullQueryForReact,\r\n    api,\r\n    endpoint,\r\n    apiSwagger,\r\n    queryResults,\r\n    dispatch,\r\n  ]);\r\n  // if query data has not been stored for current path, create empty object for this path:\r\n  useEffect(() => {\r\n    if (pathStringForReact) {\r\n      if (!queries.hasOwnProperty(pathStringForReact)) {\r\n        dispatch({\r\n          type: allActions.APIActions.setQuery,\r\n          payload: { path: pathStringForReact, data: null },\r\n        });\r\n      }\r\n    }\r\n  }, [queries, pathStringForReact, dispatch]);\r\n  //if query data is null, add the first APIParameter to state to use by default:\r\n  useEffect(() => {\r\n    if (\r\n      queries[pathStringForReact] === null &&\r\n      EndpointParameters &&\r\n      EndpointParameters[pathStringForReact] &&\r\n      EndpointParameters[pathStringForReact].length > 0\r\n    ) {\r\n      dispatch({\r\n        type: allActions.APIActions.setQuery,\r\n        payload: {\r\n          path: pathStringForReact,\r\n          data: { [EndpointParameters[pathStringForReact][0].name]: \"\" },\r\n        },\r\n      });\r\n    }\r\n  }, [\r\n    queries,\r\n    pathStringForReact,\r\n    EndpointParameters,\r\n    fullQueryForAPI,\r\n    fullQueryForReact,\r\n    dispatch,\r\n  ]);\r\n  const addField = () => {\r\n    const firstUnusedField = EndpointParameters[pathStringForReact].filter(\r\n      (parameter) =>\r\n        !Object.keys(queries[pathStringForReact]).includes(parameter.name)\r\n    )[0].name;\r\n    dispatch({\r\n      type: allActions.APIActions.setQuery,\r\n      payload: {\r\n        path: pathStringForReact,\r\n        data: {\r\n          ...queries[pathStringForReact],\r\n          [firstUnusedField]: \"\",\r\n        },\r\n      },\r\n    });\r\n  };\r\n  const removeField = (e) => {\r\n    const fieldName = e.target.id.substring(0, e.target.id.length - 7);\r\n    const newQueryData = queries[pathStringForReact];\r\n    delete newQueryData[fieldName];\r\n    dispatch({\r\n      type: allActions.APIActions.setQuery,\r\n      payload: { path: pathStringForReact, data: newQueryData },\r\n    });\r\n  };\r\n  const changeFieldName = (e) => {\r\n    const oldFieldName = e.target.id.substring(0, e.target.id.length - 7);\r\n    const newFieldName = e.target.value;\r\n    const newQueryData = queries[pathStringForReact];\r\n    delete newQueryData[oldFieldName];\r\n    newQueryData[newFieldName] = \"\";\r\n    dispatch({\r\n      type: allActions.APIActions.setQuery,\r\n      payload: { path: pathStringForReact, data: newQueryData },\r\n    });\r\n  };\r\n  const changeValue = (e) => {\r\n    const newQueryData = queries[pathStringForReact];\r\n    newQueryData[e.target.id.substring(0, e.target.id.length - 6)] =\r\n      e.target.value;\r\n    dispatch({\r\n      type: allActions.APIActions.setQuery,\r\n      payload: { path: pathStringForReact, data: newQueryData },\r\n    });\r\n  };\r\n  const onSubmit = () => {\r\n    const queryParameters = Object.entries(queries[pathStringForReact])\r\n      .filter((entry) => entry[1] !== \"\")\r\n      .map((entry) => `${entry[0]}=${entry[1]}`)\r\n      .sort()\r\n      .join(\"&\");\r\n    history.push(`/${pathStringForReact}/?${queryParameters}`);\r\n  };\r\n  return (\r\n    <>\r\n      {queries &&\r\n        queries[pathStringForReact] !== null &&\r\n        EndpointParameters &&\r\n        EndpointParameters.hasOwnProperty(pathStringForReact) && (\r\n          <form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              onSubmit();\r\n            }}\r\n          >\r\n            {Object.entries(queries[pathStringForReact]).map(\r\n              (entries, index) => {\r\n                const [parameter, value] = entries;\r\n                return (\r\n                  <div className=\"queryItem\" key={`queryItem-${index}`}>\r\n                    <select\r\n                      value={parameter}\r\n                      id={`${parameter}-select`}\r\n                      onChange={(e) => changeFieldName(e)}\r\n                    >\r\n                      {EndpointParameters[pathStringForReact] &&\r\n                        EndpointParameters[pathStringForReact].length > 0 &&\r\n                        EndpointParameters[pathStringForReact].map(\r\n                          (param, index) => {\r\n                            const disabled =\r\n                              Object.keys(queries[pathStringForReact]).includes(\r\n                                param.name\r\n                              ) && parameter !== param.name;\r\n                            return (\r\n                              <option\r\n                                key={`param-${index}`}\r\n                                disabled={disabled}\r\n                                id={`${param.name}-option`}\r\n                              >\r\n                                {param.name}\r\n                              </option>\r\n                            );\r\n                          }\r\n                        )}\r\n                    </select>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={value}\r\n                      onChange={(e) => changeValue(e)}\r\n                      id={`${parameter}-input`}\r\n                    ></input>\r\n                    {Object.keys(queries[pathStringForReact]).length > 1 && (\r\n                      <button\r\n                        type=\"button\"\r\n                        id={`${parameter}-remove`}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          removeField(e);\r\n                        }}\r\n                      >\r\n                        -\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                );\r\n              }\r\n            )}\r\n            {Object.keys(queries[pathStringForReact]).length <\r\n              EndpointParameters[pathStringForReact].length && (\r\n              <p>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    addField();\r\n                  }}\r\n                >\r\n                  +\r\n                </button>\r\n              </p>\r\n            )}\r\n            <p>\r\n              <input type=\"submit\" value=\"search\" />\r\n            </p>\r\n          </form>\r\n        )}\r\n    </>\r\n  );\r\n}\r\n","import \"../styles/Modal.scss\";\r\nconst Modal = (props) => {\r\n  return(\r\n    <div className=\"modalContainer\" onClick={(e)=>{\r\n      props.setModal({modal:false, component: null, title: null})\r\n    }}>\r\n      <div onClick={(e)=>{e.stopPropagation()}}>\r\n        <div className=\"modalHeader\">\r\n          <p>{props?.title ? props.title : \"\"}</p>\r\n          <button onClick={()=>props.setModal({modal:false, component: null, title: null})}>x</button>\r\n        </div>\r\n        {props?.Component && <props.Component />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal;","import validator from 'validator';\r\nimport { useSelector } from 'react-redux';\r\nexport default function ResultItem(props) {\r\n  const apiSwagger = useSelector((state)=>state.API.APISwagger);\r\n  const {property, value} = props;\r\n  if (value === null || value.length === 0) { return null }\r\n  if (typeof value === \"object\") {\r\n    return (\r\n      <div className=\"resultItem\">\r\n        <details>\r\n          <summary>\r\n            <p>\r\n              <span className=\"label\">\r\n                {property}\r\n                {value.name && ` (${value.name})`}\r\n                {!value.name && value.title && ` (${value.title})`}\r\n              </span>\r\n            </p>\r\n          </summary>\r\n          {Object.entries(value).map((subProp,idx)=>{\r\n            const [subProperty,subValue]=subProp;\r\n            if (subValue === null) { return null }\r\n            return(\r\n              <ResultItem key={`${property}-${subProperty}-${idx}`} property={subProperty} value={subValue} />\r\n            )\r\n        })}\r\n        </details>\r\n      </div>\r\n    )\r\n  } else {\r\n    const stringifiedValue = JSON.stringify(value).replace(/^\"(.+)\"$/,'$1');\r\n    const isLink = validator.isURL(stringifiedValue);\r\n    const isAPILink = stringifiedValue.includes(apiSwagger.basePath);\r\n    const stripFromURL = new RegExp(`https://${process.env.NODE_ENV === \"development\" ? apiSwagger.host.replace(/^(ll\\.)/,\"lldev.\") : apiSwagger.host}${apiSwagger.basePath}`.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'));\r\n    const swaggerToReact = (string) => {\r\n      const arr = string.split(\"/\");\r\n      if (arr.length === 4) {\r\n        return(`/${arr[1]}/id/?id=${arr[2]}/`);\r\n      }\r\n      if (arr.length === 5) {\r\n        return(`/${arr[1]}/${arr[2]}:id/?id=${arr[3]}/`);\r\n      }\r\n      return \"\";\r\n    }\r\n    const linkTarget = isLink && property === \"url\" && isAPILink\r\n        ? swaggerToReact(stringifiedValue.replace(stripFromURL,\"\"))\r\n        : stringifiedValue\r\n    if (property === \"url\") {\r\n    }\r\n    const linkText = isAPILink\r\n      ? stringifiedValue.replace(stripFromURL,\"\")\r\n      : stringifiedValue.replace(/^(http){1}(s)*:\\/\\/(www.)*/i,\"\");\r\n   return (\r\n    <div className=\"resultItem\">\r\n      <p>\r\n        <span className=\"label\">{property}</span>: {isLink ? <a href={linkTarget} target={isAPILink ? \"_self\" : \"new\"}>{linkText}</a> : stringifiedValue}</p>\r\n    </div>\r\n   )\r\n  } \r\n}","import ResultItem from \"./ResultItem\";\r\nimport validator from \"validator\";\r\nimport \"../styles/QueryResults.scss\";\r\nexport default function ResultCard(props) {\r\n  const imageData = {\r\n    url: null,\r\n  };\r\n  return (\r\n    <div className=\"resultCard\">\r\n      <div className=\"left\">\r\n        {Object.entries(props.data).map((result, idx) => {\r\n          const [property, value] = result;\r\n          if (property === \"image\" && value?.length > 0) {\r\n            imageData.url = value;\r\n            return null;\r\n          }\r\n          if (value === null || value.length === 0) {\r\n            return null;\r\n          }\r\n          return (\r\n            <ResultItem\r\n              key={`${property}-${idx}`}\r\n              property={property}\r\n              value={value}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      {imageData.url !== null && validator.isURL(imageData.url) && (\r\n        <div className=\"right\">\r\n          <a href={imageData.url} target=\"new\">\r\n            <img src={imageData.url} alt={\"\"} />\r\n          </a>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import \"../styles/Loading.scss\";\r\nconst Loading = () => {\r\n  return (\r\n  <div className=\"loadingContainer\">\r\n    <p className=\"loadingText\">...searching...</p>\r\n    <img className=\"loadingImage\" alt=\"rocket flying around\" src={`${process.env.PUBLIC_URL}/logo150.png`} />\r\n  </div>\r\n  )\r\n}\r\nexport default Loading;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport allActions from \"../actions\";\r\nimport ResultCard from \"./ResultCard\";\r\nimport Loading from \"./Loading\";\r\nimport \"../styles/QueryResults.scss\";\r\nexport default function QueryResults() {\r\n  const URLParameters = useSelector((state) => \r\n    state.API.URLParameters\r\n  );\r\n  const {fullQueryForReact} = URLParameters\r\n  const dispatch = useDispatch();\r\n  const queryResults = useSelector((state) =>  state.API.queryResults);\r\n  useEffect(()=>{\r\n    const queryResultKeys = Object.keys(queryResults);\r\n    if (Object.keys(queryResultKeys).length > 10) {\r\n      dispatch({type: allActions.APIActions.cleanUpQueryResults});\r\n    }\r\n  }, [queryResults, dispatch])\r\n  return (\r\n    <>\r\n    {queryResults[fullQueryForReact] && queryResults[fullQueryForReact].queryResult.length > 0 &&\r\n      <div className=\"queryResults\">\r\n        {queryResults[fullQueryForReact].queryResult.map((result,index)=>{\r\n          return(\r\n            <ResultCard key={`resultCard-${index}`} data={result} />\r\n          )\r\n        })}\r\n      </div>\r\n    }\r\n    {(!queryResults || !queryResults[fullQueryForReact]) &&\r\n      <p>no data</p>\r\n    }\r\n    {queryResults && queryResults[fullQueryForReact] && queryResults[fullQueryForReact].status === \"searching\" && <Loading />}\r\n    </>\r\n  );\r\n}","import \"../styles/App.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Header from \"./Header.js\";\r\nimport APIList from \"./APIList.js\";\r\nimport EndpointList from \"./EndpointList.js\";\r\nimport QueryParameters from \"./QueryParameters.js\";\r\nimport Modal from \"./Modal\";\r\nimport allActions from \"../actions\";\r\nimport QueryResults from \"./QueryResults\";\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [justLanded, setJustLanded] = useState(true);\r\n  const [modal, setModal] = useState({\r\n    modal: false,\r\n    component: null,\r\n    title: \"\",\r\n  });\r\n  const URLParameters = useSelector((state) => state.API.URLParameters);\r\n  useEffect(() => {\r\n    if (justLanded) {\r\n      setJustLanded(false);\r\n      dispatch({ type: allActions.APIActions.setParams, payload: location });\r\n      const pathForHistory = `${location.pathname}${location.search}`;\r\n      if (pathForHistory.length > 2) {\r\n        history.push(pathForHistory);\r\n      } else {\r\n        history.push(\"/\");\r\n      }\r\n    } else {\r\n      dispatch({ type: allActions.APIActions.setParams, payload: location });\r\n    }\r\n  }, [location, justLanded, setJustLanded, history, dispatch]);\r\n  return (\r\n    <>\r\n      <Header setModal={setModal} />\r\n      <APIList />\r\n      {URLParameters?.api && (\r\n        <>\r\n          <EndpointList />\r\n          {URLParameters?.endpoint && (\r\n            <>\r\n              <QueryParameters />\r\n              <QueryResults />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n      {modal.modal && (\r\n        <Modal\r\n          Component={modal.component}\r\n          title={modal.title}\r\n          setModal={setModal}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { compose, createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./components/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport persistState from \"redux-localstorage\";\r\n\r\nconst enhancer = compose(persistState());\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n  enhancer\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\nexport { store };\r\n"],"sourceRoot":""}