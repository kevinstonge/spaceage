{"version":3,"sources":["actions/APIActions.js","reducers/API.js","actions/userActions.js","reducers/user.js","reducers/index.js","actions/index.js","lib/xhr.js","components/LogIn.js","components/SignUp.js","components/Favorites.js","components/Header.js","components/APIList.js","components/EndpointList.js","lib/callAPI.js","lib/getAndSortParameters.js","components/QueryParameters.js","components/Modal.js","components/ResultItem.js","components/ResultCard.js","components/Loading.js","components/QueryResults.js","components/App.js","reportWebVitals.js","index.js"],"names":["APIActions","getAPISwagger","setActiveAPI","setActiveEndpoint","getEndpointParameters","setParams","setQuery","setQueryResults","cleanUpQueryResults","initialState","APISwagger","activeEndpoints","EndpointParameters","URLParameters","api","endpoint","query","pathStringForSwagger","pathStringForReact","fullQueryForAPI","fullQueryForReact","queries","queryResults","API","state","action","type","actionTypes","payload","apiName","parameters","pathname","search","queryPath","replace","split","undefined","path","data","queryResult","timestamp","Date","now","status","maxSavedResults","newResults","Object","entries","sort","a","b","slice","forEach","result","userActions","signUp","signedUp","signUpError","logIn","logInError","loggedIn","loggedOut","addFavorite","removeFavorite","getFavorites","logInStatusReset","signUpStatusReset","email","token","favorites","signUpStatus","class","message","logInStatus","user","loggedInStatus","favorite","filter","rootReducer","combineReducers","allActions","xhr","axios","create","baseURL","process","LogIn","useSelector","dispatch","useDispatch","useState","password","formState","setFormState","useEffect","formChange","e","target","name","value","htmlFor","id","autoComplete","onChange","className","onClick","preventDefault","post","then","r","catch","response","onSubmit","SignUp","newPassword","confirmPassword","signInStatus","validator","isEmail","Favorites","get","headers","authorization","console","log","Header","props","setModal","modal","component","title","src","alt","APIList","apiSwagger","history","useHistory","paths","keys","length","push","Array","from","Set","map","apiItem","index","to","EndpointList","join","queriesRef","useRef","current","hasOwnProperty","queryParameters","entry","location","pathParts","endpointPath","callAPI","store","getAndSortParameters","pathData","favoriteParameters","favoritesInParameters","parameter","includes","parametersMinusFavorites","match","fav","QueryParameters","queryObject","JSON","parse","decodeURI","sortedParameters","oldFieldName","substring","newFieldName","newQueryData","changeFieldName","param","disabled","changeValue","fieldName","removeField","firstUnusedField","addField","Modal","stopPropagation","Component","ResultItem","property","subProp","idx","subProperty","subValue","stringifiedValue","stringify","isLink","isURL","isAPILink","basePath","stripFromURL","RegExp","host","linkTarget","string","arr","swaggerToReact","linkText","href","ResultCard","imageData","url","Loading","QueryResults","queryResultKeys","delete","err","App","useLocation","justLanded","setJustLanded","pathForHistory","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","enhancer","compose","persistState","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f71e51d.chunk.js","sourcesContent":["const APIActions = {\r\n  getAPISwagger: \"GET_API_SWAGGER\",\r\n  setActiveAPI: \"SET_ACTIVE_API\",\r\n  setActiveEndpoint: \"SET_ACTIVE_ENDPOINT\",\r\n  getEndpointParameters: \"GET_API_PARAMETERS\",\r\n  setParams: \"SET_URL_PARAMETERS\",\r\n  setQuery: \"SET_QUERY\",\r\n  setQueryResults: \"SET_QUERY_RESULTS\",\r\n  cleanUpQueryResults: \"CLEAN_UP_QUERY_RESULTS\",\r\n};\r\nexport default APIActions;\r\n","import actionTypes from \"../actions/APIActions.js\";\r\nconst initialState = {\r\n    APISwagger: {},\r\n    activeEndpoints: {},\r\n    EndpointParameters: null,\r\n    URLParameters: {\r\n      api: null,\r\n      endpoint: null,\r\n      query: null,\r\n      pathStringForSwagger: null,\r\n      pathStringForReact: null,\r\n      fullQueryForAPI: null,\r\n      fullQueryForReact: null,\r\n    },\r\n    queries: {},\r\n    queryResults: {},\r\n};\r\nconst API = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.getAPISwagger:\r\n      return { ...state, APISwagger: action.payload };\r\n    case actionTypes.setActiveEndpoint:\r\n      return {\r\n        ...state,\r\n        activeEndpoints: {\r\n          ...state.activeEndpoints,\r\n          [action.payload.apiName]: action.payload.endpoint,\r\n        },\r\n      };\r\n    case actionTypes.getEndpointParameters:\r\n      return {\r\n        ...state,\r\n        EndpointParameters: {\r\n          [action.payload.endpoint]: action.payload.parameters,\r\n        },\r\n      };\r\n    case actionTypes.setParams:\r\n      const {pathname, search} = action.payload;\r\n      //paths in apiSwagger are in this format: \"/config/launcher/{id}/\"\r\n      //and this: \"/launch\" for /launch/launch on frontend\r\n      const queryPath = pathname.replace(/\\/$/,\"\").replace(/^\\//,\"\").split(\"/\");\r\n      const api = queryPath[0] || undefined;\r\n      const endpoint = queryPath[1] || undefined;\r\n      const pathStringForSwagger = api && endpoint\r\n        ? api === endpoint\r\n        ? `/${api}/` : `/${api}/${endpoint.replace(/^(id)$/,`{id}`).replace(/(:id)$/,'/{id}')}/` : undefined;\r\n      const pathStringForReact = api && endpoint\r\n        ? `${api}/${endpoint}` : undefined;\r\n      const fullQueryForAPI = pathStringForSwagger\r\n        ? search\r\n          ? `${pathStringForSwagger.replace(`/{id}`,\"\")}${search.replace(`?id=`,\"\")}`\r\n          : `${pathStringForSwagger.replace(`/{id}`,\"\")}${search.replace(`?id=`,\"\")}`\r\n          : \"\";\r\n      const fullQueryForReact = pathStringForReact\r\n        ? search \r\n          ? `${pathStringForReact}/${search}`\r\n          : pathStringForReact\r\n          : undefined;\r\n      return { ...state, URLParameters: {\r\n        api,\r\n        endpoint,\r\n        query: search,\r\n        pathStringForSwagger,\r\n        pathStringForReact,\r\n        fullQueryForAPI,\r\n        fullQueryForReact,\r\n      } };\r\n    case actionTypes.setQuery:\r\n      return {\r\n        ...state,\r\n        queries: {\r\n          ...state.queries,\r\n          [action.payload.path]: action.payload.data,\r\n        },\r\n      };\r\n    case actionTypes.setQueryResults:\r\n      return {\r\n        ...state,\r\n        queryResults: {\r\n          ...state.queryResults,\r\n          [action.payload.query]: {\r\n            queryPath: action.payload.queryPath,\r\n            query: action.payload.query,\r\n            queryResult: action.payload.queryResult,\r\n            timestamp: Date.now(),\r\n            status: action.payload.status || \"\",\r\n          },\r\n        },\r\n      };\r\n    case actionTypes.cleanUpQueryResults:\r\n      const maxSavedResults = 10;\r\n      const newResults = {};\r\n      Object.entries(state.queryResults)\r\n        .sort((a,b)=>b[1].timestamp - a[1].timestamp)\r\n        .slice(0,maxSavedResults)\r\n        .forEach(result=>{newResults[result[0]] = result[1]});\r\n      return {\r\n        ...state,\r\n        queryResults: newResults,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default API;\r\n","const userActions = {\r\n  signUp: \"USER_SIGNUP\",\r\n  signedUp: \"USER_SIGNEDUP\",\r\n  signUpError: \"USER_SIGNUP_ERROR\",\r\n  logIn: \"USER_LOGIN\",\r\n  logInError: \"USER_LOGIN_ERROR\",\r\n  loggedIn: \"USER_LOGGED_IN\",\r\n  loggedOut: \"USER_LOGGED_OUT\",\r\n  addFavorite: \"USER_ADD_FAVORITE\",\r\n  removeFavorite: \"USER_REMOVE_FAVORITE\",\r\n  getFavorites: \"USER_GET_FAVORITES\",\r\n  logInStatusReset: \"LOGIN_STATUS_RESET\",\r\n  signUpStatusReset: \"SIGNUP_STATUS_RESET\",\r\n};\r\nexport default userActions;","import actionTypes from \"../actions/userActions.js\";\r\nconst initialState = {\r\n  email: \"\",\r\n  loggedIn: false,\r\n  token: null,\r\n  favorites: [],\r\n  signUpStatus: {\r\n    class: \"info\",\r\n    message: \"\",\r\n  },\r\n  logInStatus: {\r\n    class: \"info\",\r\n    message: \"\",\r\n  },\r\n}\r\nconst user = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.signUp:\r\n      return {\r\n        ...state,\r\n        signUpStatus: {\r\n          class: \"info\",\r\n          message: \"...attempting to create account...\"\r\n        }\r\n      };\r\n    case actionTypes.signedUp:\r\n      return {\r\n        ...state,\r\n        signUpStatus: {\r\n          class: \"info\",\r\n          message: \"success!\"\r\n        },\r\n        loggedIn: true,\r\n        email: action.payload.email,\r\n        token: action.payload.token,\r\n      }\r\n    case actionTypes.signUpError:\r\n      return {\r\n        ...state,\r\n        signUpStatus: {\r\n          class: \"error\",\r\n          message: action.payload.message,\r\n        },\r\n        loggedIn: false,\r\n      }\r\n    case actionTypes.signUpStatusReset:\r\n      return {\r\n        ...state,\r\n        signUpStatus: {\r\n          class: \"info\",\r\n          message: \"\",\r\n        }\r\n      }\r\n    case actionTypes.logIn:\r\n      return {\r\n        ...state,\r\n        logInStatus: {\r\n          class: \"info\",\r\n          message: \"...attempting to log you in...\",\r\n        }\r\n      }\r\n    case actionTypes.loggedIn:\r\n      return {\r\n        ...state,\r\n        loggedInStatus: {\r\n          class: \"info\",\r\n          message: \"success\",\r\n        },\r\n        loggedIn: true,\r\n        email: action.payload.email,\r\n        token: action.payload.token,\r\n      }\r\n    case actionTypes.logInError:\r\n      return {\r\n        ...state,\r\n        loggedInStatus: {\r\n          class: \"error\",\r\n          message: action.payload.message,\r\n        },\r\n        loggedIn: false,\r\n      }\r\n      case actionTypes.logInStatusReset:\r\n        return {\r\n          ...state,\r\n          logInStatus: {\r\n            class: \"info\",\r\n            message: \"\",\r\n          }\r\n        }\r\n    case actionTypes.loggedOut:\r\n      return {\r\n        ...state,\r\n        logInStatus: {\r\n          class: \"info\",\r\n          message: \"\",\r\n        },\r\n        loggedIn: false,\r\n        email: \"\",\r\n        favorites: [],\r\n        token: null,\r\n      }\r\n    case actionTypes.addFavorite:\r\n      return {\r\n        ...state,\r\n        favorites: [...state.favorites, action.payload.favorite],\r\n      }\r\n    case actionTypes.removeFavorite:\r\n      return {\r\n        ...state,\r\n        favorites: [...state.favorites.filter(favorite=>favorite!==action.payload.favorite)],\r\n      }\r\n    case actionTypes.getFavorites:\r\n      return {\r\n        ...state,\r\n        favorites: action.payload.favorites,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default user;","import API from \"./API.js\";\r\nimport user from \"./user.js\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  API, user,\r\n});\r\n\r\nexport default rootReducer;\r\n","import APIActions from \"./APIActions\";\r\nimport userActions from \"./userActions\";\r\nconst allActions = { APIActions, userActions };\r\nexport default allActions;\r\n","import axios from \"axios\";\r\n\r\nconst xhr = axios.create({\r\n  baseURL: (process.env.NODE_ENV !== 'production') ? process.env.REACT_APP_DEV_API_URL : process.env.REACT_APP_API_URL,\r\n});\r\n\r\nexport default xhr;","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useState, useEffect } from \"react\";\r\nimport xhr from '../lib/xhr.js';\r\nimport allActions from \"../actions\";\r\nconst LogIn = () => {\r\n  const user = useSelector((state)=>state.user);\r\n  const dispatch = useDispatch();\r\n  const [formState, setFormState] = useState({email: \"\", password: \"\"});\r\n  useEffect(()=>{\r\n    dispatch({type: allActions.userActions.logInStatusReset});\r\n  },[dispatch]);\r\n  const formChange = (e) => {\r\n    dispatch({type: allActions.userActions.logInStatusReset});\r\n    setFormState({...formState, [e.target.name]: e.target.value});\r\n  }\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch({type: allActions.userActions.logIn});\r\n    xhr.post(\"/users/login\",{email: formState.email, password: formState.password})\r\n      .then(r=>{\r\n        if (r.status === 200) {\r\n          dispatch({type: allActions.userActions.loggedIn, payload: {email: formState.email, token: r.data.token}});\r\n        }\r\n        else {\r\n          dispatch({type: allActions.userActions.logInError, payload: {message: r.data.message, class:\"error\"}})\r\n        }\r\n      })\r\n      .catch(e=>{\r\n        if (e.response?.status) {\r\n          dispatch({type: allActions.userActions.logInError, payload: {message: e.response.data.message, class: \"error\"}})\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"email\">\r\n        <p>email:</p>\r\n        <input id=\"email\" name=\"email\" type=\"email\" autoComplete=\"email\" value={formState.email} onChange={(e)=>formChange(e)}/>\r\n      </label>\r\n      <label htmlFor=\"password\">\r\n        <p>password:</p>\r\n        <input\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          value={formState.password}\r\n          onChange={(e)=>formChange(e)}/>\r\n      </label>\r\n      {user.logInStatus !== \"\" &&\r\n        <p className={user.logInStatus.class}>\r\n          {user.logInStatus.message}\r\n        </p>\r\n      }\r\n      <button type=\"submit\" onClick={(e) => onSubmit(e)}>\r\n        log in\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default LogIn;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useState, useEffect } from \"react\";\r\nimport xhr from '../lib/xhr.js';\r\nimport allActions from \"../actions\";\r\nimport validator from 'validator';\r\nconst SignUp = () => {\r\n  const user = useSelector((state)=>state.user);\r\n  const dispatch = useDispatch();\r\n  const [formState, setFormState] = useState({email: \"\", newPassword: \"\", confirmPassword: \"\"})\r\n  useEffect(()=>{\r\n    dispatch({type: allActions.userActions.signUpStatusReset});\r\n  },[dispatch]);\r\n  const formChange = (e) => {\r\n    dispatch({type: allActions.userActions.signUpStatusReset});\r\n    setFormState({...formState, [e.target.name]: e.target.value});\r\n  }\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validator.isEmail(formState.email)) {\r\n      dispatch({type: allActions.userActions.signUpError, payload: {class: \"error\", message: \"invalid email\"}});\r\n      return;\r\n    }\r\n    if (formState.newPassword !== formState.confirmPassword) {\r\n      dispatch({type: allActions.userActions.signUpError, payload: {class: \"error\", message: \"passwords don't match\"}});\r\n      return;\r\n    }\r\n    dispatch({type: allActions.userActions.signUp});\r\n    xhr.post(\"/users/signup\",{email: formState.email, password: formState.newPassword})\r\n      .then(r=>{\r\n        if (r.status===201) {\r\n          dispatch({type: allActions.userActions.signedUp, payload: {email: formState.email, token: r.data.token} })\r\n        }\r\n        else {\r\n          dispatch({type: allActions.userActions.signUpError, payload: {message: r.data.message, class:\"error\"}})\r\n        }\r\n      })\r\n      .catch((e)=>{\r\n        if (e.response?.status === 409) {\r\n          dispatch({type: allActions.userActions.signUpError, payload: {message: e.response.data.message, class: \"error\"}})\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"email\">\r\n        <p>email:</p>\r\n        <input id=\"email\" name=\"email\" type=\"email\" autoComplete=\"email\" value={formState.email} onChange={(e)=>formChange(e)}/>\r\n      </label>\r\n      <label htmlFor=\"new-password\">\r\n        <p>password:</p>\r\n        <input\r\n          id=\"new-password\"\r\n          name=\"newPassword\"\r\n          type=\"password\"\r\n          autoComplete=\"new-password\"\r\n          onChange={(e)=>formChange(e)}\r\n        />\r\n      </label>\r\n      <label htmlFor=\"confirm-password\">\r\n        <p>confirm password:</p>\r\n        <input\r\n          id=\"confirm-password\"\r\n          name=\"confirmPassword\"\r\n          type=\"password\"\r\n          autoComplete=\"confirm-password\"\r\n          onChange={(e)=>formChange(e)}\r\n        />\r\n      </label>\r\n      {user.signInStatus !== \"\" && \r\n        <p className={user.signUpStatus.class}>\r\n          {user.signUpStatus.message}\r\n        </p>\r\n      }\r\n      <button type=\"submit\" onClick={(e) => onSubmit(e)}>\r\n        sign up\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default SignUp;\r\n","import { useSelector } from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport xhr from \"../lib/xhr\";\r\nconst Favorites = () => {\r\n  const user = useSelector((state)=>state.user);\r\n  const { loggedIn, token } = user;\r\n  useEffect(() => {\r\n    if (loggedIn && token) {\r\n      xhr.get(\"/users/favorites\", {headers: {authorization: `Bearer ${token}`}}).then(r=>{\r\n        console.log(r);\r\n      })\r\n    }\r\n  }, [token, loggedIn])\r\n  return(<p>favorites</p>)\r\n}\r\n\r\nexport default Favorites;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport allActions from \"../actions\";\r\nimport \"../styles/Header.scss\";\r\nimport LogIn from \"./LogIn\";\r\nimport SignUp from \"./SignUp\";\r\nimport Favorites from \"./Favorites\";\r\nconst Header = (props) => {\r\n  const user = useSelector((state)=>state.user);\r\n  const dispatch = useDispatch();\r\n  const setModal = props.setModal;\r\n  useEffect(()=>{\r\n    if (user.loggedIn) {\r\n      setModal({        \r\n        modal: false,\r\n        component: null,\r\n        title: \"\",\r\n      })\r\n    }\r\n  },[dispatch, user.loggedIn, setModal])\r\n  return (\r\n    <header>\r\n      <div className=\"left\">\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/logo70.png`}\r\n          alt=\"cute purple rocket ship\"\r\n        />\r\n        <h1>spaceage</h1>\r\n      </div>\r\n      <div className=\"right\">\r\n        {user.loggedIn === false && \r\n          <>\r\n          <button\r\n            onClick={() => {\r\n              setModal({ modal: true, component: LogIn, title: \"log_in\" });\r\n            }}\r\n          >\r\n            log_in\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              setModal({\r\n                modal: true,\r\n                component: SignUp,\r\n                title: \"sign_up\",\r\n              });\r\n            }}\r\n          >\r\n            sign_up\r\n          </button>\r\n          </>\r\n        }\r\n        {user.loggedIn === true &&\r\n        <>\r\n        <Favorites />\r\n        <button onClick={()=>{\r\n          dispatch({type: allActions.userActions.loggedOut});}}>log out</button>\r\n        </>\r\n        }\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport allActions from \"../actions\";\r\nimport xhr from \"../lib/xhr.js\";\r\nexport default function APIList(props) {\r\n  const dispatch = useDispatch();\r\n  const apiSwagger = useSelector((state) => state.API.APISwagger);\r\n  const api = useSelector((state) => state.API.URLParameters.api);\r\n  const history = useHistory();\r\n\r\n  //get swagger data from server:\r\n  useEffect(() => {\r\n    xhr.get(\"/data/apis\").then((r) => {\r\n      dispatch({\r\n        type: allActions.APIActions.getAPISwagger,\r\n        payload: r.data,\r\n      });\r\n    });\r\n  }, [dispatch]);\r\n\r\n  //if the api in the URL doesn't exist, redirect to \"/\":\r\n  useEffect(() => {\r\n    if (api && apiSwagger?.paths) {\r\n      const apiMatch = Object.keys(apiSwagger.paths).filter(\r\n        (path) => path.split(\"/\")[1] === api\r\n      );\r\n      if (apiMatch.length === 0 && Object.keys(apiSwagger.paths).length > 0) {\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  }, [api, apiSwagger, history]);\r\n  return (\r\n    <>\r\n      {apiSwagger?.paths && (\r\n        <nav>\r\n          {Array.from(\r\n            new Set(\r\n              Object.keys(apiSwagger.paths).map((path) => {\r\n                return path.split(\"/\")[1];\r\n              })\r\n            )\r\n          ).map((apiItem, index) => {\r\n            return (\r\n              <NavLink\r\n                to={`/${apiItem}`}\r\n                key={`apiItem-${index}`}\r\n                className={`nav ${\r\n                  api === apiItem\r\n                    ? `active`\r\n                    : `inactive`\r\n                }`}\r\n              >\r\n                {apiItem}\r\n              </NavLink>\r\n            );\r\n          })}\r\n        </nav>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport allActions from \"../actions\";\r\nexport default function EndpointList() {\r\n  const { paths } = useSelector((state) => state.API.APISwagger);\r\n  const activeEndpoints = useSelector((state) => state.API.activeEndpoints);\r\n  const {api, endpoint, pathStringForReact} = useSelector((state) => state.API.URLParameters);\r\n  const queries = useSelector((state)=>state.API.queries);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (!endpoint && activeEndpoints[api]) {\r\n      history.push(`/${api}/${activeEndpoints[api]}`);\r\n    } else if (paths && activeEndpoints[api] !== endpoint) {\r\n      const endpointMatch = Object.keys(paths).filter((path) => {\r\n        const pathArray = path.split(\"/\");\r\n        if (pathArray[1] !== api) {\r\n          return false;\r\n        }\r\n        const pathString = path\r\n          .split(\"/\")\r\n          .slice(2, -1)\r\n          .join(\":\")\r\n          .replace(\"{id}\", \"id\");\r\n        if (pathString === endpoint || endpoint === api) {\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n      if (endpointMatch.length > 0) {\r\n        dispatch({\r\n          type: allActions.APIActions.setActiveEndpoint,\r\n          payload: { apiName: api, endpoint },\r\n        });\r\n      } else {\r\n        console.log('culprit');\r\n        history.push(`/${api}`)\r\n      }\r\n    }\r\n  }, [api, endpoint, activeEndpoints, paths, dispatch, history]);\r\n  const queriesRef = useRef(queries);\r\n  useEffect(()=>{\r\n    if (queriesRef.current?.hasOwnProperty(pathStringForReact) && queriesRef.current[pathStringForReact] !== null) {\r\n      const queryParameters = Object.entries(queriesRef.current[pathStringForReact])\r\n        .filter((entry) => entry[1] !== \"\")\r\n        .map((entry) => `${entry[0]}=${entry[1]}`)\r\n        .sort()\r\n        .join(\"&\");\r\n      const currentLocation = `${history.location.pathname}${history.location.search}`;\r\n      const newLocation = `/${pathStringForReact}/?${queryParameters}`;\r\n      if (currentLocation !== newLocation) {\r\n        history.push(`/${pathStringForReact}/?${queryParameters}`);\r\n      }\r\n    }\r\n  }, [pathStringForReact, queriesRef, history])\r\n  return (\r\n    <nav>\r\n      {api && paths &&\r\n        Object.keys(paths).map((path, index) => {\r\n          const pathParts = path.split(\"/\");\r\n          const endpointPath =\r\n            pathParts[2] === \"\"\r\n              ? api\r\n              : pathParts.slice(2, -1).join(\":\").replace(/[{}]/g, \"\");\r\n          if (pathParts[1] === api) {\r\n            return (\r\n              <NavLink\r\n                to={`/${api}/${endpointPath}`}\r\n                key={`endpoint-${endpointPath}-${index}`}\r\n                className={`nav ${\r\n                  endpoint === endpointPath\r\n                    ? `active`\r\n                    : `inactive`\r\n                }`}\r\n              >\r\n                {endpointPath}\r\n              </NavLink>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n    </nav>\r\n  );\r\n}\r\n","import allActions from \"../actions\";\r\nimport xhr from \"./xhr\";\r\nimport { store } from \"../index.js\";\r\nconst callAPI = ({ pathStringForReact, fullQueryForReact, fullQueryForAPI }) => {\r\n  store.dispatch({\r\n    type: allActions.APIActions.setQueryResults,\r\n    payload: {\r\n      queryPath: pathStringForReact,\r\n      query: fullQueryForReact,\r\n      queryResult: [],\r\n      status: \"searching\",\r\n    },\r\n  });\r\n  xhr\r\n    .get(`/data${fullQueryForAPI}`)\r\n    .then((r) => {\r\n      if (r.data) {\r\n        store.dispatch({\r\n          type: allActions.APIActions.setQueryResults,\r\n          payload: {\r\n            queryPath: pathStringForReact,\r\n            query: fullQueryForReact,\r\n            queryResult: r.data,\r\n            status: \"success\",\r\n          },\r\n        });\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      store.dispatch({\r\n        type: allActions.APIActions.setQueryResults,\r\n        payload: {\r\n          queryPath: pathStringForReact,\r\n          query: fullQueryForReact,\r\n          queryResult: [],\r\n          status: \"unable to retrieve data from the server, try again later\",\r\n        },\r\n      });\r\n    });\r\n};\r\n\r\nexport default callAPI;\r\n","const getAndSortParameters = (pathData) => {\r\n    const favoriteParameters = [\"search\"];\r\n    const parameters = [];\r\n    \r\n    if (pathData?.get?.parameters && pathData.get.parameters.length > 0) {\r\n        parameters.push(...pathData.get.parameters);\r\n      }\r\n      if (pathData?.parameters && pathData.parameters.length > 0) {\r\n        parameters.push(...pathData.parameters);\r\n      }\r\n      const favoritesInParameters = parameters.filter((parameter) =>\r\n        favoriteParameters.includes(parameter.name)\r\n      );\r\n      const parametersMinusFavorites = parameters.filter((parameter) => {\r\n        let match = 0;\r\n        favoritesInParameters.forEach((fav) => {\r\n          if (fav.name === parameter.name) {\r\n            match++;\r\n          }\r\n        });\r\n        if (match > 0) {\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n      return ([\r\n        ...favoritesInParameters,\r\n        ...parametersMinusFavorites,\r\n      ]);\r\n}\r\nexport default getAndSortParameters;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport allActions from \"../actions\";\r\nimport callAPI from \"../lib/callAPI\";\r\nimport getAndSortParameters from \"../lib/getAndSortParameters\";\r\nimport \"../styles/QueryParameters.scss\";\r\nexport default function QueryParameters() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const apiSwagger = useSelector((state) => state.API.APISwagger);\r\n  const EndpointParameters = useSelector(\r\n    (state) => state.API.EndpointParameters\r\n  );\r\n  const URLParameters = useSelector((state) => state.API.URLParameters);\r\n  const queries = useSelector((state) => state.API.queries);\r\n  const queryResults = useSelector((state) => state.API.queryResults);\r\n  const {\r\n    api,\r\n    endpoint,\r\n    query,\r\n    pathStringForSwagger,\r\n    fullQueryForAPI,\r\n    pathStringForReact,\r\n    fullQueryForReact,\r\n  } = URLParameters;\r\n\r\n  // if query parameters are in URLParameters.query, execute the search immediately\r\n  useEffect(() => {\r\n    if (\r\n      query &&\r\n      apiSwagger.paths &&\r\n      apiSwagger.paths[`${pathStringForSwagger}`]\r\n    ) {\r\n      const queryObject = JSON.parse(\r\n        '{\"' +\r\n          decodeURI(query)\r\n            .replace(/^\\?/, \"\")\r\n            .replace(/\"/g, '\\\\\"')\r\n            .replace(/&/g, '\",\"')\r\n            .replace(/=/g, '\":\"') +\r\n          '\"}'\r\n      );\r\n      dispatch({\r\n        type: allActions.APIActions.setQuery,\r\n        payload: { path: pathStringForReact, data: queryObject },\r\n      });\r\n      if (!queryResults[fullQueryForReact]) {\r\n        callAPI(URLParameters);\r\n      }\r\n    }\r\n  }, [\r\n    query,\r\n    queryResults,\r\n    apiSwagger,\r\n    URLParameters,\r\n    pathStringForReact,\r\n    fullQueryForReact,\r\n    pathStringForSwagger,\r\n    dispatch,\r\n  ]);\r\n  useEffect(() => {\r\n    //generate list of parameters for the endpoint\r\n    if (endpoint && api && apiSwagger.paths) {\r\n      const pathData = apiSwagger.paths[`${pathStringForSwagger}`];\r\n      const sortedParameters = getAndSortParameters(pathData);\r\n      dispatch({\r\n        type: allActions.APIActions.getEndpointParameters,\r\n        payload: {\r\n          endpoint: pathStringForReact,\r\n          parameters: sortedParameters,\r\n        },\r\n      });\r\n      // if the endpoint has no parameters, execute the search immediately\r\n      if (sortedParameters.length === 0 && pathData?.get) {\r\n        if (!queryResults[fullQueryForReact]) {\r\n          callAPI(URLParameters);\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    URLParameters,\r\n    pathStringForSwagger,\r\n    pathStringForReact,\r\n    fullQueryForReact,\r\n    api,\r\n    endpoint,\r\n    apiSwagger,\r\n    queryResults,\r\n    dispatch,\r\n  ]);\r\n  // if query data has not been stored for current path, create empty object for this path:\r\n  useEffect(() => {\r\n    if (pathStringForReact) {\r\n      if (!queries.hasOwnProperty(pathStringForReact)) {\r\n        dispatch({\r\n          type: allActions.APIActions.setQuery,\r\n          payload: { path: pathStringForReact, data: null },\r\n        });\r\n      }\r\n    }\r\n  }, [queries, pathStringForReact, dispatch]);\r\n  //if query data is null, add the first APIParameter to state to use by default:\r\n  useEffect(() => {\r\n    if (\r\n      queries[pathStringForReact] === null &&\r\n      EndpointParameters &&\r\n      EndpointParameters[pathStringForReact] &&\r\n      EndpointParameters[pathStringForReact].length > 0\r\n    ) {\r\n      dispatch({\r\n        type: allActions.APIActions.setQuery,\r\n        payload: {\r\n          path: pathStringForReact,\r\n          data: { [EndpointParameters[pathStringForReact][0].name]: \"\" },\r\n        },\r\n      });\r\n    }\r\n  }, [\r\n    queries,\r\n    pathStringForReact,\r\n    EndpointParameters,\r\n    fullQueryForAPI,\r\n    fullQueryForReact,\r\n    dispatch,\r\n  ]);\r\n  const addField = () => {\r\n    const firstUnusedField = EndpointParameters[pathStringForReact].filter(\r\n      (parameter) =>\r\n        !Object.keys(queries[pathStringForReact]).includes(parameter.name)\r\n    )[0].name;\r\n    dispatch({\r\n      type: allActions.APIActions.setQuery,\r\n      payload: {\r\n        path: pathStringForReact,\r\n        data: {\r\n          ...queries[pathStringForReact],\r\n          [firstUnusedField]: \"\",\r\n        },\r\n      },\r\n    });\r\n  };\r\n  const removeField = (e) => {\r\n    const fieldName = e.target.id.substring(0, e.target.id.length - 7);\r\n    const newQueryData = queries[pathStringForReact];\r\n    delete newQueryData[fieldName];\r\n    dispatch({\r\n      type: allActions.APIActions.setQuery,\r\n      payload: { path: pathStringForReact, data: newQueryData },\r\n    });\r\n  };\r\n  const changeFieldName = (e) => {\r\n    const oldFieldName = e.target.id.substring(0, e.target.id.length - 7);\r\n    const newFieldName = e.target.value;\r\n    const newQueryData = queries[pathStringForReact];\r\n    delete newQueryData[oldFieldName];\r\n    newQueryData[newFieldName] = \"\";\r\n    dispatch({\r\n      type: allActions.APIActions.setQuery,\r\n      payload: { path: pathStringForReact, data: newQueryData },\r\n    });\r\n  };\r\n  const changeValue = (e) => {\r\n    const newQueryData = queries[pathStringForReact];\r\n    newQueryData[e.target.id.substring(0, e.target.id.length - 6)] =\r\n      e.target.value;\r\n    dispatch({\r\n      type: allActions.APIActions.setQuery,\r\n      payload: { path: pathStringForReact, data: newQueryData },\r\n    });\r\n  };\r\n  const onSubmit = () => {\r\n    const queryParameters = Object.entries(queries[pathStringForReact])\r\n      .filter((entry) => entry[1] !== \"\")\r\n      .map((entry) => `${entry[0]}=${entry[1]}`)\r\n      .sort()\r\n      .join(\"&\");\r\n    history.push(`/${pathStringForReact}/?${queryParameters}`);\r\n  };\r\n  return (\r\n    <>\r\n      {queries &&\r\n        queries[pathStringForReact] !== null &&\r\n        EndpointParameters &&\r\n        EndpointParameters.hasOwnProperty(pathStringForReact) && (\r\n          <form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              onSubmit();\r\n            }}\r\n          >\r\n            {Object.entries(queries[pathStringForReact]).map(\r\n              (entries, index) => {\r\n                const [parameter, value] = entries;\r\n                return (\r\n                  <div className=\"queryItem\" key={`queryItem-${index}`}>\r\n                    <select\r\n                      value={parameter}\r\n                      id={`${parameter}-select`}\r\n                      onChange={(e) => changeFieldName(e)}\r\n                    >\r\n                      {EndpointParameters[pathStringForReact] &&\r\n                        EndpointParameters[pathStringForReact].length > 0 &&\r\n                        EndpointParameters[pathStringForReact].map(\r\n                          (param, index) => {\r\n                            const disabled =\r\n                              Object.keys(queries[pathStringForReact]).includes(\r\n                                param.name\r\n                              ) && parameter !== param.name;\r\n                            return (\r\n                              <option\r\n                                key={`param-${index}`}\r\n                                disabled={disabled}\r\n                                id={`${param.name}-option`}\r\n                              >\r\n                                {param.name}\r\n                              </option>\r\n                            );\r\n                          }\r\n                        )}\r\n                    </select>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={value}\r\n                      onChange={(e) => changeValue(e)}\r\n                      id={`${parameter}-input`}\r\n                    ></input>\r\n                    {Object.keys(queries[pathStringForReact]).length > 1 && (\r\n                      <button\r\n                        type=\"button\"\r\n                        id={`${parameter}-remove`}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          removeField(e);\r\n                        }}\r\n                      >\r\n                        -\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                );\r\n              }\r\n            )}\r\n            {Object.keys(queries[pathStringForReact]).length <\r\n              EndpointParameters[pathStringForReact].length && (\r\n              <p>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    addField();\r\n                  }}\r\n                >\r\n                  +\r\n                </button>\r\n              </p>\r\n            )}\r\n            <p>\r\n              <input type=\"submit\" value=\"search\" />\r\n            </p>\r\n          </form>\r\n        )}\r\n    </>\r\n  );\r\n}\r\n","import \"../styles/Modal.scss\";\r\nconst Modal = (props) => {\r\n  return(\r\n    <div className=\"modalContainer\" onClick={(e)=>{\r\n      props.setModal({modal:false, component: null, title: null})\r\n    }}>\r\n      <div onClick={(e)=>{e.stopPropagation()}}>\r\n        <div className=\"modalHeader\">\r\n          <p>{props?.title ? props.title : \"\"}</p>\r\n          <button onClick={()=>props.setModal({modal:false, component: null, title: null})}>x</button>\r\n        </div>\r\n        {props?.Component && <props.Component />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal;","import validator from 'validator';\r\nimport { useSelector } from 'react-redux';\r\nexport default function ResultItem(props) {\r\n  const apiSwagger = useSelector((state)=>state.API.APISwagger);\r\n  const {property, value} = props;\r\n  if (value === null || value.length === 0) { return null }\r\n  if (typeof value === \"object\") {\r\n    return (\r\n      <div className=\"resultItem\">\r\n        <details>\r\n          <summary>\r\n            <p>\r\n              <span className=\"label\">\r\n                {property}\r\n                {value.name && ` (${value.name})`}\r\n                {!value.name && value.title && ` (${value.title})`}\r\n              </span>\r\n            </p>\r\n          </summary>\r\n          {Object.entries(value).map((subProp,idx)=>{\r\n            const [subProperty,subValue]=subProp;\r\n            if (subValue === null) { return null }\r\n            return(\r\n              <ResultItem key={`${property}-${subProperty}-${idx}`} property={subProperty} value={subValue} />\r\n            )\r\n        })}\r\n        </details>\r\n      </div>\r\n    )\r\n  } else {\r\n    const stringifiedValue = JSON.stringify(value).replace(/^\"(.+)\"$/,'$1');\r\n    const isLink = validator.isURL(stringifiedValue);\r\n    const isAPILink = stringifiedValue.includes(apiSwagger.basePath);\r\n    const stripFromURL = new RegExp(`https://${process.env.NODE_ENV === \"development\" ? apiSwagger.host.replace(/^(ll\\.)/,\"lldev.\") : apiSwagger.host}${apiSwagger.basePath}`.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'));\r\n    const swaggerToReact = (string) => {\r\n      const arr = string.split(\"/\");\r\n      if (arr.length === 4) {\r\n        return(`/${arr[1]}/id/?id=${arr[2]}/`);\r\n      }\r\n      if (arr.length === 5) {\r\n        return(`/${arr[1]}/${arr[2]}:id/?id=${arr[3]}/`);\r\n      }\r\n      return \"\";\r\n    }\r\n    const linkTarget = isLink && property === \"url\" && isAPILink\r\n        ? swaggerToReact(stringifiedValue.replace(stripFromURL,\"\"))\r\n        : stringifiedValue\r\n    if (property === \"url\") {\r\n    }\r\n    const linkText = isAPILink\r\n      ? stringifiedValue.replace(stripFromURL,\"\")\r\n      : stringifiedValue.replace(/^(http){1}(s)*:\\/\\/(www.)*/i,\"\");\r\n   return (\r\n    <div className=\"resultItem\">\r\n      <p>\r\n        <span className=\"label\">{property}</span>: {isLink ? <a href={linkTarget} target={isAPILink ? \"_self\" : \"new\"}>{linkText}</a> : stringifiedValue}</p>\r\n    </div>\r\n   )\r\n  } \r\n}","import ResultItem from \"./ResultItem\";\r\nimport validator from \"validator\";\r\nimport \"../styles/QueryResults.scss\";\r\nexport default function ResultCard(props) {\r\n  const imageData = {\r\n    url: null,\r\n  };\r\n  return (\r\n    <div className=\"resultCard\">\r\n      <div className=\"left\">\r\n        {Object.entries(props.data).map((result, idx) => {\r\n          const [property, value] = result;\r\n          if (property === \"image\" && value?.length > 0) {\r\n            imageData.url = value;\r\n            return null;\r\n          }\r\n          if (value === null || value.length === 0) {\r\n            return null;\r\n          }\r\n          return (\r\n            <ResultItem\r\n              key={`${property}-${idx}`}\r\n              property={property}\r\n              value={value}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      {imageData.url !== null && validator.isURL(imageData.url) && (\r\n        <div className=\"right\">\r\n          <a href={imageData.url} target=\"new\">\r\n            <img src={imageData.url} alt={\"\"} />\r\n          </a>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import \"../styles/Loading.scss\";\r\nconst Loading = () => {\r\n  return (\r\n  <div className=\"loadingContainer\">\r\n    <p className=\"loadingText\">...searching...</p>\r\n    <img className=\"loadingImage\" alt=\"rocket flying around\" src={`${process.env.PUBLIC_URL}/logo150.png`} />\r\n  </div>\r\n  )\r\n}\r\nexport default Loading;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport allActions from \"../actions\";\r\nimport ResultCard from \"./ResultCard\";\r\nimport Loading from \"./Loading\";\r\nimport \"../styles/QueryResults.scss\";\r\nimport xhr from \"../lib/xhr\";\r\nexport default function QueryResults() {\r\n  const URLParameters = useSelector((state) => \r\n    state.API.URLParameters\r\n  );\r\n  const {fullQueryForReact} = URLParameters\r\n  const dispatch = useDispatch();\r\n  const queryResults = useSelector((state) =>  state.API.queryResults);\r\n  const favorites = useSelector((state)=>state.user.favorites);\r\n  const token = useSelector((state)=>state.user.token)\r\n  const addFavorite = () => {\r\n    const favorite = queryResults[fullQueryForReact].query;\r\n    xhr.post(\"/users/favorites/add\", {favorite}, {headers: {authorization: `Bearer ${token}`}}).then(r=>{\r\n      if (r.status === 201) {\r\n        dispatch({type:allActions.userActions.addFavorite, payload: {favorite}})\r\n      } else {\r\n        console.log('error adding favorite');\r\n      }\r\n    })\r\n  }\r\n  const removeFavorite = () => {\r\n    const favorite = queryResults[fullQueryForReact].query;\r\n    xhr.delete(\"/users/favorites/remove\", {data: {favorite}, headers: {authorization: `Bearer ${token}`}}).then(r=>{\r\n      if (r.status === 200) {\r\n        dispatch({type:allActions.userActions.removeFavorite, payload: {favorite}})\r\n      } else {\r\n        console.log('error deleting favorite');\r\n      }\r\n    }).catch(err=>{console.log(err)});\r\n  }\r\n  useEffect(()=>{\r\n    const queryResultKeys = Object.keys(queryResults);\r\n    if (Object.keys(queryResultKeys).length > 10) {\r\n      dispatch({type: allActions.APIActions.cleanUpQueryResults});\r\n    }\r\n  }, [queryResults, dispatch])\r\n  return (\r\n    <>\r\n    {queryResults[fullQueryForReact] && queryResults[fullQueryForReact].queryResult.length > 0 &&\r\n      <div className=\"queryResults\">\r\n        <div>\r\n          <p>results for query: \"{queryResults[fullQueryForReact].query}\"\r\n            {favorites.includes(queryResults[fullQueryForReact].query) ? \r\n              <button onClick={()=>removeFavorite()}>remove from favorites</button> :\r\n              <button onClick={()=>addFavorite()}>add to favorites</button>\r\n            }\r\n          </p>\r\n        </div>\r\n        {queryResults[fullQueryForReact].queryResult.map((result,index)=>{\r\n          return(\r\n            <ResultCard key={`resultCard-${index}`} data={result} />\r\n          )\r\n        })}\r\n      </div>\r\n    }\r\n    {(!queryResults || !queryResults[fullQueryForReact] || queryResults[fullQueryForReact].length === 0) &&\r\n      <p>no data</p>\r\n    }\r\n    {queryResults && queryResults[fullQueryForReact] && queryResults[fullQueryForReact].status === \"searching\" && <Loading />}\r\n    </>\r\n  );\r\n}","import \"../styles/App.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Header from \"./Header.js\";\r\nimport APIList from \"./APIList.js\";\r\nimport EndpointList from \"./EndpointList.js\";\r\nimport QueryParameters from \"./QueryParameters.js\";\r\nimport Modal from \"./Modal\";\r\nimport allActions from \"../actions\";\r\nimport QueryResults from \"./QueryResults\";\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [justLanded, setJustLanded] = useState(true);\r\n  const [modal, setModal] = useState({\r\n    modal: false,\r\n    component: null,\r\n    title: \"\",\r\n  });\r\n  const URLParameters = useSelector((state) => state.API.URLParameters);\r\n  useEffect(() => {\r\n    if (justLanded) {\r\n      setJustLanded(false);\r\n      dispatch({ type: allActions.APIActions.setParams, payload: location });\r\n      const pathForHistory = `${location.pathname}${location.search}`;\r\n      if (pathForHistory.length > 2) {\r\n        history.push(pathForHistory);\r\n      } else {\r\n        history.push(\"/\");\r\n      }\r\n    } else {\r\n      dispatch({ type: allActions.APIActions.setParams, payload: location });\r\n    }\r\n  }, [location, justLanded, setJustLanded, history, dispatch]);\r\n  return (\r\n    <>\r\n      <Header setModal={setModal} />\r\n      <APIList />\r\n      {URLParameters?.api && (\r\n        <>\r\n          <EndpointList />\r\n          {URLParameters?.endpoint && (\r\n            <>\r\n              <QueryParameters />\r\n              <QueryResults />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n      {modal.modal && (\r\n        <Modal\r\n          Component={modal.component}\r\n          title={modal.title}\r\n          setModal={setModal}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { compose, createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./components/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport persistState from \"redux-localstorage\";\r\n\r\nconst enhancer = compose(persistState());\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n  enhancer\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\nexport { store };\r\n"],"sourceRoot":""}