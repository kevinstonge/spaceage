const source = 'https://ll.thespacedevs.com/2.0.0/swagger?format=openapi';
const data = {
  swagger: '2.0',
  info: {
    title: 'Launch Library',
    description:
      'The Launch Library API is a product by The Space Devs with an up-to-date database of Spaceflight events. \n\nWhile this API is free to use it is subject to rate limiting for non-authenticated requests.\n\nPlease use https://lldev.thespacedevs.com for development testing - this endpoint has stale data but is not subject to any rate limits.\n\nIf you are interested in a higher rate limit please consider supporting the project on Patreon for access to an API Key.',
    contact: { email: 'support@thespacedevs.com' },
    license: { name: 'Apache License 2.0' },
    version: 'v2.2.0',
  },
  host: 'll.thespacedevs.com',
  schemes: ['https'],
  basePath: '/2.2.0',
  consumes: ['application/json'],
  produces: ['application/json'],
  securityDefinitions: {
    Token: { in: 'header', name: 'Token', type: 'apiKey' },
  },
  security: [{ Token: [] }],
  paths: {
    '/agencies/': {
      get: {
        operationId: 'agencies_list',
        description: 'API endpoint that allows Agencies to be viewed.',
        parameters: [
          {
            name: 'featured',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'agency_type',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'country_code',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/Agency' },
                },
              },
            },
          },
        },
        tags: ['agencies'],
      },
      parameters: [],
    },
    '/agencies/{id}/': {
      get: {
        operationId: 'agencies_read',
        description: 'API endpoint that allows Agencies to be viewed.',
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/AgencySerializerDetailed' },
          },
        },
        tags: ['agencies'],
      },
      parameters: [{ name: 'id', in: 'path', required: true, type: 'string' }],
    },
    '/astronaut/': {
      get: {
        operationId: 'astronaut_list',
        description: 'API endpoint that allows Astronaut to be viewed.',
        parameters: [
          {
            name: 'agency__abbrev',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'agency__name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'date_of_death',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'date_of_birth',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'nationality',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'status',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'date_of_birth__gt',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'date_of_birth__lt',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'date_of_birth__gte',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'date_of_birth__lte',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'date_of_death__gt',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'date_of_death__lt',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'date_of_death__gte',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'date_of_death__lte',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/AstronautNormal' },
                },
              },
            },
          },
        },
        tags: ['astronaut'],
      },
      parameters: [],
    },
    '/astronaut/{id}/': {
      get: {
        operationId: 'astronaut_read',
        description: 'API endpoint that allows Astronaut to be viewed.',
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/AstronautDetailed' },
          },
        },
        tags: ['astronaut'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description: 'A unique integer value identifying this Astronaut.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/config/agencytype/': {
      get: {
        operationId: 'config_agencytype_list',
        description: '',
        parameters: [
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/AgencyType' },
                },
              },
            },
          },
        },
        tags: ['config'],
      },
      parameters: [],
    },
    '/config/agencytype/{id}/': {
      get: {
        operationId: 'config_agencytype_read',
        description: '',
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/AgencyType' },
          },
        },
        tags: ['config'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description: 'A unique value identifying this agency type.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/config/astronautrole/': {
      get: {
        operationId: 'config_astronautrole_list',
        description: '',
        parameters: [
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/AstronautRole' },
                },
              },
            },
          },
        },
        tags: ['config'],
      },
      parameters: [],
    },
    '/config/astronautrole/{id}/': {
      get: {
        operationId: 'config_astronautrole_read',
        description: '',
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/AstronautRole' },
          },
        },
        tags: ['config'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description:
            'A unique integer value identifying this Astronaut Role.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/config/astronautstatus/': {
      get: {
        operationId: 'config_astronautstatus_list',
        description: '',
        parameters: [
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/AstronautStatus' },
                },
              },
            },
          },
        },
        tags: ['config'],
      },
      parameters: [],
    },
    '/config/astronautstatus/{id}/': {
      get: {
        operationId: 'config_astronautstatus_read',
        description: '',
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/AstronautStatus' },
          },
        },
        tags: ['config'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description:
            'A unique integer value identifying this Astronaut Status.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/config/astronauttype/': {
      get: {
        operationId: 'config_astronauttype_list',
        description: '',
        parameters: [
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/AstronautType' },
                },
              },
            },
          },
        },
        tags: ['config'],
      },
      parameters: [],
    },
    '/config/astronauttype/{id}/': {
      get: {
        operationId: 'config_astronauttype_read',
        description: '',
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/AstronautType' },
          },
        },
        tags: ['config'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description:
            'A unique integer value identifying this Astronaut Type.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/config/dockinglocation/': {
      get: {
        operationId: 'config_dockinglocation_list',
        description: '',
        parameters: [
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/DockingLocation' },
                },
              },
            },
          },
        },
        tags: ['config'],
      },
      parameters: [],
    },
    '/config/dockinglocation/{id}/': {
      get: {
        operationId: 'config_dockinglocation_read',
        description: '',
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/DockingLocation' },
          },
        },
        tags: ['config'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description:
            'A unique integer value identifying this Docking Location.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/config/eventtype/': {
      get: {
        operationId: 'config_eventtype_list',
        description: '',
        parameters: [
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/EventType' },
                },
              },
            },
          },
        },
        tags: ['config'],
      },
      parameters: [],
    },
    '/config/eventtype/{id}/': {
      get: {
        operationId: 'config_eventtype_read',
        description: '',
        parameters: [],
        responses: {
          200: { description: '', schema: { $ref: '#/definitions/EventType' } },
        },
        tags: ['config'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description: 'A unique value identifying this event type.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/config/firststagetype/': {
      get: {
        operationId: 'config_firststagetype_list',
        description: '',
        parameters: [
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/FirstStageType' },
                },
              },
            },
          },
        },
        tags: ['config'],
      },
      parameters: [],
    },
    '/config/firststagetype/{id}/': {
      get: {
        operationId: 'config_firststagetype_read',
        description: '',
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/FirstStageType' },
          },
        },
        tags: ['config'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description: 'A unique value identifying this first stage type.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/config/landinglocation/': {
      get: {
        operationId: 'config_landinglocation_list',
        description: '',
        parameters: [
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/LandingLocation' },
                },
              },
            },
          },
        },
        tags: ['config'],
      },
      parameters: [],
    },
    '/config/landinglocation/{id}/': {
      get: {
        operationId: 'config_landinglocation_read',
        description: '',
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/LandingLocation' },
          },
        },
        tags: ['config'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description:
            'A unique integer value identifying this landing location.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/config/launcher/': {
      get: {
        operationId: 'config_launcher_list',
        description:
          'API endpoint that allows Launcher Configurations to be viewed.',
        parameters: [
          {
            name: 'family',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'manufacturer',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'full_name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'active',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'reusable',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'program',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/LauncherConfig' },
                },
              },
            },
          },
        },
        tags: ['config'],
      },
      parameters: [],
    },
    '/config/launcher/{id}/': {
      get: {
        operationId: 'config_launcher_read',
        description:
          'API endpoint that allows Launcher Configurations to be viewed.',
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/LauncherConfigDetail' },
          },
        },
        tags: ['config'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description:
            'A unique integer value identifying this Launcher Configuration.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/config/launchstatus/': {
      get: {
        operationId: 'config_launchstatus_list',
        description: '',
        parameters: [
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/LaunchStatus' },
                },
              },
            },
          },
        },
        tags: ['config'],
      },
      parameters: [],
    },
    '/config/launchstatus/{id}/': {
      get: {
        operationId: 'config_launchstatus_read',
        description: '',
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/LaunchStatus' },
          },
        },
        tags: ['config'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description: 'A unique value identifying this Launch Status.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/config/missiontype/': {
      get: {
        operationId: 'config_missiontype_list',
        description: '',
        parameters: [
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/MissionType' },
                },
              },
            },
          },
        },
        tags: ['config'],
      },
      parameters: [],
    },
    '/config/missiontype/{id}/': {
      get: {
        operationId: 'config_missiontype_read',
        description: '',
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/MissionType' },
          },
        },
        tags: ['config'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description: 'A unique value identifying this mission type.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/config/noticetype/': {
      get: {
        operationId: 'config_noticetype_list',
        description: '',
        parameters: [
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/NoticeType' },
                },
              },
            },
          },
        },
        tags: ['config'],
      },
      parameters: [],
    },
    '/config/noticetype/{id}/': {
      get: {
        operationId: 'config_noticetype_read',
        description: '',
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/NoticeType' },
          },
        },
        tags: ['config'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description: 'A unique integer value identifying this Notices Type.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/config/orbit/': {
      get: {
        operationId: 'config_orbit_list',
        description: '',
        parameters: [
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/Orbit' },
                },
              },
            },
          },
        },
        tags: ['config'],
      },
      parameters: [],
    },
    '/config/orbit/{id}/': {
      get: {
        operationId: 'config_orbit_read',
        description: '',
        parameters: [],
        responses: {
          200: { description: '', schema: { $ref: '#/definitions/Orbit' } },
        },
        tags: ['config'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description: 'A unique integer value identifying this Orbit.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/config/roadclosurestatus/': {
      get: {
        operationId: 'config_roadclosurestatus_list',
        description: '',
        parameters: [
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/RoadClosureStatus' },
                },
              },
            },
          },
        },
        tags: ['config'],
      },
      parameters: [],
    },
    '/config/roadclosurestatus/{id}/': {
      get: {
        operationId: 'config_roadclosurestatus_read',
        description: '',
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/RoadClosureStatus' },
          },
        },
        tags: ['config'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description:
            'A unique integer value identifying this Road Closure Type.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/config/spacecraft/': {
      get: {
        operationId: 'config_spacecraft_list',
        description:
          'API endpoint that allows Spacecraft Configs to be viewed.',
        parameters: [
          {
            name: 'name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'manufacturer',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'in_use',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'human_rated',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/SpacecraftConfiguration' },
                },
              },
            },
          },
        },
        tags: ['config'],
      },
      parameters: [],
    },
    '/config/spacecraft/{id}/': {
      get: {
        operationId: 'config_spacecraft_read',
        description:
          'API endpoint that allows Spacecraft Configs to be viewed.',
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/SpacecraftConfigurationDetail' },
          },
        },
        tags: ['config'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description:
            'A unique integer value identifying this Spacecraft Configuration.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/config/spacecraftstatus/': {
      get: {
        operationId: 'config_spacecraftstatus_list',
        description: '',
        parameters: [
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/SpacecraftStatus' },
                },
              },
            },
          },
        },
        tags: ['config'],
      },
      parameters: [],
    },
    '/config/spacecraftstatus/{id}/': {
      get: {
        operationId: 'config_spacecraftstatus_read',
        description: '',
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/SpacecraftStatus' },
          },
        },
        tags: ['config'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description:
            'A unique integer value identifying this Spacecraft Status.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/config/spacestationstatus/': {
      get: {
        operationId: 'config_spacestationstatus_list',
        description: '',
        parameters: [
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/SpaceStationStatus' },
                },
              },
            },
          },
        },
        tags: ['config'],
      },
      parameters: [],
    },
    '/config/spacestationstatus/{id}/': {
      get: {
        operationId: 'config_spacestationstatus_read',
        description: '',
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/SpaceStationStatus' },
          },
        },
        tags: ['config'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description:
            'A unique integer value identifying this Space Station Status.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/dashboard/starship/': {
      get: {
        operationId: 'dashboard_starship_list',
        description:
          'Return a dashboard of SpaceX operations for Starship development.',
        parameters: [],
        responses: { 200: { description: '' } },
        tags: ['dashboard'],
      },
      parameters: [],
    },
    '/docking_event/': {
      get: {
        operationId: 'docking_event_list',
        description: 'API endpoint that allows Docking Events to be viewed.',
        parameters: [
          {
            name: 'space_station__id',
            in: 'query',
            description: '',
            required: false,
            type: 'number',
          },
          {
            name: 'docking_location__id',
            in: 'query',
            description: '',
            required: false,
            type: 'number',
          },
          {
            name: 'flight_vehicle__id',
            in: 'query',
            description: '',
            required: false,
            type: 'number',
          },
          {
            name: 'docking__gt',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'docking__lt',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'docking__gte',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'docking__lte',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/DockingEvent' },
                },
              },
            },
          },
        },
        tags: ['docking_event'],
      },
      parameters: [],
    },
    '/docking_event/{id}/': {
      get: {
        operationId: 'docking_event_read',
        description: 'API endpoint that allows Docking Events to be viewed.',
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/DockingEventDetailed' },
          },
        },
        tags: ['docking_event'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description: 'A unique integer value identifying this docking event.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/event/': {
      get: {
        operationId: 'event_list',
        description: 'API endpoint that allows all Events to be viewed.',
        parameters: [
          {
            name: 'slug',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'id',
            in: 'query',
            description: '',
            required: false,
            type: 'number',
          },
          {
            name: 'type',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'program',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/Events' },
                },
              },
            },
          },
        },
        tags: ['event'],
      },
      parameters: [],
    },
    '/event/previous/': {
      get: {
        operationId: 'event_previous_list',
        description: 'API endpoint that allows past Events to be viewed.',
        parameters: [
          {
            name: 'type',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'program',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/Events' },
                },
              },
            },
          },
        },
        tags: ['event'],
      },
      parameters: [],
    },
    '/event/previous/{id}/': {
      get: {
        operationId: 'event_previous_read',
        description: 'API endpoint that allows past Events to be viewed.',
        parameters: [],
        responses: {
          200: { description: '', schema: { $ref: '#/definitions/Events' } },
        },
        tags: ['event'],
      },
      parameters: [{ name: 'id', in: 'path', required: true, type: 'string' }],
    },
    '/event/upcoming/': {
      get: {
        operationId: 'event_upcoming_list',
        description: 'API endpoint that allows future Events to be viewed.',
        parameters: [
          {
            name: 'type',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'program',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/Events' },
                },
              },
            },
          },
        },
        tags: ['event'],
      },
      parameters: [],
    },
    '/event/upcoming/{id}/': {
      get: {
        operationId: 'event_upcoming_read',
        description: 'API endpoint that allows future Events to be viewed.',
        parameters: [],
        responses: {
          200: { description: '', schema: { $ref: '#/definitions/Events' } },
        },
        tags: ['event'],
      },
      parameters: [{ name: 'id', in: 'path', required: true, type: 'string' }],
    },
    '/event/{id}/': {
      get: {
        operationId: 'event_read',
        description: 'API endpoint that allows all Events to be viewed.',
        parameters: [],
        responses: {
          200: { description: '', schema: { $ref: '#/definitions/Events' } },
        },
        tags: ['event'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description: 'A unique integer value identifying this Event.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/expedition/': {
      get: {
        operationId: 'expedition_list',
        description: 'API endpoint that allows Expeditions to be viewed.',
        parameters: [
          {
            name: 'name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'crew__astronaut',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'crew__astronaut__agency',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'space_station',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'start__gt',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'start__lt',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'start__gte',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'start__lte',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'end__gt',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'end__lt',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'end__gte',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'end__lte',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/Expedition' },
                },
              },
            },
          },
        },
        tags: ['expedition'],
      },
      parameters: [],
    },
    '/expedition/{id}/': {
      get: {
        operationId: 'expedition_read',
        description: 'API endpoint that allows Expeditions to be viewed.',
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/ExpeditionDetail' },
          },
        },
        tags: ['expedition'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description: 'A unique integer value identifying this expedition.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/launch/': {
      get: {
        operationId: 'launch_list',
        summary:
          'API endpoint that returns all Launch objects or a single launch.',
        description:
          "EXAMPLE - /launch/\\<id\\>/ or /launch/?mode=list&search=SpaceX\n\nGET\nReturn a list of all Launch objects.\n\nFILTERS\nFields - 'name', 'id(s)', 'lsp__id', 'lsp__name', 'serial_number', 'launcher_config__id',\n 'rocket__spacecraftflight__spacecraft__name', 'is_crewed', 'include_suborbital', 'spacecraft_config__ids',\n 'related', 'location__ids', 'lsp__ids'\n\nMODE\n'normal', 'list', 'detailed'\n\nEXAMPLE ?mode=list\n\nSEARCH\nSearches through the launch name, rocket name, launch agency, mission name & spacecraft name.\n\nEXAMPLE - ?search=SpaceX",
        parameters: [
          {
            name: 'name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'slug',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'rocket__configuration__name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'rocket__configuration__id',
            in: 'query',
            description: '',
            required: false,
            type: 'number',
          },
          {
            name: 'status',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'rocket__spacecraftflight__spacecraft__name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'rocket__spacecraftflight__spacecraft__name__icontains',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'rocket__spacecraftflight__spacecraft__id',
            in: 'query',
            description: '',
            required: false,
            type: 'number',
          },
          {
            name: 'rocket__configuration__manufacturer__name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'rocket__configuration__manufacturer__name__icontains',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'rocket__configuration__full_name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'rocket__configuration__full_name__icontains',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'mission__orbit__name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'mission__orbit__name__icontains',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'r_spacex_api_id',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'net__gt',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'net__lt',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'net__gte',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'net__lte',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'window_start__gt',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'window_start__lt',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'window_start__gte',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'window_start__lte',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'window_end__gt',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'window_end__lt',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'window_end__gte',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'window_end__lte',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'last_updated__gte',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'last_updated__lte',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
          {
            name: 'location__ids',
            in: 'query',
            description: "Filter by a comma-separated list of location ID's.",
            type: 'array',
            items: { type: 'integer' },
          },
          {
            name: 'lsp__ids',
            in: 'query',
            description:
              "Filter by a comma-separated list of launch service providers ID's.",
            type: 'array',
            items: { type: 'integer' },
          },
          {
            name: 'is_crewed',
            in: 'query',
            description: 'Filter by launches with crew assigned.',
            type: 'boolean',
            default: false,
          },
          {
            name: 'include_suborbital',
            in: 'query',
            description: 'Include sub-orbital launches.',
            type: 'boolean',
            default: true,
          },
          {
            name: 'serial_number',
            in: 'query',
            description:
              'Filter by a SpaceX First Stage core serial number. (Example: B1051)',
            type: 'string',
          },
          {
            name: 'lsp__name',
            in: 'query',
            description: 'Filter by a Launch Service Provider name.',
            type: 'string',
          },
          {
            name: 'lsp__id',
            in: 'query',
            description: 'Filter by a Launch Service Provider name.',
            type: 'integer',
          },
          {
            name: 'launcher_config__id',
            in: 'query',
            description: 'Filter by a Launcher Config ID.',
            type: 'integer',
          },
          {
            name: 'spacecraft_config_ids',
            in: 'query',
            description:
              "Filter by a comma-separated list of spacecraft config ID's.",
            type: 'array',
            items: { type: 'integer' },
          },
          {
            name: 'related',
            in: 'query',
            description:
              'Include related agencies launches. Useful for historical launches from companies that have had mergers.',
            type: 'boolean',
            default: false,
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/LaunchSerializerCommon' },
                },
              },
            },
          },
        },
        tags: ['launch'],
      },
      parameters: [],
    },
    '/launch/previous/': {
      get: {
        operationId: 'launch_previous_list',
        summary: 'API endpoint that returns previous Launch objects.',
        description:
          "GET\nReturn a list of previous Launches\n\nFILTERS\nFields - 'name', 'id(s)', 'lsp__id', 'lsp__name', 'serial_number', 'launcher_config__id',\n 'rocket__spacecraftflight__spacecraft__name', 'is_crewed', 'include_suborbital', 'spacecraft_config__ids',\n 'related', 'location__ids', 'lsp__ids'\n\nMODE\n'normal', 'list', 'detailed'\nEXAMPLE ?mode=list\n\nSEARCH\nSearches through the launch name, rocket name, launch agency and mission name.\nEXAMPLE - ?search=SpaceX",
        parameters: [
          {
            name: 'name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'slug',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'rocket__configuration__name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'rocket__configuration__id',
            in: 'query',
            description: '',
            required: false,
            type: 'number',
          },
          {
            name: 'status',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'rocket__spacecraftflight__spacecraft__name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'rocket__spacecraftflight__spacecraft__name__icontains',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'rocket__spacecraftflight__spacecraft__id',
            in: 'query',
            description: '',
            required: false,
            type: 'number',
          },
          {
            name: 'rocket__configuration__manufacturer__name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'rocket__configuration__manufacturer__name__icontains',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'rocket__configuration__full_name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'rocket__configuration__full_name__icontains',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'mission__orbit__name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'mission__orbit__name__icontains',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'program',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'r_spacex_api_id',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
          {
            name: 'location__ids',
            in: 'query',
            description: "Filter by a comma-separated list of location ID's.",
            type: 'array',
            items: { type: 'integer' },
          },
          {
            name: 'lsp__ids',
            in: 'query',
            description:
              "Filter by a comma-separated list of launch service providers ID's.",
            type: 'array',
            items: { type: 'integer' },
          },
          {
            name: 'is_crewed',
            in: 'query',
            description: 'Filter by launches with crew assigned.',
            type: 'boolean',
            default: false,
          },
          {
            name: 'include_suborbital',
            in: 'query',
            description: 'Include sub-orbital launches.',
            type: 'boolean',
            default: true,
          },
          {
            name: 'serial_number',
            in: 'query',
            description:
              'Filter by a SpaceX First Stage core serial number. (Example: B1051)',
            type: 'string',
          },
          {
            name: 'lsp__name',
            in: 'query',
            description: 'Filter by a Launch Service Provider name.',
            type: 'string',
          },
          {
            name: 'lsp__id',
            in: 'query',
            description: 'Filter by a Launch Service Provider name.',
            type: 'integer',
          },
          {
            name: 'launcher_config__id',
            in: 'query',
            description: 'Filter by a Launcher Config ID.',
            type: 'integer',
          },
          {
            name: 'spacecraft_config_ids',
            in: 'query',
            description:
              "Filter by a comma-separated list of spacecraft config ID's.",
            type: 'array',
            items: { type: 'integer' },
          },
          {
            name: 'related',
            in: 'query',
            description:
              'Include related agencies launches. Useful for historical launches from companies that have had mergers.',
            type: 'boolean',
            default: false,
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/LaunchSerializerCommon' },
                },
              },
            },
          },
        },
        tags: ['launch'],
      },
      parameters: [],
    },
    '/launch/previous/{id}/': {
      get: {
        operationId: 'launch_previous_read',
        summary: 'API endpoint that returns previous Launch objects.',
        description:
          "GET\nReturn a list of previous Launches\n\nFILTERS\nFields - 'name', 'id(s)', 'lsp__id', 'lsp__name', 'serial_number', 'launcher_config__id',\n 'rocket__spacecraftflight__spacecraft__name', 'is_crewed', 'include_suborbital', 'spacecraft_config__ids',\n 'related', 'location__ids', 'lsp__ids'\n\nMODE\n'normal', 'list', 'detailed'\nEXAMPLE ?mode=list\n\nSEARCH\nSearches through the launch name, rocket name, launch agency and mission name.\nEXAMPLE - ?search=SpaceX",
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/LaunchDetailed' },
          },
        },
        tags: ['launch'],
      },
      parameters: [{ name: 'id', in: 'path', required: true, type: 'string' }],
    },
    '/launch/upcoming/': {
      get: {
        operationId: 'launch_upcoming_list',
        summary:
          'API endpoint that returns future Launch objects and launches from the last twenty four hours.',
        description:
          "GET\nReturn a list of future Launches\n\nFILTERS\nFields - 'name', 'id(s)', 'lsp__id', 'lsp__name', 'serial_number', 'launcher_config__id',\n 'rocket__spacecraftflight__spacecraft__name', 'is_crewed', 'include_suborbital', 'spacecraft_config__ids',\n 'related', 'location__ids', 'lsp__ids'\n\nMODE\n'normal', 'list', 'detailed'\n\nEXAMPLE ?mode=list\n\nSEARCH\nSearches through the launch name, rocket name, launch agency and mission name.\nEXAMPLE - ?search=SpaceX",
        parameters: [
          {
            name: 'name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'slug',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'rocket__configuration__name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'rocket__configuration__id',
            in: 'query',
            description: '',
            required: false,
            type: 'number',
          },
          {
            name: 'status',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'rocket__spacecraftflight__spacecraft__name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'rocket__spacecraftflight__spacecraft__name__icontains',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'rocket__spacecraftflight__spacecraft__id',
            in: 'query',
            description: '',
            required: false,
            type: 'number',
          },
          {
            name: 'rocket__configuration__manufacturer__name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'rocket__configuration__manufacturer__name__icontains',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'rocket__configuration__full_name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'rocket__configuration__full_name__icontains',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'mission__orbit__name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'mission__orbit__name__icontains',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'program',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'r_spacex_api_id',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
          {
            name: 'location__ids',
            in: 'query',
            description: "Filter by a comma-separated list of location ID's.",
            type: 'array',
            items: { type: 'integer' },
          },
          {
            name: 'lsp__ids',
            in: 'query',
            description:
              "Filter by a comma-separated list of launch service providers ID's.",
            type: 'array',
            items: { type: 'integer' },
          },
          {
            name: 'is_crewed',
            in: 'query',
            description: 'Filter by launches with crew assigned.',
            type: 'boolean',
            default: false,
          },
          {
            name: 'include_suborbital',
            in: 'query',
            description: 'Include sub-orbital launches.',
            type: 'boolean',
            default: true,
          },
          {
            name: 'serial_number',
            in: 'query',
            description:
              'Filter by a SpaceX First Stage core serial number. (Example: B1051)',
            type: 'string',
          },
          {
            name: 'lsp__name',
            in: 'query',
            description: 'Filter by a Launch Service Provider name.',
            type: 'string',
          },
          {
            name: 'lsp__id',
            in: 'query',
            description: 'Filter by a Launch Service Provider name.',
            type: 'integer',
          },
          {
            name: 'launcher_config__id',
            in: 'query',
            description: 'Filter by a Launcher Config ID.',
            type: 'integer',
          },
          {
            name: 'spacecraft_config_ids',
            in: 'query',
            description:
              "Filter by a comma-separated list of spacecraft config ID's.",
            type: 'array',
            items: { type: 'integer' },
          },
          {
            name: 'related',
            in: 'query',
            description:
              'Include related agencies launches. Useful for historical launches from companies that have had mergers.',
            type: 'boolean',
            default: false,
          },
          {
            name: 'hide_recent_previous',
            in: 'query',
            description: 'Hide launches in previous 24 hours from response.',
            type: 'boolean',
            default: false,
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/LaunchSerializerCommon' },
                },
              },
            },
          },
        },
        tags: ['launch'],
      },
      parameters: [],
    },
    '/launch/upcoming/{id}/': {
      get: {
        operationId: 'launch_upcoming_read',
        summary:
          'API endpoint that returns future Launch objects and launches from the last twenty four hours.',
        description:
          "GET\nReturn a list of future Launches\n\nFILTERS\nFields - 'name', 'id(s)', 'lsp__id', 'lsp__name', 'serial_number', 'launcher_config__id',\n 'rocket__spacecraftflight__spacecraft__name', 'is_crewed', 'include_suborbital', 'spacecraft_config__ids',\n 'related', 'location__ids', 'lsp__ids'\n\nMODE\n'normal', 'list', 'detailed'\n\nEXAMPLE ?mode=list\n\nSEARCH\nSearches through the launch name, rocket name, launch agency and mission name.\nEXAMPLE - ?search=SpaceX",
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/LaunchDetailed' },
          },
        },
        tags: ['launch'],
      },
      parameters: [{ name: 'id', in: 'path', required: true, type: 'string' }],
    },
    '/launch/{id}/': {
      get: {
        operationId: 'launch_read',
        summary:
          'API endpoint that returns all Launch objects or a single launch.',
        description:
          "EXAMPLE - /launch/\\<id\\>/ or /launch/?mode=list&search=SpaceX\n\nGET\nReturn a list of all Launch objects.\n\nFILTERS\nFields - 'name', 'id(s)', 'lsp__id', 'lsp__name', 'serial_number', 'launcher_config__id',\n 'rocket__spacecraftflight__spacecraft__name', 'is_crewed', 'include_suborbital', 'spacecraft_config__ids',\n 'related', 'location__ids', 'lsp__ids'\n\nMODE\n'normal', 'list', 'detailed'\n\nEXAMPLE ?mode=list\n\nSEARCH\nSearches through the launch name, rocket name, launch agency, mission name & spacecraft name.\n\nEXAMPLE - ?search=SpaceX",
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/LaunchDetailed' },
          },
        },
        tags: ['launch'],
      },
      parameters: [{ name: 'id', in: 'path', required: true, type: 'string' }],
    },
    '/launcher/': {
      get: {
        operationId: 'launcher_list',
        description:
          'API endpoint that allows Launcher instances to be viewed.',
        parameters: [
          {
            name: 'id',
            in: 'query',
            description: '',
            required: false,
            type: 'number',
          },
          {
            name: 'serial_number',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'flight_proven',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'launcher_config',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'launcher_config__manufacturer',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/Launcher' },
                },
              },
            },
          },
        },
        tags: ['launcher'],
      },
      parameters: [],
    },
    '/launcher/{id}/': {
      get: {
        operationId: 'launcher_read',
        description:
          'API endpoint that allows Launcher instances to be viewed.',
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/LauncherDetail' },
          },
        },
        tags: ['launcher'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description:
            'A unique integer value identifying this Launch Vehicle.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/location/': {
      get: {
        operationId: 'location_list',
        description:
          'API endpoint that allows Location instances to be viewed.',
        parameters: [
          {
            name: 'name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'country_code',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'id',
            in: 'query',
            description: '',
            required: false,
            type: 'number',
          },
          {
            name: 'pad__location_id',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/Location' },
                },
              },
            },
          },
        },
        tags: ['location'],
      },
      parameters: [],
    },
    '/location/{id}/': {
      get: {
        operationId: 'location_read',
        description:
          'API endpoint that allows Location instances to be viewed.',
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/LocationDetail' },
          },
        },
        tags: ['location'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description: 'A unique integer value identifying this Location.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/pad/': {
      get: {
        operationId: 'pad_list',
        description:
          'API endpoint that allows Location instances to be viewed.',
        parameters: [
          {
            name: 'name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'id',
            in: 'query',
            description: '',
            required: false,
            type: 'number',
          },
          {
            name: 'location',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/Pad' },
                },
              },
            },
          },
        },
        tags: ['pad'],
      },
      parameters: [],
    },
    '/pad/{id}/': {
      get: {
        operationId: 'pad_read',
        description:
          'API endpoint that allows Location instances to be viewed.',
        parameters: [],
        responses: {
          200: { description: '', schema: { $ref: '#/definitions/Pad' } },
        },
        tags: ['pad'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description: 'A unique integer value identifying this Pad.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/program/': {
      get: {
        operationId: 'program_list',
        description: 'API endpoint that returns Program objects.',
        parameters: [
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/Program' },
                },
              },
            },
          },
        },
        tags: ['program'],
      },
      parameters: [],
    },
    '/program/{id}/': {
      get: {
        operationId: 'program_read',
        description: 'API endpoint that returns Program objects.',
        parameters: [],
        responses: {
          200: { description: '', schema: { $ref: '#/definitions/Program' } },
        },
        tags: ['program'],
      },
      parameters: [{ name: 'id', in: 'path', required: true, type: 'string' }],
    },
    '/spacecraft/': {
      get: {
        operationId: 'spacecraft_list',
        description:
          'API endpoint that allows Spacecrafts to be viewed.\nA Spacecraft is a physically manufactured instance of a Spacecraft Configuration',
        parameters: [
          {
            name: 'name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'status',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'spacecraft_config',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/Spacecraft' },
                },
              },
            },
          },
        },
        tags: ['spacecraft'],
      },
      parameters: [],
    },
    '/spacecraft/flight/': {
      get: {
        operationId: 'spacecraft_flight_list',
        description:
          'API endpoint that allows a flight of a specific Spacecraft instances to be viewed.',
        parameters: [
          {
            name: 'spacecraft',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/SpacecraftFlight' },
                },
              },
            },
          },
        },
        tags: ['spacecraft'],
      },
      parameters: [],
    },
    '/spacecraft/flight/{id}/': {
      get: {
        operationId: 'spacecraft_flight_read',
        description:
          'API endpoint that allows a flight of a specific Spacecraft instances to be viewed.',
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/SpacecraftFlightDetailed' },
          },
        },
        tags: ['spacecraft'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description:
            'A unique integer value identifying this Spacecraft Flight.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/spacecraft/{id}/': {
      get: {
        operationId: 'spacecraft_read',
        description:
          'API endpoint that allows Spacecrafts to be viewed.\nA Spacecraft is a physically manufactured instance of a Spacecraft Configuration',
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/SpacecraftDetailed' },
          },
        },
        tags: ['spacecraft'],
      },
      parameters: [
        {
          name: 'id',
          in: 'path',
          description: 'A unique integer value identifying this Spacecraft.',
          required: true,
          type: 'integer',
        },
      ],
    },
    '/spacestation/': {
      get: {
        operationId: 'spacestation_list',
        description: 'API endpoint that allows Space Stations to be viewed.',
        parameters: [
          {
            name: 'name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'status',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'owners',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'orbit',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'type',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'owners__name',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'owners__abbrev',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/SpaceStation' },
                },
              },
            },
          },
        },
        tags: ['spacestation'],
      },
      parameters: [],
    },
    '/spacestation/{id}/': {
      get: {
        operationId: 'spacestation_read',
        description: 'API endpoint that allows Space Stations to be viewed.',
        parameters: [],
        responses: {
          200: {
            description: '',
            schema: { $ref: '#/definitions/SpaceStationDetailed' },
          },
        },
        tags: ['spacestation'],
      },
      parameters: [{ name: 'id', in: 'path', required: true, type: 'string' }],
    },
    '/updates/': {
      get: {
        operationId: 'updates_list',
        description: 'API endpoint that allows Updates to be viewed.',
        parameters: [
          {
            name: 'created_on',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'launch',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'program',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'launch__launch_service_provider',
            in: 'query',
            description: '',
            required: false,
            type: 'string',
          },
          {
            name: 'search',
            in: 'query',
            description: 'A search term.',
            required: false,
            type: 'string',
          },
          {
            name: 'ordering',
            in: 'query',
            description: 'Which field to use when ordering the results.',
            required: false,
            type: 'string',
          },
          {
            name: 'limit',
            in: 'query',
            description: 'Number of results to return per page.',
            required: false,
            type: 'integer',
          },
          {
            name: 'offset',
            in: 'query',
            description: 'The initial index from which to return the results.',
            required: false,
            type: 'integer',
          },
        ],
        responses: {
          200: {
            description: '',
            schema: {
              required: ['count', 'results'],
              type: 'object',
              properties: {
                count: { type: 'integer' },
                next: { type: 'string', format: 'uri', 'x-nullable': true },
                previous: { type: 'string', format: 'uri', 'x-nullable': true },
                results: {
                  type: 'array',
                  items: { $ref: '#/definitions/Update' },
                },
              },
            },
          },
        },
        tags: ['updates'],
      },
      parameters: [],
    },
    '/updates/{id}/': {
      get: {
        operationId: 'updates_read',
        description: 'API endpoint that allows Updates to be viewed.',
        parameters: [],
        responses: {
          200: { description: '', schema: { $ref: '#/definitions/Update' } },
        },
        tags: ['updates'],
      },
      parameters: [{ name: 'id', in: 'path', required: true, type: 'string' }],
    },
  },
  definitions: {
    Agency: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 200, minLength: 1 },
        featured: { title: 'Featured', type: 'boolean' },
        type: {
          title: 'Type',
          type: 'string',
          maxLength: 255,
          'x-nullable': true,
        },
        country_code: {
          title: 'Country code',
          type: 'string',
          maxLength: 1048,
        },
        abbrev: { title: 'Abbrev', type: 'string', maxLength: 255 },
        description: {
          title: 'Description',
          type: 'string',
          maxLength: 2048,
          'x-nullable': true,
        },
        administrator: {
          title: 'Administrator',
          type: 'string',
          maxLength: 200,
          'x-nullable': true,
        },
        founding_year: {
          title: 'Founding year',
          type: 'string',
          maxLength: 20,
          'x-nullable': true,
        },
        launchers: { title: 'Launchers', type: 'string', maxLength: 500 },
        spacecraft: { title: 'Spacecraft', type: 'string', maxLength: 500 },
        parent: { title: 'Parent', type: 'string', readOnly: true },
        image_url: {
          title: 'Image url',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
      },
    },
    LauncherConfigDetailSerializerForAgency: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 200, minLength: 1 },
        description: { title: 'Description', type: 'string', maxLength: 2048 },
        family: { title: 'Family', type: 'string', maxLength: 200 },
        full_name: { title: 'Full name', type: 'string', maxLength: 200 },
        variant: { title: 'Variant', type: 'string', maxLength: 200 },
        alias: { title: 'Alias', type: 'string', maxLength: 200 },
        min_stage: {
          title: 'Min stage',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
          'x-nullable': true,
        },
        max_stage: {
          title: 'Max stage',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
          'x-nullable': true,
        },
        length: { title: 'Length (m)', type: 'number', 'x-nullable': true },
        diameter: {
          title: 'Max Diameter (m)',
          type: 'number',
          'x-nullable': true,
        },
        maiden_flight: {
          title: 'Maiden Flight Date',
          type: 'string',
          format: 'date',
          'x-nullable': true,
        },
        launch_mass: {
          title: 'Mass at Launch (T)',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
          'x-nullable': true,
        },
        leo_capacity: {
          title: 'LEO Capacity (kg)',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
          'x-nullable': true,
        },
        gto_capacity: {
          title: 'GTO Capacity (kg)',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
          'x-nullable': true,
        },
        to_thrust: {
          title: 'Thrust at Liftoff (kN)',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
          'x-nullable': true,
        },
        apogee: {
          title: 'Apogee - Sub-Orbital Only (km)',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
          'x-nullable': true,
        },
        vehicle_range: {
          title: 'Vehicle Range - Legacy',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
          'x-nullable': true,
        },
        image_url: {
          title: 'Image url',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
        info_url: {
          title: 'Info url',
          type: 'string',
          maxLength: 200,
          'x-nullable': true,
        },
        wiki_url: {
          title: 'Wiki url',
          type: 'string',
          maxLength: 200,
          'x-nullable': true,
        },
        consecutive_successful_launches: {
          title: 'Consecutive successful launches',
          type: 'integer',
          readOnly: true,
        },
        successful_launches: {
          title: 'Successful launches',
          type: 'integer',
          readOnly: true,
        },
        failed_launches: {
          title: 'Failed launches',
          type: 'integer',
          readOnly: true,
        },
        pending_launches: {
          title: 'Pending launches',
          type: 'integer',
          readOnly: true,
        },
      },
    },
    SpacecraftConfigType: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
      },
    },
    SpacecraftConfigurationDetail: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 200, minLength: 1 },
        type: { $ref: '#/definitions/SpacecraftConfigType' },
        agency: { $ref: '#/definitions/Agency' },
        in_use: { title: 'In use', type: 'boolean' },
        capability: {
          title: 'Capability',
          type: 'string',
          maxLength: 2048,
          minLength: 1,
        },
        history: {
          title: 'History',
          type: 'string',
          maxLength: 1000,
          minLength: 1,
        },
        details: {
          title: 'Details',
          type: 'string',
          maxLength: 1000,
          minLength: 1,
        },
        maiden_flight: {
          title: 'Maiden flight',
          type: 'string',
          format: 'date',
          'x-nullable': true,
        },
        height: { title: 'Length (m)', type: 'number', 'x-nullable': true },
        diameter: { title: 'Diameter (m)', type: 'number', 'x-nullable': true },
        human_rated: { title: 'Human rated', type: 'boolean' },
        crew_capacity: {
          title: 'Crew Capacity',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
          'x-nullable': true,
        },
        payload_capacity: {
          title: 'Payload Capacity (kg)',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
          'x-nullable': true,
        },
        flight_life: {
          title: 'Flight life',
          type: 'string',
          maxLength: 2048,
          'x-nullable': true,
        },
        image_url: {
          title: 'Image url',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
        nation_url: {
          title: 'Nation url',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
        wiki_link: {
          title: 'Wiki link',
          type: 'string',
          format: 'uri',
          maxLength: 200,
        },
        info_link: {
          title: 'Info link',
          type: 'string',
          format: 'uri',
          maxLength: 200,
        },
      },
    },
    AgencySerializerDetailed: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 200, minLength: 1 },
        featured: { title: 'Featured', type: 'boolean' },
        type: {
          title: 'Type',
          type: 'string',
          maxLength: 255,
          'x-nullable': true,
        },
        country_code: {
          title: 'Country code',
          type: 'string',
          maxLength: 1048,
        },
        abbrev: { title: 'Abbrev', type: 'string', maxLength: 255 },
        description: {
          title: 'Description',
          type: 'string',
          maxLength: 2048,
          'x-nullable': true,
        },
        administrator: {
          title: 'Administrator',
          type: 'string',
          maxLength: 200,
          'x-nullable': true,
        },
        founding_year: {
          title: 'Founding year',
          type: 'string',
          maxLength: 20,
          'x-nullable': true,
        },
        launchers: { title: 'Launchers', type: 'string', maxLength: 500 },
        spacecraft: { title: 'Spacecraft', type: 'string', maxLength: 500 },
        parent: { title: 'Parent', type: 'string', readOnly: true },
        launch_library_url: {
          title: 'Launch library url',
          type: 'string',
          readOnly: true,
        },
        total_launch_count: {
          title: 'Total launch count',
          type: 'integer',
          readOnly: true,
        },
        successful_launches: {
          title: 'Successful launches',
          type: 'integer',
          readOnly: true,
        },
        consecutive_successful_launches: {
          title: 'Consecutive successful launches',
          type: 'integer',
          readOnly: true,
        },
        failed_launches: {
          title: 'Failed launches',
          type: 'integer',
          readOnly: true,
        },
        pending_launches: {
          title: 'Pending launches',
          type: 'integer',
          readOnly: true,
        },
        successful_landings: {
          title: 'Successful landings',
          type: 'integer',
          readOnly: true,
        },
        failed_landings: {
          title: 'Failed landings',
          type: 'integer',
          readOnly: true,
        },
        attempted_landings: {
          title: 'Attempted landings',
          type: 'integer',
          readOnly: true,
        },
        consecutive_successful_landings: {
          title: 'Consecutive successful landings',
          type: 'integer',
          readOnly: true,
        },
        info_url: {
          title: 'Info url',
          type: 'string',
          format: 'uri',
          maxLength: 200,
          'x-nullable': true,
        },
        wiki_url: {
          title: 'Wiki url',
          type: 'string',
          format: 'uri',
          maxLength: 200,
          'x-nullable': true,
        },
        logo_url: {
          title: 'Logo url',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
        image_url: {
          title: 'Image url',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
        nation_url: {
          title: 'Nation url',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
        launcher_list: {
          type: 'array',
          items: {
            $ref: '#/definitions/LauncherConfigDetailSerializerForAgency',
          },
          readOnly: true,
        },
        spacecraft_list: {
          type: 'array',
          items: { $ref: '#/definitions/SpacecraftConfigurationDetail' },
          readOnly: true,
        },
      },
    },
    AstronautStatus: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
      },
    },
    AstronautType: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
      },
    },
    AstronautNormal: {
      required: ['name', 'date_of_birth', 'nationality', 'bio'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
        status: { $ref: '#/definitions/AstronautStatus' },
        type: { $ref: '#/definitions/AstronautType' },
        date_of_birth: {
          title: 'Date of birth',
          type: 'string',
          format: 'date',
        },
        date_of_death: {
          title: 'Date of death',
          type: 'string',
          format: 'date',
          'x-nullable': true,
        },
        nationality: {
          title: 'Nationality',
          type: 'string',
          maxLength: 255,
          minLength: 1,
        },
        bio: { title: 'Bio', type: 'string', maxLength: 2048, minLength: 1 },
        twitter: {
          title: 'Twitter',
          type: 'string',
          maxLength: 255,
          'x-nullable': true,
        },
        instagram: {
          title: 'Instagram',
          type: 'string',
          maxLength: 255,
          'x-nullable': true,
        },
        wiki: {
          title: 'Wiki',
          type: 'string',
          maxLength: 255,
          'x-nullable': true,
        },
        agency: { $ref: '#/definitions/Agency' },
        profile_image: {
          title: 'Profile image',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
        profile_image_thumbnail: {
          title: 'Profile image thumbnail',
          type: 'string',
          readOnly: true,
          format: 'uri',
        },
        last_flight: { title: 'Last flight', type: 'string', readOnly: true },
        first_flight: { title: 'First flight', type: 'string', readOnly: true },
      },
    },
    AgencySerializerMini: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 200, minLength: 1 },
        type: {
          title: 'Type',
          type: 'string',
          maxLength: 255,
          'x-nullable': true,
        },
      },
    },
    LaunchStatus: {
      required: ['id'],
      type: 'object',
      properties: {
        id: {
          title: 'Id',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
        },
        name: { title: 'Name', type: 'string', readOnly: true },
        abbrev: { title: 'Abbrev', type: 'string', maxLength: 255 },
        description: { title: 'Description', type: 'string', maxLength: 2048 },
      },
    },
    LauncherConfigList: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 200, minLength: 1 },
        family: { title: 'Family', type: 'string', maxLength: 200 },
        full_name: { title: 'Full name', type: 'string', maxLength: 200 },
        variant: { title: 'Variant', type: 'string', maxLength: 200 },
      },
    },
    RocketSerializerCommon: {
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        configuration: { $ref: '#/definitions/LauncherConfigList' },
      },
    },
    Orbit: {
      required: ['name', 'abbrev'],
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 50, minLength: 1 },
        abbrev: {
          title: 'Abbrev',
          type: 'string',
          maxLength: 30,
          minLength: 1,
        },
      },
    },
    Mission: {
      required: ['orbit'],
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255 },
        description: { title: 'Description', type: 'string' },
        launch_designator: {
          title: 'Launch designator',
          type: 'string',
          maxLength: 255,
          'x-nullable': true,
        },
        type: { title: 'Type', type: 'string', readOnly: true },
        orbit: { $ref: '#/definitions/Orbit' },
      },
    },
    Location: {
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255 },
        country_code: { title: 'Country code', type: 'string', maxLength: 255 },
        map_image: {
          title: 'Map image',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
        total_launch_count: {
          title: 'Total launch count',
          type: 'integer',
          readOnly: true,
        },
        total_landing_count: {
          title: 'Total landing count',
          type: 'integer',
          readOnly: true,
        },
      },
    },
    Pad: {
      required: ['location'],
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        agency_id: {
          title: 'Agency id',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
          'x-nullable': true,
        },
        name: { title: 'Name', type: 'string', maxLength: 255 },
        info_url: {
          title: 'Info url',
          type: 'string',
          format: 'uri',
          maxLength: 200,
          'x-nullable': true,
        },
        wiki_url: {
          title: 'Wiki url',
          type: 'string',
          format: 'uri',
          maxLength: 200,
          'x-nullable': true,
        },
        map_url: {
          title: 'Map url',
          type: 'string',
          format: 'uri',
          maxLength: 200,
          'x-nullable': true,
        },
        latitude: {
          title: 'Latitude',
          type: 'string',
          maxLength: 30,
          'x-nullable': true,
        },
        longitude: {
          title: 'Longitude',
          type: 'string',
          maxLength: 30,
          'x-nullable': true,
        },
        location: { $ref: '#/definitions/Location' },
        map_image: {
          title: 'Map image',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
        total_launch_count: {
          title: 'Total launch count',
          type: 'integer',
          readOnly: true,
        },
      },
    },
    MissionPatch: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 200, minLength: 1 },
        priority: {
          title: 'Priority',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
        },
        image_url: {
          title: 'Image url',
          type: 'string',
          readOnly: true,
          format: 'uri',
        },
        agency: { $ref: '#/definitions/AgencySerializerMini' },
      },
    },
    Program: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
        description: {
          title: 'Description',
          type: 'string',
          maxLength: 40000,
          'x-nullable': true,
        },
        agencies: {
          type: 'array',
          items: { $ref: '#/definitions/AgencySerializerMini' },
          readOnly: true,
        },
        image_url: {
          title: 'Image url',
          type: 'string',
          readOnly: true,
          format: 'uri',
        },
        start_date: {
          title: 'Start date',
          type: 'string',
          format: 'date-time',
          'x-nullable': true,
        },
        end_date: {
          title: 'End date',
          type: 'string',
          format: 'date-time',
          'x-nullable': true,
        },
        info_url: {
          title: 'Info url',
          type: 'string',
          format: 'uri',
          maxLength: 200,
          'x-nullable': true,
        },
        wiki_url: {
          title: 'Wiki url',
          type: 'string',
          format: 'uri',
          maxLength: 200,
          'x-nullable': true,
        },
        mission_patches: {
          type: 'array',
          items: { $ref: '#/definitions/MissionPatch' },
          readOnly: true,
        },
      },
    },
    LaunchSerializerCommon: {
      required: ['slug'],
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'string', format: 'uuid', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        slug: {
          title: 'Slug',
          type: 'string',
          format: 'slug',
          pattern: '^[-a-zA-Z0-9_]+$',
          minLength: 1,
        },
        name: { title: 'Name', type: 'string', maxLength: 2048 },
        status: { $ref: '#/definitions/LaunchStatus' },
        last_updated: {
          title: 'Last updated',
          type: 'string',
          format: 'date-time',
          readOnly: true,
        },
        net: {
          title: 'Net',
          type: 'string',
          format: 'date-time',
          'x-nullable': true,
        },
        window_end: {
          title: 'Window end',
          type: 'string',
          format: 'date-time',
          'x-nullable': true,
        },
        window_start: {
          title: 'Window start',
          type: 'string',
          format: 'date-time',
          'x-nullable': true,
        },
        probability: {
          title: 'Probability',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
          'x-nullable': true,
        },
        holdreason: {
          title: 'Holdreason',
          type: 'string',
          maxLength: 2048,
          'x-nullable': true,
        },
        failreason: {
          title: 'Failreason',
          type: 'string',
          maxLength: 2048,
          'x-nullable': true,
        },
        hashtag: {
          title: 'Hashtag',
          type: 'string',
          maxLength: 2048,
          'x-nullable': true,
        },
        launch_service_provider: { $ref: '#/definitions/AgencySerializerMini' },
        rocket: { $ref: '#/definitions/RocketSerializerCommon' },
        mission: { $ref: '#/definitions/Mission' },
        pad: { $ref: '#/definitions/Pad' },
        infoURLs: { title: 'Infourls', type: 'string', readOnly: true },
        vidURLs: { title: 'Vidurls', type: 'string', readOnly: true },
        webcast_live: { title: 'Webcast live', type: 'boolean' },
        image: { title: 'Image', type: 'string', readOnly: true },
        infographic: { title: 'Infographic', type: 'string', readOnly: true },
        program: {
          type: 'array',
          items: { $ref: '#/definitions/Program' },
          readOnly: true,
        },
      },
    },
    SpacecraftStatus: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
      },
    },
    SpacecraftConfig: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 200, minLength: 1 },
        type: { $ref: '#/definitions/SpacecraftConfigType' },
        agency: { $ref: '#/definitions/AgencySerializerMini' },
        in_use: { title: 'In use', type: 'boolean' },
        image_url: {
          title: 'Image url',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
      },
    },
    Spacecraft: {
      required: ['name', 'description'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
        serial_number: {
          title: 'Serial number',
          type: 'string',
          maxLength: 255,
          'x-nullable': true,
        },
        status: { $ref: '#/definitions/SpacecraftStatus' },
        description: {
          title: 'Description',
          type: 'string',
          maxLength: 2048,
          minLength: 1,
        },
        spacecraft_config: { $ref: '#/definitions/SpacecraftConfig' },
      },
    },
    SpacecraftFlight: {
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        destination: {
          title: 'Destination',
          type: 'string',
          maxLength: 255,
          'x-nullable': true,
        },
        mission_end: {
          title: 'Mission end',
          type: 'string',
          format: 'date-time',
          'x-nullable': true,
        },
        spacecraft: { $ref: '#/definitions/Spacecraft' },
        launch: { $ref: '#/definitions/LaunchSerializerCommon' },
      },
    },
    AstronautDetailed: {
      required: ['name', 'date_of_birth', 'nationality', 'bio'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
        status: { $ref: '#/definitions/AstronautStatus' },
        type: { $ref: '#/definitions/AstronautType' },
        agency: { $ref: '#/definitions/AgencySerializerMini' },
        date_of_birth: {
          title: 'Date of birth',
          type: 'string',
          format: 'date',
        },
        date_of_death: {
          title: 'Date of death',
          type: 'string',
          format: 'date',
          'x-nullable': true,
        },
        nationality: {
          title: 'Nationality',
          type: 'string',
          maxLength: 255,
          minLength: 1,
        },
        twitter: {
          title: 'Twitter',
          type: 'string',
          maxLength: 255,
          'x-nullable': true,
        },
        instagram: {
          title: 'Instagram',
          type: 'string',
          maxLength: 255,
          'x-nullable': true,
        },
        bio: { title: 'Bio', type: 'string', maxLength: 2048, minLength: 1 },
        profile_image: {
          title: 'Profile image',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
        profile_image_thumbnail: {
          title: 'Profile image thumbnail',
          type: 'string',
          readOnly: true,
          format: 'uri',
        },
        wiki: {
          title: 'Wiki',
          type: 'string',
          maxLength: 255,
          'x-nullable': true,
        },
        flights: {
          type: 'array',
          items: { $ref: '#/definitions/LaunchSerializerCommon' },
          readOnly: true,
        },
        landings: {
          type: 'array',
          items: { $ref: '#/definitions/SpacecraftFlight' },
          readOnly: true,
        },
        last_flight: { title: 'Last flight', type: 'string', readOnly: true },
        first_flight: { title: 'First flight', type: 'string', readOnly: true },
      },
    },
    AgencyType: {
      required: ['id'],
      type: 'object',
      properties: {
        id: {
          title: 'Id',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
        },
        name: { title: 'Name', type: 'string', maxLength: 255 },
      },
    },
    AstronautRole: {
      required: ['role'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        role: { title: 'Role', type: 'string', maxLength: 255, minLength: 1 },
        priority: {
          title: 'Priority',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
        },
      },
    },
    DockingLocation: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
      },
    },
    EventType: {
      required: ['id'],
      type: 'object',
      properties: {
        id: {
          title: 'Id',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
        },
        name: { title: 'Name', type: 'string', maxLength: 255 },
      },
    },
    FirstStageType: {
      required: ['id'],
      type: 'object',
      properties: {
        id: {
          title: 'Id',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
        },
        name: { title: 'Name', type: 'string', maxLength: 50 },
      },
    },
    LandingLocation: {
      required: ['location'],
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255 },
        abbrev: { title: 'Abbrev', type: 'string', maxLength: 255 },
        description: {
          title: 'Description',
          type: 'string',
          maxLength: 2048,
          'x-nullable': true,
        },
        location: { $ref: '#/definitions/Location' },
        successful_landings: {
          title: 'Successful landings',
          type: 'string',
          readOnly: true,
        },
      },
    },
    LauncherConfig: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 200, minLength: 1 },
        manufacturer: { $ref: '#/definitions/Agency' },
        program: {
          type: 'array',
          items: { $ref: '#/definitions/Program' },
          readOnly: true,
        },
        family: { title: 'Family', type: 'string', maxLength: 200 },
        full_name: { title: 'Full name', type: 'string', maxLength: 200 },
        variant: { title: 'Variant', type: 'string', maxLength: 200 },
        reusable: { title: 'Reusable', type: 'boolean' },
        image_url: {
          title: 'Image url',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
        info_url: {
          title: 'Info url',
          type: 'string',
          maxLength: 200,
          'x-nullable': true,
        },
        wiki_url: {
          title: 'Wiki url',
          type: 'string',
          maxLength: 200,
          'x-nullable': true,
        },
      },
    },
    AgencySerializerDetailedCommon: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 200, minLength: 1 },
        featured: { title: 'Featured', type: 'boolean' },
        type: {
          title: 'Type',
          type: 'string',
          maxLength: 255,
          'x-nullable': true,
        },
        country_code: {
          title: 'Country code',
          type: 'string',
          maxLength: 1048,
        },
        abbrev: { title: 'Abbrev', type: 'string', maxLength: 255 },
        description: {
          title: 'Description',
          type: 'string',
          maxLength: 2048,
          'x-nullable': true,
        },
        administrator: {
          title: 'Administrator',
          type: 'string',
          maxLength: 200,
          'x-nullable': true,
        },
        founding_year: {
          title: 'Founding year',
          type: 'string',
          maxLength: 20,
          'x-nullable': true,
        },
        launchers: { title: 'Launchers', type: 'string', maxLength: 500 },
        spacecraft: { title: 'Spacecraft', type: 'string', maxLength: 500 },
        launch_library_url: {
          title: 'Launch library url',
          type: 'string',
          readOnly: true,
        },
        total_launch_count: {
          title: 'Total launch count',
          type: 'integer',
          readOnly: true,
        },
        consecutive_successful_launches: {
          title: 'Consecutive successful launches',
          type: 'integer',
          readOnly: true,
        },
        successful_launches: {
          title: 'Successful launches',
          type: 'integer',
          readOnly: true,
        },
        failed_launches: {
          title: 'Failed launches',
          type: 'integer',
          readOnly: true,
        },
        pending_launches: {
          title: 'Pending launches',
          type: 'integer',
          readOnly: true,
        },
        consecutive_successful_landings: {
          title: 'Consecutive successful landings',
          type: 'integer',
          readOnly: true,
        },
        successful_landings: {
          title: 'Successful landings',
          type: 'integer',
          readOnly: true,
        },
        failed_landings: {
          title: 'Failed landings',
          type: 'integer',
          readOnly: true,
        },
        attempted_landings: {
          title: 'Attempted landings',
          type: 'integer',
          readOnly: true,
        },
        info_url: {
          title: 'Info url',
          type: 'string',
          format: 'uri',
          maxLength: 200,
          'x-nullable': true,
        },
        wiki_url: {
          title: 'Wiki url',
          type: 'string',
          format: 'uri',
          maxLength: 200,
          'x-nullable': true,
        },
        logo_url: {
          title: 'Logo url',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
        image_url: {
          title: 'Image url',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
        nation_url: {
          title: 'Nation url',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
      },
    },
    LauncherConfigDetail: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 200, minLength: 1 },
        description: { title: 'Description', type: 'string', maxLength: 2048 },
        family: { title: 'Family', type: 'string', maxLength: 200 },
        full_name: { title: 'Full name', type: 'string', maxLength: 200 },
        manufacturer: { $ref: '#/definitions/AgencySerializerDetailedCommon' },
        program: {
          type: 'array',
          items: { $ref: '#/definitions/Program' },
          readOnly: true,
        },
        variant: { title: 'Variant', type: 'string', maxLength: 200 },
        alias: { title: 'Alias', type: 'string', maxLength: 200 },
        min_stage: {
          title: 'Min stage',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
          'x-nullable': true,
        },
        max_stage: {
          title: 'Max stage',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
          'x-nullable': true,
        },
        length: { title: 'Length (m)', type: 'number', 'x-nullable': true },
        diameter: {
          title: 'Max Diameter (m)',
          type: 'number',
          'x-nullable': true,
        },
        maiden_flight: {
          title: 'Maiden Flight Date',
          type: 'string',
          format: 'date',
          'x-nullable': true,
        },
        launch_cost: {
          title: 'Launch Cost ($)',
          type: 'string',
          maxLength: 200,
          'x-nullable': true,
        },
        launch_mass: {
          title: 'Mass at Launch (T)',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
          'x-nullable': true,
        },
        leo_capacity: {
          title: 'LEO Capacity (kg)',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
          'x-nullable': true,
        },
        gto_capacity: {
          title: 'GTO Capacity (kg)',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
          'x-nullable': true,
        },
        to_thrust: {
          title: 'Thrust at Liftoff (kN)',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
          'x-nullable': true,
        },
        apogee: {
          title: 'Apogee - Sub-Orbital Only (km)',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
          'x-nullable': true,
        },
        vehicle_range: {
          title: 'Vehicle Range - Legacy',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
          'x-nullable': true,
        },
        image_url: {
          title: 'Image url',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
        info_url: {
          title: 'Info url',
          type: 'string',
          maxLength: 200,
          'x-nullable': true,
        },
        wiki_url: {
          title: 'Wiki url',
          type: 'string',
          maxLength: 200,
          'x-nullable': true,
        },
        total_launch_count: {
          title: 'Total launch count',
          type: 'integer',
          readOnly: true,
        },
        consecutive_successful_launches: {
          title: 'Consecutive successful launches',
          type: 'integer',
          readOnly: true,
        },
        successful_launches: {
          title: 'Successful launches',
          type: 'integer',
          readOnly: true,
        },
        failed_launches: {
          title: 'Failed launches',
          type: 'integer',
          readOnly: true,
        },
        pending_launches: {
          title: 'Pending launches',
          type: 'integer',
          readOnly: true,
        },
      },
    },
    MissionType: {
      required: ['id'],
      type: 'object',
      properties: {
        id: {
          title: 'Id',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
        },
        name: { title: 'Name', type: 'string', maxLength: 255 },
      },
    },
    NoticeType: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
      },
    },
    RoadClosureStatus: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
      },
    },
    SpacecraftConfiguration: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 200, minLength: 1 },
        agency: { $ref: '#/definitions/Agency' },
        in_use: { title: 'In use', type: 'boolean' },
        capability: {
          title: 'Capability',
          type: 'string',
          maxLength: 2048,
          minLength: 1,
        },
        maiden_flight: {
          title: 'Maiden flight',
          type: 'string',
          format: 'date',
          'x-nullable': true,
        },
        human_rated: { title: 'Human rated', type: 'boolean' },
        crew_capacity: {
          title: 'Crew Capacity',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
          'x-nullable': true,
        },
        image_url: {
          title: 'Image url',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
        nation_url: {
          title: 'Nation url',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
        wiki_link: {
          title: 'Wiki link',
          type: 'string',
          format: 'uri',
          maxLength: 200,
        },
        info_link: {
          title: 'Info link',
          type: 'string',
          format: 'uri',
          maxLength: 200,
        },
      },
    },
    SpaceStationStatus: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
      },
    },
    SpacecraftFlightSerializerForDockingEvent: {
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        destination: {
          title: 'Destination',
          type: 'string',
          maxLength: 255,
          'x-nullable': true,
        },
        mission_end: {
          title: 'Mission end',
          type: 'string',
          format: 'date-time',
          'x-nullable': true,
        },
        spacecraft: { $ref: '#/definitions/Spacecraft' },
      },
    },
    DockingEvent: {
      required: ['launch_id', 'docking'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        launch_id: { title: 'Launch id', type: 'string', minLength: 1 },
        docking: { title: 'Docking', type: 'string', format: 'date-time' },
        departure: {
          title: 'Departure',
          type: 'string',
          format: 'date-time',
          'x-nullable': true,
        },
        flight_vehicle: {
          $ref: '#/definitions/SpacecraftFlightSerializerForDockingEvent',
        },
        docking_location: { $ref: '#/definitions/DockingLocation' },
      },
    },
    SpacecraftDetailedNoFlights: {
      required: ['name', 'description'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
        serial_number: {
          title: 'Serial number',
          type: 'string',
          maxLength: 255,
          'x-nullable': true,
        },
        status: { $ref: '#/definitions/SpacecraftStatus' },
        description: {
          title: 'Description',
          type: 'string',
          maxLength: 2048,
          minLength: 1,
        },
        spacecraft_config: {
          $ref: '#/definitions/SpacecraftConfigurationDetail',
        },
      },
    },
    SpacecraftFlightSerializerForDockingEventDetailed: {
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        destination: {
          title: 'Destination',
          type: 'string',
          maxLength: 255,
          'x-nullable': true,
        },
        mission_end: {
          title: 'Mission end',
          type: 'string',
          format: 'date-time',
          'x-nullable': true,
        },
        spacecraft: { $ref: '#/definitions/SpacecraftDetailedNoFlights' },
      },
    },
    SpaceStationSerializerForDockingEvent: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
        image_url: {
          title: 'Image url',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
      },
    },
    DockingEventDetailed: {
      required: ['launch_id', 'docking'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        launch_id: { title: 'Launch id', type: 'string', minLength: 1 },
        docking: { title: 'Docking', type: 'string', format: 'date-time' },
        departure: {
          title: 'Departure',
          type: 'string',
          format: 'date-time',
          'x-nullable': true,
        },
        flight_vehicle: {
          $ref: '#/definitions/SpacecraftFlightSerializerForDockingEventDetailed',
        },
        docking_location: { $ref: '#/definitions/DockingLocation' },
        space_station: {
          $ref: '#/definitions/SpaceStationSerializerForDockingEvent',
        },
      },
    },
    Update: {
      required: ['id'],
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer' },
        profile_image: {
          title: 'Profile image',
          type: 'string',
          readOnly: true,
        },
        comment: {
          title: 'Comment',
          type: 'string',
          maxLength: 40000,
          'x-nullable': true,
        },
        info_url: {
          title: 'Info url',
          type: 'string',
          format: 'uri',
          maxLength: 200,
          'x-nullable': true,
        },
        created_by: { title: 'Created by', type: 'string', readOnly: true },
        created_on: {
          title: 'Created on',
          type: 'string',
          format: 'date-time',
          readOnly: true,
        },
      },
    },
    SpaceStationSerializerForExpedition: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
        status: { $ref: '#/definitions/SpaceStationStatus' },
        orbit: { title: 'Orbit', type: 'string', readOnly: true },
        image_url: {
          title: 'Image url',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
      },
    },
    Expedition: {
      required: ['name', 'start'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
        start: { title: 'Start', type: 'string', format: 'date-time' },
        end: {
          title: 'End',
          type: 'string',
          format: 'date-time',
          'x-nullable': true,
        },
        spacestation: {
          $ref: '#/definitions/SpaceStationSerializerForExpedition',
        },
      },
    },
    SpaceStationSerializerForCommon: {
      required: ['name', 'founded', 'description'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
        status: { $ref: '#/definitions/SpaceStationStatus' },
        founded: { title: 'Founded', type: 'string', format: 'date' },
        description: {
          title: 'Description',
          type: 'string',
          maxLength: 2048,
          minLength: 1,
        },
        orbit: { title: 'Orbit', type: 'string', readOnly: true },
        image_url: {
          title: 'Image url',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
      },
    },
    Events: {
      required: ['slug', 'name', 'launches', 'expeditions', 'spacestations'],
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        slug: {
          title: 'Slug',
          type: 'string',
          format: 'slug',
          pattern: '^[-a-zA-Z0-9_]+$',
          minLength: 1,
        },
        name: { title: 'Name', type: 'string', maxLength: 200, minLength: 1 },
        updates: {
          type: 'array',
          items: { $ref: '#/definitions/Update' },
          readOnly: true,
        },
        type: { $ref: '#/definitions/EventType' },
        description: { title: 'Description', type: 'string', maxLength: 2048 },
        location: {
          title: 'Location',
          type: 'string',
          maxLength: 100,
          'x-nullable': true,
        },
        news_url: {
          title: 'News url',
          type: 'string',
          format: 'uri',
          maxLength: 250,
          'x-nullable': true,
        },
        video_url: {
          title: 'Video url',
          type: 'string',
          format: 'uri',
          maxLength: 250,
          'x-nullable': true,
        },
        feature_image: {
          title: 'Feature image',
          type: 'string',
          readOnly: true,
          format: 'uri',
        },
        date: {
          title: 'Date',
          type: 'string',
          format: 'date-time',
          'x-nullable': true,
        },
        launches: {
          type: 'array',
          items: { $ref: '#/definitions/LaunchSerializerCommon' },
        },
        expeditions: {
          type: 'array',
          items: { $ref: '#/definitions/Expedition' },
        },
        spacestations: {
          type: 'array',
          items: { $ref: '#/definitions/SpaceStationSerializerForCommon' },
        },
        program: {
          type: 'array',
          items: { $ref: '#/definitions/Program' },
          readOnly: true,
        },
      },
    },
    AgencyList: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 200, minLength: 1 },
        abbrev: { title: 'Abbrev', type: 'string', maxLength: 255 },
      },
    },
    SpaceStationDetailedSerializerForExpedition: {
      required: ['name', 'founded', 'description'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
        status: { $ref: '#/definitions/SpaceStationStatus' },
        founded: { title: 'Founded', type: 'string', format: 'date' },
        description: {
          title: 'Description',
          type: 'string',
          maxLength: 2048,
          minLength: 1,
        },
        orbit: { title: 'Orbit', type: 'string', readOnly: true },
        image_url: {
          title: 'Image url',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
        owners: {
          type: 'array',
          items: { $ref: '#/definitions/AgencyList' },
          readOnly: true,
        },
      },
    },
    Astronaut: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
        status: { $ref: '#/definitions/AstronautStatus' },
        agency: { $ref: '#/definitions/AgencySerializerMini' },
        profile_image: {
          title: 'Profile image',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
        profile_image_thumbnail: {
          title: 'Profile image thumbnail',
          type: 'string',
          readOnly: true,
          format: 'uri',
        },
      },
    },
    AstronautFlightForExpedition: {
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        role: { $ref: '#/definitions/AstronautRole' },
        astronaut: { $ref: '#/definitions/Astronaut' },
      },
    },
    ExpeditionDetail: {
      required: ['name', 'start'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
        start: { title: 'Start', type: 'string', format: 'date-time' },
        end: {
          title: 'End',
          type: 'string',
          format: 'date-time',
          'x-nullable': true,
        },
        spacestation: {
          $ref: '#/definitions/SpaceStationDetailedSerializerForExpedition',
        },
        crew: {
          type: 'array',
          items: { $ref: '#/definitions/AstronautFlightForExpedition' },
          readOnly: true,
        },
      },
    },
    LauncherDetailed: {
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        details: { title: 'Details', type: 'string', maxLength: 2048 },
        flight_proven: { title: 'Flight proven', type: 'boolean' },
        serial_number: {
          title: 'Serial number',
          type: 'string',
          maxLength: 10,
          'x-nullable': true,
        },
        status: { title: 'Status', type: 'string', maxLength: 2048 },
        image_url: {
          title: 'Image url',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
        successful_landings: {
          title: 'Successful landings',
          type: 'string',
          readOnly: true,
        },
        attempted_landings: {
          title: 'Attempted landings',
          type: 'string',
          readOnly: true,
        },
        flights: { title: 'Flights', type: 'string', readOnly: true },
        last_launch_date: {
          title: 'Last launch date',
          type: 'string',
          readOnly: true,
        },
        first_launch_date: {
          title: 'First launch date',
          type: 'string',
          readOnly: true,
        },
      },
    },
    LandingType: {
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255 },
        abbrev: { title: 'Abbrev', type: 'string', maxLength: 255 },
        description: {
          title: 'Description',
          type: 'string',
          maxLength: 2048,
          'x-nullable': true,
        },
      },
    },
    Landing: {
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        attempt: { title: 'Attempt', type: 'boolean', 'x-nullable': true },
        success: { title: 'Success', type: 'boolean', 'x-nullable': true },
        description: { title: 'Description', type: 'string', maxLength: 2048 },
        location: { $ref: '#/definitions/LandingLocation' },
        type: { $ref: '#/definitions/LandingType' },
      },
    },
    LaunchSerializerMini: {
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'string', format: 'uuid', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 2048 },
      },
    },
    FirstStage: {
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        type: { title: 'Type', type: 'string', readOnly: true },
        reused: { title: 'Reused', type: 'boolean', 'x-nullable': true },
        launcher_flight_number: {
          title: 'Launcher flight number',
          type: 'string',
          readOnly: true,
        },
        launcher: { $ref: '#/definitions/LauncherDetailed' },
        landing: { $ref: '#/definitions/Landing' },
        previous_flight_date: {
          title: 'Previous flight date',
          type: 'string',
          readOnly: true,
        },
        turn_around_time_days: {
          title: 'Turn around time days',
          type: 'string',
          readOnly: true,
        },
        previous_flight: { $ref: '#/definitions/LaunchSerializerMini' },
      },
    },
    AstronautDetailedSerializerNoFlights: {
      required: ['name', 'date_of_birth', 'nationality', 'bio'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
        type: { $ref: '#/definitions/AstronautType' },
        status: { $ref: '#/definitions/AstronautStatus' },
        agency: { $ref: '#/definitions/AgencySerializerMini' },
        date_of_birth: {
          title: 'Date of birth',
          type: 'string',
          format: 'date',
        },
        date_of_death: {
          title: 'Date of death',
          type: 'string',
          format: 'date',
          'x-nullable': true,
        },
        nationality: {
          title: 'Nationality',
          type: 'string',
          maxLength: 255,
          minLength: 1,
        },
        twitter: {
          title: 'Twitter',
          type: 'string',
          maxLength: 255,
          'x-nullable': true,
        },
        instagram: {
          title: 'Instagram',
          type: 'string',
          maxLength: 255,
          'x-nullable': true,
        },
        bio: { title: 'Bio', type: 'string', maxLength: 2048, minLength: 1 },
        profile_image: {
          title: 'Profile image',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
        wiki: {
          title: 'Wiki',
          type: 'string',
          maxLength: 255,
          'x-nullable': true,
        },
        last_flight: { title: 'Last flight', type: 'string', readOnly: true },
        first_flight: { title: 'First flight', type: 'string', readOnly: true },
      },
    },
    AstronautFlight: {
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        role: { $ref: '#/definitions/AstronautRole' },
        astronaut: {
          $ref: '#/definitions/AstronautDetailedSerializerNoFlights',
        },
      },
    },
    DockingEventSerializerForSpacecraftFlight: {
      required: ['docking'],
      type: 'object',
      properties: {
        spacestation: { $ref: '#/definitions/SpaceStationSerializerForCommon' },
        docking: { title: 'Docking', type: 'string', format: 'date-time' },
        departure: {
          title: 'Departure',
          type: 'string',
          format: 'date-time',
          'x-nullable': true,
        },
        docking_location: { $ref: '#/definitions/DockingLocation' },
      },
    },
    SpacecraftFlightDetailedSerializerForLaunch: {
      required: ['id'],
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer' },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        mission_end: {
          title: 'Mission end',
          type: 'string',
          format: 'date-time',
          'x-nullable': true,
        },
        destination: {
          title: 'Destination',
          type: 'string',
          maxLength: 255,
          'x-nullable': true,
        },
        launch_crew: {
          type: 'array',
          items: { $ref: '#/definitions/AstronautFlight' },
          readOnly: true,
        },
        onboard_crew: {
          type: 'array',
          items: { $ref: '#/definitions/AstronautFlight' },
          readOnly: true,
        },
        landing_crew: {
          type: 'array',
          items: { $ref: '#/definitions/AstronautFlight' },
          readOnly: true,
        },
        spacecraft: { $ref: '#/definitions/SpacecraftDetailedNoFlights' },
        docking_events: {
          type: 'array',
          items: {
            $ref: '#/definitions/DockingEventSerializerForSpacecraftFlight',
          },
          readOnly: true,
        },
      },
    },
    RocketDetailed: {
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        configuration: { $ref: '#/definitions/LauncherConfigDetail' },
        launcher_stage: {
          type: 'array',
          items: { $ref: '#/definitions/FirstStage' },
          readOnly: true,
        },
        spacecraft_stage: {
          $ref: '#/definitions/SpacecraftFlightDetailedSerializerForLaunch',
        },
      },
    },
    InfoURL: {
      required: ['url'],
      type: 'object',
      properties: {
        priority: {
          title: 'Priority',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
        },
        title: {
          title: 'Title',
          type: 'string',
          maxLength: 200,
          'x-nullable': true,
        },
        description: {
          title: 'Description',
          type: 'string',
          maxLength: 350,
          'x-nullable': true,
        },
        feature_image: {
          title: 'Feature image',
          type: 'string',
          format: 'uri',
          maxLength: 200,
          'x-nullable': true,
        },
        url: { title: 'Url', type: 'string', format: 'uri', minLength: 1 },
      },
    },
    VidURL: {
      required: ['url'],
      type: 'object',
      properties: {
        priority: {
          title: 'Priority',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
        },
        title: {
          title: 'Title',
          type: 'string',
          maxLength: 200,
          'x-nullable': true,
        },
        description: {
          title: 'Description',
          type: 'string',
          maxLength: 350,
          'x-nullable': true,
        },
        feature_image: {
          title: 'Feature image',
          type: 'string',
          format: 'uri',
          maxLength: 200,
          'x-nullable': true,
        },
        url: { title: 'Url', type: 'string', format: 'uri', minLength: 1 },
      },
    },
    LaunchDetailed: {
      required: ['slug'],
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'string', format: 'uuid', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        slug: {
          title: 'Slug',
          type: 'string',
          format: 'slug',
          pattern: '^[-a-zA-Z0-9_]+$',
          minLength: 1,
        },
        flightclub_url: {
          title: 'Flightclub url',
          type: 'string',
          format: 'uri',
          readOnly: true,
          minLength: 1,
        },
        r_spacex_api_id: {
          title: 'R spacex api id',
          type: 'string',
          readOnly: true,
          minLength: 1,
        },
        name: { title: 'Name', type: 'string', readOnly: true, minLength: 1 },
        status: { $ref: '#/definitions/LaunchStatus' },
        last_updated: {
          title: 'Last updated',
          type: 'string',
          format: 'date-time',
          readOnly: true,
        },
        updates: {
          type: 'array',
          items: { $ref: '#/definitions/Update' },
          readOnly: true,
        },
        net: {
          title: 'Net',
          type: 'string',
          format: 'date-time',
          readOnly: true,
        },
        window_end: {
          title: 'Window end',
          type: 'string',
          format: 'date-time',
          readOnly: true,
        },
        window_start: {
          title: 'Window start',
          type: 'string',
          format: 'date-time',
          readOnly: true,
        },
        probability: { title: 'Probability', type: 'integer', readOnly: true },
        holdreason: {
          title: 'Holdreason',
          type: 'string',
          readOnly: true,
          minLength: 1,
        },
        failreason: {
          title: 'Failreason',
          type: 'string',
          readOnly: true,
          minLength: 1,
        },
        hashtag: {
          title: 'Hashtag',
          type: 'string',
          readOnly: true,
          minLength: 1,
        },
        launch_service_provider: {
          $ref: '#/definitions/AgencySerializerDetailedCommon',
        },
        rocket: { $ref: '#/definitions/RocketDetailed' },
        mission: { $ref: '#/definitions/Mission' },
        pad: { $ref: '#/definitions/Pad' },
        infoURLs: {
          type: 'array',
          items: { $ref: '#/definitions/InfoURL' },
          readOnly: true,
        },
        vidURLs: {
          type: 'array',
          items: { $ref: '#/definitions/VidURL' },
          readOnly: true,
        },
        webcast_live: {
          title: 'Webcast live',
          type: 'boolean',
          readOnly: true,
        },
        image: { title: 'Image', type: 'string', readOnly: true },
        infographic: { title: 'Infographic', type: 'string', readOnly: true },
        program: {
          type: 'array',
          items: { $ref: '#/definitions/Program' },
          readOnly: true,
        },
        orbital_launch_attempt_count: {
          title: 'Orbital launch attempt count',
          type: 'integer',
          readOnly: true,
        },
        location_launch_attempt_count: {
          title: 'Location launch attempt count',
          type: 'integer',
          readOnly: true,
        },
        pad_launch_attempt_count: {
          title: 'Pad launch attempt count',
          type: 'integer',
          readOnly: true,
        },
        agency_launch_attempt_count: {
          title: 'Agency launch attempt count',
          type: 'integer',
          readOnly: true,
        },
        orbital_launch_attempt_count_year: {
          title: 'Orbital launch attempt count year',
          type: 'integer',
          readOnly: true,
        },
        location_launch_attempt_count_year: {
          title: 'Location launch attempt count year',
          type: 'integer',
          readOnly: true,
        },
        pad_launch_attempt_count_year: {
          title: 'Pad launch attempt count year',
          type: 'integer',
          readOnly: true,
        },
        agency_launch_attempt_count_year: {
          title: 'Agency launch attempt count year',
          type: 'integer',
          readOnly: true,
        },
        mission_patches: {
          type: 'array',
          items: { $ref: '#/definitions/MissionPatch' },
          readOnly: true,
        },
        notifications_enabled: {
          title: 'Notifications enabled',
          type: 'boolean',
        },
      },
    },
    Launcher: {
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        flight_proven: { title: 'Flight proven', type: 'boolean' },
        serial_number: {
          title: 'Serial number',
          type: 'string',
          maxLength: 10,
          'x-nullable': true,
        },
        status: { title: 'Status', type: 'string', maxLength: 2048 },
        details: { title: 'Details', type: 'string', maxLength: 2048 },
        launcher_config: { $ref: '#/definitions/LauncherConfigList' },
        image_url: {
          title: 'Image url',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
        flights: { title: 'Flights', type: 'string', readOnly: true },
        last_launch_date: {
          title: 'Last launch date',
          type: 'string',
          readOnly: true,
        },
        first_launch_date: {
          title: 'First launch date',
          type: 'string',
          readOnly: true,
        },
      },
    },
    LauncherDetail: {
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        flight_proven: { title: 'Flight proven', type: 'boolean' },
        serial_number: {
          title: 'Serial number',
          type: 'string',
          maxLength: 10,
          'x-nullable': true,
        },
        status: { title: 'Status', type: 'string', maxLength: 2048 },
        details: { title: 'Details', type: 'string', maxLength: 2048 },
        launcher_config: { $ref: '#/definitions/LauncherConfigDetail' },
        image_url: {
          title: 'Image url',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
        successful_landings: {
          title: 'Successful landings',
          type: 'string',
          readOnly: true,
        },
        attempted_landings: {
          title: 'Attempted landings',
          type: 'string',
          readOnly: true,
        },
        flights: { title: 'Flights', type: 'string', readOnly: true },
        last_launch_date: {
          title: 'Last launch date',
          type: 'string',
          readOnly: true,
        },
        first_launch_date: {
          title: 'First launch date',
          type: 'string',
          readOnly: true,
        },
      },
    },
    PadSerializerNoLocation: {
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        agency_id: {
          title: 'Agency id',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
          'x-nullable': true,
        },
        name: { title: 'Name', type: 'string', maxLength: 255 },
        info_url: {
          title: 'Info url',
          type: 'string',
          format: 'uri',
          maxLength: 200,
          'x-nullable': true,
        },
        wiki_url: {
          title: 'Wiki url',
          type: 'string',
          format: 'uri',
          maxLength: 200,
          'x-nullable': true,
        },
        map_url: {
          title: 'Map url',
          type: 'string',
          format: 'uri',
          maxLength: 200,
          'x-nullable': true,
        },
        latitude: {
          title: 'Latitude',
          type: 'string',
          maxLength: 30,
          'x-nullable': true,
        },
        longitude: {
          title: 'Longitude',
          type: 'string',
          maxLength: 30,
          'x-nullable': true,
        },
        map_image: {
          title: 'Map image',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
        total_launch_count: {
          title: 'Total launch count',
          type: 'string',
          readOnly: true,
        },
      },
    },
    LocationDetail: {
      required: ['pads'],
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255 },
        country_code: { title: 'Country code', type: 'string', maxLength: 255 },
        map_image: {
          title: 'Map image',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
        total_launch_count: {
          title: 'Total launch count',
          type: 'string',
          readOnly: true,
        },
        total_landing_count: {
          title: 'Total landing count',
          type: 'string',
          readOnly: true,
        },
        pads: {
          type: 'array',
          items: { $ref: '#/definitions/PadSerializerNoLocation' },
        },
      },
    },
    SpacecraftFlightDetailed: {
      required: ['id'],
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer' },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        mission_end: {
          title: 'Mission end',
          type: 'string',
          format: 'date-time',
          'x-nullable': true,
        },
        destination: {
          title: 'Destination',
          type: 'string',
          maxLength: 255,
          'x-nullable': true,
        },
        launch_crew: {
          type: 'array',
          items: { $ref: '#/definitions/AstronautFlight' },
          readOnly: true,
        },
        onboard_crew: {
          type: 'array',
          items: { $ref: '#/definitions/AstronautFlight' },
          readOnly: true,
        },
        landing_crew: {
          type: 'array',
          items: { $ref: '#/definitions/AstronautFlight' },
          readOnly: true,
        },
        spacecraft: { $ref: '#/definitions/SpacecraftDetailedNoFlights' },
        launch: { $ref: '#/definitions/LaunchSerializerCommon' },
        docking_events: {
          type: 'array',
          items: {
            $ref: '#/definitions/DockingEventSerializerForSpacecraftFlight',
          },
          readOnly: true,
        },
      },
    },
    SpacecraftDetailed: {
      required: ['name', 'description'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
        serial_number: {
          title: 'Serial number',
          type: 'string',
          maxLength: 255,
          'x-nullable': true,
        },
        status: { $ref: '#/definitions/SpacecraftStatus' },
        description: {
          title: 'Description',
          type: 'string',
          maxLength: 2048,
          minLength: 1,
        },
        spacecraft_config: {
          $ref: '#/definitions/SpacecraftConfigurationDetail',
        },
        flights: {
          type: 'array',
          items: { $ref: '#/definitions/SpacecraftFlight' },
          readOnly: true,
        },
      },
    },
    SpaceStationType: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
      },
    },
    ExpeditionSerializerForSpacestation: {
      required: ['name', 'start'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
        start: { title: 'Start', type: 'string', format: 'date-time' },
        end: {
          title: 'End',
          type: 'string',
          format: 'date-time',
          'x-nullable': true,
        },
      },
    },
    SpaceStation: {
      required: ['name', 'founded', 'description'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
        status: { $ref: '#/definitions/SpaceStationStatus' },
        type: { $ref: '#/definitions/SpaceStationType' },
        founded: { title: 'Founded', type: 'string', format: 'date' },
        deorbited: {
          title: 'Deorbited',
          type: 'string',
          format: 'date',
          'x-nullable': true,
        },
        description: {
          title: 'Description',
          type: 'string',
          maxLength: 2048,
          minLength: 1,
        },
        orbit: { title: 'Orbit', type: 'string', readOnly: true },
        owners: {
          type: 'array',
          items: { $ref: '#/definitions/AgencyList' },
          readOnly: true,
        },
        active_expedition: {
          type: 'array',
          items: { $ref: '#/definitions/ExpeditionSerializerForSpacestation' },
          readOnly: true,
        },
        image_url: {
          title: 'Image url',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
      },
    },
    ExpeditionDetailedSerializerForSpacestation: {
      required: ['name', 'start'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
        start: { title: 'Start', type: 'string', format: 'date-time' },
        end: {
          title: 'End',
          type: 'string',
          format: 'date-time',
          'x-nullable': true,
        },
        crew: {
          type: 'array',
          items: { $ref: '#/definitions/AstronautFlightForExpedition' },
          readOnly: true,
        },
      },
    },
    SpacecraftFlightForDockingEvent: {
      required: ['id'],
      type: 'object',
      properties: {
        id: { title: 'Id', type: 'integer' },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        spacecraft: { $ref: '#/definitions/SpacecraftDetailedNoFlights' },
        launch: { $ref: '#/definitions/LaunchSerializerCommon' },
      },
    },
    DockingEventDetailedSerializerForSpacestation: {
      required: ['docking'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        docking: { title: 'Docking', type: 'string', format: 'date-time' },
        departure: {
          title: 'Departure',
          type: 'string',
          format: 'date-time',
          'x-nullable': true,
        },
        flight_vehicle: {
          $ref: '#/definitions/SpacecraftFlightForDockingEvent',
        },
      },
    },
    DockingLocationSerializerForSpacestation: {
      required: ['name'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
        docked: {
          $ref: '#/definitions/DockingEventDetailedSerializerForSpacestation',
        },
      },
    },
    SpaceStationDetailed: {
      required: ['name', 'founded', 'description'],
      type: 'object',
      properties: {
        id: { title: 'ID', type: 'integer', readOnly: true },
        url: { title: 'Url', type: 'string', format: 'uri', readOnly: true },
        name: { title: 'Name', type: 'string', maxLength: 255, minLength: 1 },
        status: { $ref: '#/definitions/SpaceStationStatus' },
        type: { $ref: '#/definitions/SpaceStationType' },
        founded: { title: 'Founded', type: 'string', format: 'date' },
        deorbited: {
          title: 'Deorbited',
          type: 'string',
          format: 'date',
          'x-nullable': true,
        },
        height: { title: 'Height (m)', type: 'number', 'x-nullable': true },
        width: { title: 'Width (m)', type: 'number', 'x-nullable': true },
        mass: { title: 'Mass (T)', type: 'number', 'x-nullable': true },
        volume: {
          title: 'Volume (m^3)',
          type: 'integer',
          maximum: 2147483647,
          minimum: -2147483648,
          'x-nullable': true,
        },
        description: {
          title: 'Description',
          type: 'string',
          maxLength: 2048,
          minLength: 1,
        },
        orbit: { title: 'Orbit', type: 'string', readOnly: true },
        onboard_crew: { title: 'Onboard crew', type: 'string', readOnly: true },
        owners: {
          type: 'array',
          items: { $ref: '#/definitions/Agency' },
          readOnly: true,
        },
        active_expeditions: {
          type: 'array',
          items: {
            $ref: '#/definitions/ExpeditionDetailedSerializerForSpacestation',
          },
          readOnly: true,
        },
        docking_location: {
          type: 'array',
          items: {
            $ref: '#/definitions/DockingLocationSerializerForSpacestation',
          },
          readOnly: true,
        },
        image_url: {
          title: 'Image url',
          type: 'string',
          readOnly: true,
          'x-nullable': true,
          format: 'uri',
        },
      },
    },
  },
};
module.exports = data;
